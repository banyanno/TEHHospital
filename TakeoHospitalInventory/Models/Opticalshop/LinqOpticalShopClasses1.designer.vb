'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8825
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<System.Data.Linq.Mapping.DatabaseAttribute(Name:="TakeoDB")>  _
Partial Public Class LinqOpticalShopClassesDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertINCOME_TYPE(instance As INCOME_TYPE)
    End Sub
  Partial Private Sub UpdateINCOME_TYPE(instance As INCOME_TYPE)
    End Sub
  Partial Private Sub DeleteINCOME_TYPE(instance As INCOME_TYPE)
    End Sub
  Partial Private Sub InsertBARCODE(instance As BARCODE)
    End Sub
  Partial Private Sub UpdateBARCODE(instance As BARCODE)
    End Sub
  Partial Private Sub DeleteBARCODE(instance As BARCODE)
    End Sub
  Partial Private Sub InsertDONATION(instance As DONATION)
    End Sub
  Partial Private Sub UpdateDONATION(instance As DONATION)
    End Sub
  Partial Private Sub DeleteDONATION(instance As DONATION)
    End Sub
  Partial Private Sub InsertRECEIPT_CUSTOMER(instance As RECEIPT_CUSTOMER)
    End Sub
  Partial Private Sub UpdateRECEIPT_CUSTOMER(instance As RECEIPT_CUSTOMER)
    End Sub
  Partial Private Sub DeleteRECEIPT_CUSTOMER(instance As RECEIPT_CUSTOMER)
    End Sub
  Partial Private Sub InsertACCOUNT_PAYABLE(instance As ACCOUNT_PAYABLE)
    End Sub
  Partial Private Sub UpdateACCOUNT_PAYABLE(instance As ACCOUNT_PAYABLE)
    End Sub
  Partial Private Sub DeleteACCOUNT_PAYABLE(instance As ACCOUNT_PAYABLE)
    End Sub
  Partial Private Sub InsertACCOUNT_PAYABLE_DETAIL(instance As ACCOUNT_PAYABLE_DETAIL)
    End Sub
  Partial Private Sub UpdateACCOUNT_PAYABLE_DETAIL(instance As ACCOUNT_PAYABLE_DETAIL)
    End Sub
  Partial Private Sub DeleteACCOUNT_PAYABLE_DETAIL(instance As ACCOUNT_PAYABLE_DETAIL)
    End Sub
  Partial Private Sub InserttblPatientReceipt(instance As tblPatientReceipt)
    End Sub
  Partial Private Sub UpdatetblPatientReceipt(instance As tblPatientReceipt)
    End Sub
  Partial Private Sub DeletetblPatientReceipt(instance As tblPatientReceipt)
    End Sub
  Partial Private Sub InsertRECEIPT(instance As RECEIPT)
    End Sub
  Partial Private Sub UpdateRECEIPT(instance As RECEIPT)
    End Sub
  Partial Private Sub DeleteRECEIPT(instance As RECEIPT)
    End Sub
  Partial Private Sub InsertRECEIPT_DETAIL(instance As RECEIPT_DETAIL)
    End Sub
  Partial Private Sub UpdateRECEIPT_DETAIL(instance As RECEIPT_DETAIL)
    End Sub
  Partial Private Sub DeleteRECEIPT_DETAIL(instance As RECEIPT_DETAIL)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.TakeoHospitalInventory.My.MySettings.Default.TakeoDBConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property INCOME_TYPEs() As System.Data.Linq.Table(Of INCOME_TYPE)
		Get
			Return Me.GetTable(Of INCOME_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property BARCODEs() As System.Data.Linq.Table(Of BARCODE)
		Get
			Return Me.GetTable(Of BARCODE)
		End Get
	End Property
	
	Public ReadOnly Property DONATIONs() As System.Data.Linq.Table(Of DONATION)
		Get
			Return Me.GetTable(Of DONATION)
		End Get
	End Property
	
	Public ReadOnly Property RECEIPT_CUSTOMERs() As System.Data.Linq.Table(Of RECEIPT_CUSTOMER)
		Get
			Return Me.GetTable(Of RECEIPT_CUSTOMER)
		End Get
	End Property
	
	Public ReadOnly Property ACCOUNT_PAYABLEs() As System.Data.Linq.Table(Of ACCOUNT_PAYABLE)
		Get
			Return Me.GetTable(Of ACCOUNT_PAYABLE)
		End Get
	End Property
	
	Public ReadOnly Property ACCOUNT_PAYABLE_DETAILs() As System.Data.Linq.Table(Of ACCOUNT_PAYABLE_DETAIL)
		Get
			Return Me.GetTable(Of ACCOUNT_PAYABLE_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property tblPatientReceipts() As System.Data.Linq.Table(Of tblPatientReceipt)
		Get
			Return Me.GetTable(Of tblPatientReceipt)
		End Get
	End Property
	
	Public ReadOnly Property RECEIPTs() As System.Data.Linq.Table(Of RECEIPT)
		Get
			Return Me.GetTable(Of RECEIPT)
		End Get
	End Property
	
	Public ReadOnly Property RECEIPT_DETAILs() As System.Data.Linq.Table(Of RECEIPT_DETAIL)
		Get
			Return Me.GetTable(Of RECEIPT_DETAIL)
		End Get
	End Property
End Class

<Table(Name:="dbo.INCOME_TYPE")>  _
Partial Public Class INCOME_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ICID As Decimal
	
	Private _ICType As String
	
	Private _Description As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnICIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnICIDChanged()
    End Sub
    Partial Private Sub OnICTypeChanging(value As String)
    End Sub
    Partial Private Sub OnICTypeChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Column(Storage:="_ICID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ICID() As Decimal
		Get
			Return Me._ICID
		End Get
		Set
			If ((Me._ICID = value)  _
						= false) Then
				Me.OnICIDChanging(value)
				Me.SendPropertyChanging
				Me._ICID = value
				Me.SendPropertyChanged("ICID")
				Me.OnICIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ICType", DbType:="NVarChar(50)")>  _
	Public Property ICType() As String
		Get
			Return Me._ICType
		End Get
		Set
			If (String.Equals(Me._ICType, value) = false) Then
				Me.OnICTypeChanging(value)
				Me.SendPropertyChanging
				Me._ICType = value
				Me.SendPropertyChanged("ICType")
				Me.OnICTypeChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Description", DbType:="NVarChar(150)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Table(Name:="dbo.BARCODE")>  _
Partial Public Class BARCODE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BarcodeID As Decimal
	
	Private _BarcodeNo As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBarcodeIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBarcodeIDChanged()
    End Sub
    Partial Private Sub OnBarcodeNoChanging(value As String)
    End Sub
    Partial Private Sub OnBarcodeNoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Column(Storage:="_BarcodeID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BarcodeID() As Decimal
		Get
			Return Me._BarcodeID
		End Get
		Set
			If ((Me._BarcodeID = value)  _
						= false) Then
				Me.OnBarcodeIDChanging(value)
				Me.SendPropertyChanging
				Me._BarcodeID = value
				Me.SendPropertyChanged("BarcodeID")
				Me.OnBarcodeIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_BarcodeNo", DbType:="VarChar(50)")>  _
	Public Property BarcodeNo() As String
		Get
			Return Me._BarcodeNo
		End Get
		Set
			If (String.Equals(Me._BarcodeNo, value) = false) Then
				Me.OnBarcodeNoChanging(value)
				Me.SendPropertyChanging
				Me._BarcodeNo = value
				Me.SendPropertyChanged("BarcodeNo")
				Me.OnBarcodeNoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Table(Name:="dbo.DONATION")>  _
Partial Public Class DONATION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DonationID As Decimal
	
	Private _DonationName As String
	
	Private _Description As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDonationIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnDonationIDChanged()
    End Sub
    Partial Private Sub OnDonationNameChanging(value As String)
    End Sub
    Partial Private Sub OnDonationNameChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Column(Storage:="_DonationID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DonationID() As Decimal
		Get
			Return Me._DonationID
		End Get
		Set
			If ((Me._DonationID = value)  _
						= false) Then
				Me.OnDonationIDChanging(value)
				Me.SendPropertyChanging
				Me._DonationID = value
				Me.SendPropertyChanged("DonationID")
				Me.OnDonationIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_DonationName", DbType:="NVarChar(50)")>  _
	Public Property DonationName() As String
		Get
			Return Me._DonationName
		End Get
		Set
			If (String.Equals(Me._DonationName, value) = false) Then
				Me.OnDonationNameChanging(value)
				Me.SendPropertyChanging
				Me._DonationName = value
				Me.SendPropertyChanged("DonationName")
				Me.OnDonationNameChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Description", DbType:="NVarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Table(Name:="dbo.RECEIPT_CUSTOMER")>  _
Partial Public Class RECEIPT_CUSTOMER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CustID As Decimal
	
	Private _CustomerNo As System.Nullable(Of Decimal)
	
	Private _CusName As String
	
	Private _Female As System.Nullable(Of Char)
	
	Private _Male As System.Nullable(Of Char)
	
	Private _Sex As System.Nullable(Of Char)
	
	Private _Age As System.Nullable(Of Decimal)
	
	Private _Occupation As String
	
	Private _OccNo As System.Nullable(Of Decimal)
	
	Private _Province As System.Nullable(Of Decimal)
	
	Private _District As System.Nullable(Of Decimal)
	
	Private _Commune As System.Nullable(Of Decimal)
	
	Private _Village As System.Nullable(Of Decimal)
	
	Private _Address As String
	
	Private _IsPatient As System.Nullable(Of Boolean)
	
	Private _CusNameEng As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCustIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCustIDChanged()
    End Sub
    Partial Private Sub OnCustomerNoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCustomerNoChanged()
    End Sub
    Partial Private Sub OnCusNameChanging(value As String)
    End Sub
    Partial Private Sub OnCusNameChanged()
    End Sub
    Partial Private Sub OnFemaleChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnFemaleChanged()
    End Sub
    Partial Private Sub OnMaleChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnMaleChanged()
    End Sub
    Partial Private Sub OnSexChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnSexChanged()
    End Sub
    Partial Private Sub OnAgeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAgeChanged()
    End Sub
    Partial Private Sub OnOccupationChanging(value As String)
    End Sub
    Partial Private Sub OnOccupationChanged()
    End Sub
    Partial Private Sub OnOccNoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOccNoChanged()
    End Sub
    Partial Private Sub OnProvinceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnProvinceChanged()
    End Sub
    Partial Private Sub OnDistrictChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDistrictChanged()
    End Sub
    Partial Private Sub OnCommuneChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCommuneChanged()
    End Sub
    Partial Private Sub OnVillageChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnVillageChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    Partial Private Sub OnIsPatientChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsPatientChanged()
    End Sub
    Partial Private Sub OnCusNameEngChanging(value As String)
    End Sub
    Partial Private Sub OnCusNameEngChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Column(Storage:="_CustID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CustID() As Decimal
		Get
			Return Me._CustID
		End Get
		Set
			If ((Me._CustID = value)  _
						= false) Then
				Me.OnCustIDChanging(value)
				Me.SendPropertyChanging
				Me._CustID = value
				Me.SendPropertyChanged("CustID")
				Me.OnCustIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_CustomerNo", DbType:="Decimal(18,0)")>  _
	Public Property CustomerNo() As System.Nullable(Of Decimal)
		Get
			Return Me._CustomerNo
		End Get
		Set
			If (Me._CustomerNo.Equals(value) = false) Then
				Me.OnCustomerNoChanging(value)
				Me.SendPropertyChanging
				Me._CustomerNo = value
				Me.SendPropertyChanged("CustomerNo")
				Me.OnCustomerNoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_CusName", DbType:="NVarChar(50)")>  _
	Public Property CusName() As String
		Get
			Return Me._CusName
		End Get
		Set
			If (String.Equals(Me._CusName, value) = false) Then
				Me.OnCusNameChanging(value)
				Me.SendPropertyChanging
				Me._CusName = value
				Me.SendPropertyChanged("CusName")
				Me.OnCusNameChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Female", DbType:="Char(1)")>  _
	Public Property Female() As System.Nullable(Of Char)
		Get
			Return Me._Female
		End Get
		Set
			If (Me._Female.Equals(value) = false) Then
				Me.OnFemaleChanging(value)
				Me.SendPropertyChanging
				Me._Female = value
				Me.SendPropertyChanged("Female")
				Me.OnFemaleChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Male", DbType:="Char(1)")>  _
	Public Property Male() As System.Nullable(Of Char)
		Get
			Return Me._Male
		End Get
		Set
			If (Me._Male.Equals(value) = false) Then
				Me.OnMaleChanging(value)
				Me.SendPropertyChanging
				Me._Male = value
				Me.SendPropertyChanged("Male")
				Me.OnMaleChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Sex", DbType:="Char(1)")>  _
	Public Property Sex() As System.Nullable(Of Char)
		Get
			Return Me._Sex
		End Get
		Set
			If (Me._Sex.Equals(value) = false) Then
				Me.OnSexChanging(value)
				Me.SendPropertyChanging
				Me._Sex = value
				Me.SendPropertyChanged("Sex")
				Me.OnSexChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Age", DbType:="Decimal(18,0)")>  _
	Public Property Age() As System.Nullable(Of Decimal)
		Get
			Return Me._Age
		End Get
		Set
			If (Me._Age.Equals(value) = false) Then
				Me.OnAgeChanging(value)
				Me.SendPropertyChanging
				Me._Age = value
				Me.SendPropertyChanged("Age")
				Me.OnAgeChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Occupation", DbType:="NVarChar(100)")>  _
	Public Property Occupation() As String
		Get
			Return Me._Occupation
		End Get
		Set
			If (String.Equals(Me._Occupation, value) = false) Then
				Me.OnOccupationChanging(value)
				Me.SendPropertyChanging
				Me._Occupation = value
				Me.SendPropertyChanged("Occupation")
				Me.OnOccupationChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_OccNo", DbType:="Decimal(18,0)")>  _
	Public Property OccNo() As System.Nullable(Of Decimal)
		Get
			Return Me._OccNo
		End Get
		Set
			If (Me._OccNo.Equals(value) = false) Then
				Me.OnOccNoChanging(value)
				Me.SendPropertyChanging
				Me._OccNo = value
				Me.SendPropertyChanged("OccNo")
				Me.OnOccNoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Province", DbType:="Decimal(18,0)")>  _
	Public Property Province() As System.Nullable(Of Decimal)
		Get
			Return Me._Province
		End Get
		Set
			If (Me._Province.Equals(value) = false) Then
				Me.OnProvinceChanging(value)
				Me.SendPropertyChanging
				Me._Province = value
				Me.SendPropertyChanged("Province")
				Me.OnProvinceChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_District", DbType:="Decimal(18,0)")>  _
	Public Property District() As System.Nullable(Of Decimal)
		Get
			Return Me._District
		End Get
		Set
			If (Me._District.Equals(value) = false) Then
				Me.OnDistrictChanging(value)
				Me.SendPropertyChanging
				Me._District = value
				Me.SendPropertyChanged("District")
				Me.OnDistrictChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Commune", DbType:="Decimal(18,0)")>  _
	Public Property Commune() As System.Nullable(Of Decimal)
		Get
			Return Me._Commune
		End Get
		Set
			If (Me._Commune.Equals(value) = false) Then
				Me.OnCommuneChanging(value)
				Me.SendPropertyChanging
				Me._Commune = value
				Me.SendPropertyChanged("Commune")
				Me.OnCommuneChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Village", DbType:="Decimal(18,0)")>  _
	Public Property Village() As System.Nullable(Of Decimal)
		Get
			Return Me._Village
		End Get
		Set
			If (Me._Village.Equals(value) = false) Then
				Me.OnVillageChanging(value)
				Me.SendPropertyChanging
				Me._Village = value
				Me.SendPropertyChanged("Village")
				Me.OnVillageChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Address", DbType:="NVarChar(250)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me.OnAddressChanging(value)
				Me.SendPropertyChanging
				Me._Address = value
				Me.SendPropertyChanged("Address")
				Me.OnAddressChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_IsPatient", DbType:="Bit")>  _
	Public Property IsPatient() As System.Nullable(Of Boolean)
		Get
			Return Me._IsPatient
		End Get
		Set
			If (Me._IsPatient.Equals(value) = false) Then
				Me.OnIsPatientChanging(value)
				Me.SendPropertyChanging
				Me._IsPatient = value
				Me.SendPropertyChanged("IsPatient")
				Me.OnIsPatientChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_CusNameEng", DbType:="NVarChar(100)")>  _
	Public Property CusNameEng() As String
		Get
			Return Me._CusNameEng
		End Get
		Set
			If (String.Equals(Me._CusNameEng, value) = false) Then
				Me.OnCusNameEngChanging(value)
				Me.SendPropertyChanging
				Me._CusNameEng = value
				Me.SendPropertyChanged("CusNameEng")
				Me.OnCusNameEngChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Table(Name:="dbo.ACCOUNT_PAYABLE")>  _
Partial Public Class ACCOUNT_PAYABLE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _AccountID As Decimal
	
	Private _AccountName As String
	
	Private _Description As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAccountIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnAccountIDChanged()
    End Sub
    Partial Private Sub OnAccountNameChanging(value As String)
    End Sub
    Partial Private Sub OnAccountNameChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Column(Storage:="_AccountID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property AccountID() As Decimal
		Get
			Return Me._AccountID
		End Get
		Set
			If ((Me._AccountID = value)  _
						= false) Then
				Me.OnAccountIDChanging(value)
				Me.SendPropertyChanging
				Me._AccountID = value
				Me.SendPropertyChanged("AccountID")
				Me.OnAccountIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_AccountName", DbType:="NVarChar(50)")>  _
	Public Property AccountName() As String
		Get
			Return Me._AccountName
		End Get
		Set
			If (String.Equals(Me._AccountName, value) = false) Then
				Me.OnAccountNameChanging(value)
				Me.SendPropertyChanging
				Me._AccountName = value
				Me.SendPropertyChanged("AccountName")
				Me.OnAccountNameChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Description", DbType:="NVarChar(150)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Table(Name:="dbo.ACCOUNT_PAYABLE_DETAIL")>  _
Partial Public Class ACCOUNT_PAYABLE_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ACC_PAID_ID As Decimal
	
	Private _ACCOUNTID As System.Nullable(Of Decimal)
	
	Private _DATE_PAID As System.Nullable(Of Date)
	
	Private _AMOUNT_REAL As System.Nullable(Of Double)
	
	Private _AMOUNT_DOLAR As System.Nullable(Of Double)
	
	Private _IS_DOLAR As System.Nullable(Of Boolean)
	
	Private _IS_RIEL As System.Nullable(Of Boolean)
	
	Private _DESCRIPTION As String
	
	Private _IS_DELETE As System.Nullable(Of Boolean)
	
	Private _DEPART_ID As System.Nullable(Of Decimal)
	
	Private _DEPART_NAME As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnACC_PAID_IDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnACC_PAID_IDChanged()
    End Sub
    Partial Private Sub OnACCOUNTIDChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnACCOUNTIDChanged()
    End Sub
    Partial Private Sub OnDATE_PAIDChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATE_PAIDChanged()
    End Sub
    Partial Private Sub OnAMOUNT_REALChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAMOUNT_REALChanged()
    End Sub
    Partial Private Sub OnAMOUNT_DOLARChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAMOUNT_DOLARChanged()
    End Sub
    Partial Private Sub OnIS_DOLARChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_DOLARChanged()
    End Sub
    Partial Private Sub OnIS_RIELChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_RIELChanged()
    End Sub
    Partial Private Sub OnDESCRIPTIONChanging(value As String)
    End Sub
    Partial Private Sub OnDESCRIPTIONChanged()
    End Sub
    Partial Private Sub OnIS_DELETEChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIS_DELETEChanged()
    End Sub
    Partial Private Sub OnDEPART_IDChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDEPART_IDChanged()
    End Sub
    Partial Private Sub OnDEPART_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnDEPART_NAMEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Column(Storage:="_ACC_PAID_ID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ACC_PAID_ID() As Decimal
		Get
			Return Me._ACC_PAID_ID
		End Get
		Set
			If ((Me._ACC_PAID_ID = value)  _
						= false) Then
				Me.OnACC_PAID_IDChanging(value)
				Me.SendPropertyChanging
				Me._ACC_PAID_ID = value
				Me.SendPropertyChanged("ACC_PAID_ID")
				Me.OnACC_PAID_IDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ACCOUNTID", DbType:="Decimal(18,0)")>  _
	Public Property ACCOUNTID() As System.Nullable(Of Decimal)
		Get
			Return Me._ACCOUNTID
		End Get
		Set
			If (Me._ACCOUNTID.Equals(value) = false) Then
				Me.OnACCOUNTIDChanging(value)
				Me.SendPropertyChanging
				Me._ACCOUNTID = value
				Me.SendPropertyChanged("ACCOUNTID")
				Me.OnACCOUNTIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_DATE_PAID", DbType:="DateTime")>  _
	Public Property DATE_PAID() As System.Nullable(Of Date)
		Get
			Return Me._DATE_PAID
		End Get
		Set
			If (Me._DATE_PAID.Equals(value) = false) Then
				Me.OnDATE_PAIDChanging(value)
				Me.SendPropertyChanging
				Me._DATE_PAID = value
				Me.SendPropertyChanged("DATE_PAID")
				Me.OnDATE_PAIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_AMOUNT_REAL", DbType:="Float")>  _
	Public Property AMOUNT_REAL() As System.Nullable(Of Double)
		Get
			Return Me._AMOUNT_REAL
		End Get
		Set
			If (Me._AMOUNT_REAL.Equals(value) = false) Then
				Me.OnAMOUNT_REALChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT_REAL = value
				Me.SendPropertyChanged("AMOUNT_REAL")
				Me.OnAMOUNT_REALChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_AMOUNT_DOLAR", DbType:="Float")>  _
	Public Property AMOUNT_DOLAR() As System.Nullable(Of Double)
		Get
			Return Me._AMOUNT_DOLAR
		End Get
		Set
			If (Me._AMOUNT_DOLAR.Equals(value) = false) Then
				Me.OnAMOUNT_DOLARChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT_DOLAR = value
				Me.SendPropertyChanged("AMOUNT_DOLAR")
				Me.OnAMOUNT_DOLARChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_IS_DOLAR", DbType:="Bit")>  _
	Public Property IS_DOLAR() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_DOLAR
		End Get
		Set
			If (Me._IS_DOLAR.Equals(value) = false) Then
				Me.OnIS_DOLARChanging(value)
				Me.SendPropertyChanging
				Me._IS_DOLAR = value
				Me.SendPropertyChanged("IS_DOLAR")
				Me.OnIS_DOLARChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_IS_RIEL", DbType:="Bit")>  _
	Public Property IS_RIEL() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_RIEL
		End Get
		Set
			If (Me._IS_RIEL.Equals(value) = false) Then
				Me.OnIS_RIELChanging(value)
				Me.SendPropertyChanging
				Me._IS_RIEL = value
				Me.SendPropertyChanged("IS_RIEL")
				Me.OnIS_RIELChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_DESCRIPTION", DbType:="NVarChar(150)")>  _
	Public Property DESCRIPTION() As String
		Get
			Return Me._DESCRIPTION
		End Get
		Set
			If (String.Equals(Me._DESCRIPTION, value) = false) Then
				Me.OnDESCRIPTIONChanging(value)
				Me.SendPropertyChanging
				Me._DESCRIPTION = value
				Me.SendPropertyChanged("DESCRIPTION")
				Me.OnDESCRIPTIONChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_IS_DELETE", DbType:="Bit")>  _
	Public Property IS_DELETE() As System.Nullable(Of Boolean)
		Get
			Return Me._IS_DELETE
		End Get
		Set
			If (Me._IS_DELETE.Equals(value) = false) Then
				Me.OnIS_DELETEChanging(value)
				Me.SendPropertyChanging
				Me._IS_DELETE = value
				Me.SendPropertyChanged("IS_DELETE")
				Me.OnIS_DELETEChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_DEPART_ID", DbType:="numeric(18, 0)")>  _
	Public Property DEPART_ID() As System.Nullable(Of Decimal)
		Get
			Return Me._DEPART_ID
		End Get
		Set
			If (Me._DEPART_ID.Equals(value) = false) Then
				Me.OnDEPART_IDChanging(value)
				Me.SendPropertyChanging
				Me._DEPART_ID = value
				Me.SendPropertyChanged("DEPART_ID")
				Me.OnDEPART_IDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_DEPART_NAME", DbType:="nvarchar(50)")>  _
	Public Property DEPART_NAME() As String
		Get
			Return Me._DEPART_NAME
		End Get
		Set
			If (String.Equals(Me._DEPART_NAME, value) = false) Then
				Me.OnDEPART_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._DEPART_NAME = value
				Me.SendPropertyChanged("DEPART_NAME")
				Me.OnDEPART_NAMEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Table(Name:="dbo.tblPatientReceipt")>  _
Partial Public Class tblPatientReceipt
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Long
	
	Private _ReceiptNo As Long
	
	Private _IDCashReceipt As String
	
	Private _HN As Decimal
	
	Private _PatientName As String
	
	Private _CashRiel As System.Nullable(Of Double)
	
	Private _CashUSD As System.Nullable(Of Double)
	
	Private _TotalRiel As System.Nullable(Of Double)
	
	Private _TotalUSD As System.Nullable(Of Double)
	
	Private _OperationFeeRiel As System.Nullable(Of Double)
	
	Private _OperationFeeUSD As System.Nullable(Of Double)
	
	Private _ArtificialEyeFeeRiel As System.Nullable(Of Double)
	
	Private _ArtificialEyeFeeUSD As System.Nullable(Of Double)
	
	Private _OtherFeeRiel As System.Nullable(Of Double)
	
	Private _OtherFeeUSD As System.Nullable(Of Double)
	
	Private _ConsultationFeeRiel As System.Nullable(Of Double)
	
	Private _ConsultationFeeUSD As System.Nullable(Of Double)
	
	Private _FollowUpFeeRiel As System.Nullable(Of Double)
	
	Private _FollowUpFeeUSD As System.Nullable(Of Double)
	
	Private _MedicineFeeRiel As System.Nullable(Of Double)
	
	Private _MedicineFeeUSD As System.Nullable(Of Double)
	
	Private _GlassFeeRiel As System.Nullable(Of Double)
	
	Private _GlassFeeUSD As System.Nullable(Of Double)
	
	Private _SocialFeeRiel As System.Nullable(Of Double)
	
	Private _SocialFeeUSD As System.Nullable(Of Double)
	
	Private _FullFeeRiel As System.Nullable(Of Double)
	
	Private _FullFeeUSD As System.Nullable(Of Double)
	
	Private _Rates As System.Nullable(Of Double)
	
	Private _AmoutWord As String
	
	Private _ConOP As System.Nullable(Of Char)
	
	Private _ConAE As System.Nullable(Of Char)
	
	Private _ConOT As System.Nullable(Of Char)
	
	Private _ConCON As System.Nullable(Of Char)
	
	Private _ConFOL As System.Nullable(Of Char)
	
	Private _ConMED As System.Nullable(Of Char)
	
	Private _ConGLA As System.Nullable(Of Char)
	
	Private _ConSocialFee As System.Nullable(Of Char)
	
	Private _ConFullFee As System.Nullable(Of Char)
	
	Private _ConGeneral As String
	
	Private _CashierIn As String
	
	Private _CashierUpdate As String
	
	Private _PrintCount As System.Nullable(Of Integer)
	
	Private _DateIn As System.Nullable(Of Date)
	
	Private _DateUpdate As System.Nullable(Of Date)
	
	Private _DateNow As System.Nullable(Of Date)
	
	Private _ConPay As System.Nullable(Of Char)
	
	Private _ConDelete As System.Nullable(Of Char)
	
	Private _Years As System.Nullable(Of Integer)
	
	Private _Operation As String
	
	Private _IsDonation As System.Nullable(Of Boolean)
	
	Private _DonationID As System.Nullable(Of Decimal)
	
	Private _DonationName As String
	
	Private _DonationPay As System.Nullable(Of Double)
	
	Private _DonateNote As String
	
	Private _HosFee As System.Nullable(Of Double)
	
	Private _CashTotal As System.Nullable(Of Double)
	
	Private _IsPatientNill As System.Nullable(Of Boolean)
	
	Private _ReceiptNote As String
	
	Private _TIME_CREATE As String
	
	Private _TIME_ISSUE As String
	
	Private _ISSUE_BY_DEPART As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Long)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnReceiptNoChanging(value As Long)
    End Sub
    Partial Private Sub OnReceiptNoChanged()
    End Sub
    Partial Private Sub OnIDCashReceiptChanging(value As String)
    End Sub
    Partial Private Sub OnIDCashReceiptChanged()
    End Sub
    Partial Private Sub OnHNChanging(value As Decimal)
    End Sub
    Partial Private Sub OnHNChanged()
    End Sub
    Partial Private Sub OnPatientNameChanging(value As String)
    End Sub
    Partial Private Sub OnPatientNameChanged()
    End Sub
    Partial Private Sub OnCashRielChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCashRielChanged()
    End Sub
    Partial Private Sub OnCashUSDChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCashUSDChanged()
    End Sub
    Partial Private Sub OnTotalRielChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalRielChanged()
    End Sub
    Partial Private Sub OnTotalUSDChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalUSDChanged()
    End Sub
    Partial Private Sub OnOperationFeeRielChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOperationFeeRielChanged()
    End Sub
    Partial Private Sub OnOperationFeeUSDChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOperationFeeUSDChanged()
    End Sub
    Partial Private Sub OnArtificialEyeFeeRielChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnArtificialEyeFeeRielChanged()
    End Sub
    Partial Private Sub OnArtificialEyeFeeUSDChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnArtificialEyeFeeUSDChanged()
    End Sub
    Partial Private Sub OnOtherFeeRielChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOtherFeeRielChanged()
    End Sub
    Partial Private Sub OnOtherFeeUSDChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnOtherFeeUSDChanged()
    End Sub
    Partial Private Sub OnConsultationFeeRielChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnConsultationFeeRielChanged()
    End Sub
    Partial Private Sub OnConsultationFeeUSDChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnConsultationFeeUSDChanged()
    End Sub
    Partial Private Sub OnFollowUpFeeRielChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnFollowUpFeeRielChanged()
    End Sub
    Partial Private Sub OnFollowUpFeeUSDChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnFollowUpFeeUSDChanged()
    End Sub
    Partial Private Sub OnMedicineFeeRielChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMedicineFeeRielChanged()
    End Sub
    Partial Private Sub OnMedicineFeeUSDChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMedicineFeeUSDChanged()
    End Sub
    Partial Private Sub OnGlassFeeRielChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGlassFeeRielChanged()
    End Sub
    Partial Private Sub OnGlassFeeUSDChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGlassFeeUSDChanged()
    End Sub
    Partial Private Sub OnSocialFeeRielChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSocialFeeRielChanged()
    End Sub
    Partial Private Sub OnSocialFeeUSDChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSocialFeeUSDChanged()
    End Sub
    Partial Private Sub OnFullFeeRielChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnFullFeeRielChanged()
    End Sub
    Partial Private Sub OnFullFeeUSDChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnFullFeeUSDChanged()
    End Sub
    Partial Private Sub OnRatesChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnRatesChanged()
    End Sub
    Partial Private Sub OnAmoutWordChanging(value As String)
    End Sub
    Partial Private Sub OnAmoutWordChanged()
    End Sub
    Partial Private Sub OnConOPChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnConOPChanged()
    End Sub
    Partial Private Sub OnConAEChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnConAEChanged()
    End Sub
    Partial Private Sub OnConOTChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnConOTChanged()
    End Sub
    Partial Private Sub OnConCONChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnConCONChanged()
    End Sub
    Partial Private Sub OnConFOLChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnConFOLChanged()
    End Sub
    Partial Private Sub OnConMEDChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnConMEDChanged()
    End Sub
    Partial Private Sub OnConGLAChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnConGLAChanged()
    End Sub
    Partial Private Sub OnConSocialFeeChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnConSocialFeeChanged()
    End Sub
    Partial Private Sub OnConFullFeeChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnConFullFeeChanged()
    End Sub
    Partial Private Sub OnConGeneralChanging(value As String)
    End Sub
    Partial Private Sub OnConGeneralChanged()
    End Sub
    Partial Private Sub OnCashierInChanging(value As String)
    End Sub
    Partial Private Sub OnCashierInChanged()
    End Sub
    Partial Private Sub OnCashierUpdateChanging(value As String)
    End Sub
    Partial Private Sub OnCashierUpdateChanged()
    End Sub
    Partial Private Sub OnPrintCountChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPrintCountChanged()
    End Sub
    Partial Private Sub OnDateInChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateInChanged()
    End Sub
    Partial Private Sub OnDateUpdateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateUpdateChanged()
    End Sub
    Partial Private Sub OnDateNowChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateNowChanged()
    End Sub
    Partial Private Sub OnConPayChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnConPayChanged()
    End Sub
    Partial Private Sub OnConDeleteChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnConDeleteChanged()
    End Sub
    Partial Private Sub OnYearsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnYearsChanged()
    End Sub
    Partial Private Sub OnOperationChanging(value As String)
    End Sub
    Partial Private Sub OnOperationChanged()
    End Sub
    Partial Private Sub OnIsDonationChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsDonationChanged()
    End Sub
    Partial Private Sub OnDonationIDChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDonationIDChanged()
    End Sub
    Partial Private Sub OnDonationNameChanging(value As String)
    End Sub
    Partial Private Sub OnDonationNameChanged()
    End Sub
    Partial Private Sub OnDonationPayChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDonationPayChanged()
    End Sub
    Partial Private Sub OnDonateNoteChanging(value As String)
    End Sub
    Partial Private Sub OnDonateNoteChanged()
    End Sub
    Partial Private Sub OnHosFeeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnHosFeeChanged()
    End Sub
    Partial Private Sub OnCashTotalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnCashTotalChanged()
    End Sub
    Partial Private Sub OnIsPatientNillChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsPatientNillChanged()
    End Sub
    Partial Private Sub OnReceiptNoteChanging(value As String)
    End Sub
    Partial Private Sub OnReceiptNoteChanged()
    End Sub
    Partial Private Sub OnTIME_CREATEChanging(value As String)
    End Sub
    Partial Private Sub OnTIME_CREATEChanged()
    End Sub
    Partial Private Sub OnTIME_ISSUEChanging(value As String)
    End Sub
    Partial Private Sub OnTIME_ISSUEChanged()
    End Sub
    Partial Private Sub OnISSUE_BY_DEPARTChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnISSUE_BY_DEPARTChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Column(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Long
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReceiptNo", DbType:="BigInt NOT NULL")>  _
	Public Property ReceiptNo() As Long
		Get
			Return Me._ReceiptNo
		End Get
		Set
			If ((Me._ReceiptNo = value)  _
						= false) Then
				Me.OnReceiptNoChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptNo = value
				Me.SendPropertyChanged("ReceiptNo")
				Me.OnReceiptNoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_IDCashReceipt", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property IDCashReceipt() As String
		Get
			Return Me._IDCashReceipt
		End Get
		Set
			If (String.Equals(Me._IDCashReceipt, value) = false) Then
				Me.OnIDCashReceiptChanging(value)
				Me.SendPropertyChanging
				Me._IDCashReceipt = value
				Me.SendPropertyChanged("IDCashReceipt")
				Me.OnIDCashReceiptChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_HN", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property HN() As Decimal
		Get
			Return Me._HN
		End Get
		Set
			If ((Me._HN = value)  _
						= false) Then
				Me.OnHNChanging(value)
				Me.SendPropertyChanging
				Me._HN = value
				Me.SendPropertyChanged("HN")
				Me.OnHNChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_PatientName", DbType:="VarChar(500)")>  _
	Public Property PatientName() As String
		Get
			Return Me._PatientName
		End Get
		Set
			If (String.Equals(Me._PatientName, value) = false) Then
				Me.OnPatientNameChanging(value)
				Me.SendPropertyChanging
				Me._PatientName = value
				Me.SendPropertyChanged("PatientName")
				Me.OnPatientNameChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_CashRiel", DbType:="Float")>  _
	Public Property CashRiel() As System.Nullable(Of Double)
		Get
			Return Me._CashRiel
		End Get
		Set
			If (Me._CashRiel.Equals(value) = false) Then
				Me.OnCashRielChanging(value)
				Me.SendPropertyChanging
				Me._CashRiel = value
				Me.SendPropertyChanged("CashRiel")
				Me.OnCashRielChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_CashUSD", DbType:="Float")>  _
	Public Property CashUSD() As System.Nullable(Of Double)
		Get
			Return Me._CashUSD
		End Get
		Set
			If (Me._CashUSD.Equals(value) = false) Then
				Me.OnCashUSDChanging(value)
				Me.SendPropertyChanging
				Me._CashUSD = value
				Me.SendPropertyChanged("CashUSD")
				Me.OnCashUSDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_TotalRiel", DbType:="Float")>  _
	Public Property TotalRiel() As System.Nullable(Of Double)
		Get
			Return Me._TotalRiel
		End Get
		Set
			If (Me._TotalRiel.Equals(value) = false) Then
				Me.OnTotalRielChanging(value)
				Me.SendPropertyChanging
				Me._TotalRiel = value
				Me.SendPropertyChanged("TotalRiel")
				Me.OnTotalRielChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_TotalUSD", DbType:="Float")>  _
	Public Property TotalUSD() As System.Nullable(Of Double)
		Get
			Return Me._TotalUSD
		End Get
		Set
			If (Me._TotalUSD.Equals(value) = false) Then
				Me.OnTotalUSDChanging(value)
				Me.SendPropertyChanging
				Me._TotalUSD = value
				Me.SendPropertyChanged("TotalUSD")
				Me.OnTotalUSDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_OperationFeeRiel", DbType:="Float")>  _
	Public Property OperationFeeRiel() As System.Nullable(Of Double)
		Get
			Return Me._OperationFeeRiel
		End Get
		Set
			If (Me._OperationFeeRiel.Equals(value) = false) Then
				Me.OnOperationFeeRielChanging(value)
				Me.SendPropertyChanging
				Me._OperationFeeRiel = value
				Me.SendPropertyChanged("OperationFeeRiel")
				Me.OnOperationFeeRielChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_OperationFeeUSD", DbType:="Float")>  _
	Public Property OperationFeeUSD() As System.Nullable(Of Double)
		Get
			Return Me._OperationFeeUSD
		End Get
		Set
			If (Me._OperationFeeUSD.Equals(value) = false) Then
				Me.OnOperationFeeUSDChanging(value)
				Me.SendPropertyChanging
				Me._OperationFeeUSD = value
				Me.SendPropertyChanged("OperationFeeUSD")
				Me.OnOperationFeeUSDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ArtificialEyeFeeRiel", DbType:="Float")>  _
	Public Property ArtificialEyeFeeRiel() As System.Nullable(Of Double)
		Get
			Return Me._ArtificialEyeFeeRiel
		End Get
		Set
			If (Me._ArtificialEyeFeeRiel.Equals(value) = false) Then
				Me.OnArtificialEyeFeeRielChanging(value)
				Me.SendPropertyChanging
				Me._ArtificialEyeFeeRiel = value
				Me.SendPropertyChanged("ArtificialEyeFeeRiel")
				Me.OnArtificialEyeFeeRielChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ArtificialEyeFeeUSD", DbType:="Float")>  _
	Public Property ArtificialEyeFeeUSD() As System.Nullable(Of Double)
		Get
			Return Me._ArtificialEyeFeeUSD
		End Get
		Set
			If (Me._ArtificialEyeFeeUSD.Equals(value) = false) Then
				Me.OnArtificialEyeFeeUSDChanging(value)
				Me.SendPropertyChanging
				Me._ArtificialEyeFeeUSD = value
				Me.SendPropertyChanged("ArtificialEyeFeeUSD")
				Me.OnArtificialEyeFeeUSDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_OtherFeeRiel", DbType:="Float")>  _
	Public Property OtherFeeRiel() As System.Nullable(Of Double)
		Get
			Return Me._OtherFeeRiel
		End Get
		Set
			If (Me._OtherFeeRiel.Equals(value) = false) Then
				Me.OnOtherFeeRielChanging(value)
				Me.SendPropertyChanging
				Me._OtherFeeRiel = value
				Me.SendPropertyChanged("OtherFeeRiel")
				Me.OnOtherFeeRielChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_OtherFeeUSD", DbType:="Float")>  _
	Public Property OtherFeeUSD() As System.Nullable(Of Double)
		Get
			Return Me._OtherFeeUSD
		End Get
		Set
			If (Me._OtherFeeUSD.Equals(value) = false) Then
				Me.OnOtherFeeUSDChanging(value)
				Me.SendPropertyChanging
				Me._OtherFeeUSD = value
				Me.SendPropertyChanged("OtherFeeUSD")
				Me.OnOtherFeeUSDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ConsultationFeeRiel", DbType:="Float")>  _
	Public Property ConsultationFeeRiel() As System.Nullable(Of Double)
		Get
			Return Me._ConsultationFeeRiel
		End Get
		Set
			If (Me._ConsultationFeeRiel.Equals(value) = false) Then
				Me.OnConsultationFeeRielChanging(value)
				Me.SendPropertyChanging
				Me._ConsultationFeeRiel = value
				Me.SendPropertyChanged("ConsultationFeeRiel")
				Me.OnConsultationFeeRielChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ConsultationFeeUSD", DbType:="Float")>  _
	Public Property ConsultationFeeUSD() As System.Nullable(Of Double)
		Get
			Return Me._ConsultationFeeUSD
		End Get
		Set
			If (Me._ConsultationFeeUSD.Equals(value) = false) Then
				Me.OnConsultationFeeUSDChanging(value)
				Me.SendPropertyChanging
				Me._ConsultationFeeUSD = value
				Me.SendPropertyChanged("ConsultationFeeUSD")
				Me.OnConsultationFeeUSDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_FollowUpFeeRiel", DbType:="Float")>  _
	Public Property FollowUpFeeRiel() As System.Nullable(Of Double)
		Get
			Return Me._FollowUpFeeRiel
		End Get
		Set
			If (Me._FollowUpFeeRiel.Equals(value) = false) Then
				Me.OnFollowUpFeeRielChanging(value)
				Me.SendPropertyChanging
				Me._FollowUpFeeRiel = value
				Me.SendPropertyChanged("FollowUpFeeRiel")
				Me.OnFollowUpFeeRielChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_FollowUpFeeUSD", DbType:="Float")>  _
	Public Property FollowUpFeeUSD() As System.Nullable(Of Double)
		Get
			Return Me._FollowUpFeeUSD
		End Get
		Set
			If (Me._FollowUpFeeUSD.Equals(value) = false) Then
				Me.OnFollowUpFeeUSDChanging(value)
				Me.SendPropertyChanging
				Me._FollowUpFeeUSD = value
				Me.SendPropertyChanged("FollowUpFeeUSD")
				Me.OnFollowUpFeeUSDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_MedicineFeeRiel", DbType:="Float")>  _
	Public Property MedicineFeeRiel() As System.Nullable(Of Double)
		Get
			Return Me._MedicineFeeRiel
		End Get
		Set
			If (Me._MedicineFeeRiel.Equals(value) = false) Then
				Me.OnMedicineFeeRielChanging(value)
				Me.SendPropertyChanging
				Me._MedicineFeeRiel = value
				Me.SendPropertyChanged("MedicineFeeRiel")
				Me.OnMedicineFeeRielChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_MedicineFeeUSD", DbType:="Float")>  _
	Public Property MedicineFeeUSD() As System.Nullable(Of Double)
		Get
			Return Me._MedicineFeeUSD
		End Get
		Set
			If (Me._MedicineFeeUSD.Equals(value) = false) Then
				Me.OnMedicineFeeUSDChanging(value)
				Me.SendPropertyChanging
				Me._MedicineFeeUSD = value
				Me.SendPropertyChanged("MedicineFeeUSD")
				Me.OnMedicineFeeUSDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_GlassFeeRiel", DbType:="Float")>  _
	Public Property GlassFeeRiel() As System.Nullable(Of Double)
		Get
			Return Me._GlassFeeRiel
		End Get
		Set
			If (Me._GlassFeeRiel.Equals(value) = false) Then
				Me.OnGlassFeeRielChanging(value)
				Me.SendPropertyChanging
				Me._GlassFeeRiel = value
				Me.SendPropertyChanged("GlassFeeRiel")
				Me.OnGlassFeeRielChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_GlassFeeUSD", DbType:="Float")>  _
	Public Property GlassFeeUSD() As System.Nullable(Of Double)
		Get
			Return Me._GlassFeeUSD
		End Get
		Set
			If (Me._GlassFeeUSD.Equals(value) = false) Then
				Me.OnGlassFeeUSDChanging(value)
				Me.SendPropertyChanging
				Me._GlassFeeUSD = value
				Me.SendPropertyChanged("GlassFeeUSD")
				Me.OnGlassFeeUSDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_SocialFeeRiel", DbType:="Float")>  _
	Public Property SocialFeeRiel() As System.Nullable(Of Double)
		Get
			Return Me._SocialFeeRiel
		End Get
		Set
			If (Me._SocialFeeRiel.Equals(value) = false) Then
				Me.OnSocialFeeRielChanging(value)
				Me.SendPropertyChanging
				Me._SocialFeeRiel = value
				Me.SendPropertyChanged("SocialFeeRiel")
				Me.OnSocialFeeRielChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_SocialFeeUSD", DbType:="Float")>  _
	Public Property SocialFeeUSD() As System.Nullable(Of Double)
		Get
			Return Me._SocialFeeUSD
		End Get
		Set
			If (Me._SocialFeeUSD.Equals(value) = false) Then
				Me.OnSocialFeeUSDChanging(value)
				Me.SendPropertyChanging
				Me._SocialFeeUSD = value
				Me.SendPropertyChanged("SocialFeeUSD")
				Me.OnSocialFeeUSDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_FullFeeRiel", DbType:="Float")>  _
	Public Property FullFeeRiel() As System.Nullable(Of Double)
		Get
			Return Me._FullFeeRiel
		End Get
		Set
			If (Me._FullFeeRiel.Equals(value) = false) Then
				Me.OnFullFeeRielChanging(value)
				Me.SendPropertyChanging
				Me._FullFeeRiel = value
				Me.SendPropertyChanged("FullFeeRiel")
				Me.OnFullFeeRielChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_FullFeeUSD", DbType:="Float")>  _
	Public Property FullFeeUSD() As System.Nullable(Of Double)
		Get
			Return Me._FullFeeUSD
		End Get
		Set
			If (Me._FullFeeUSD.Equals(value) = false) Then
				Me.OnFullFeeUSDChanging(value)
				Me.SendPropertyChanging
				Me._FullFeeUSD = value
				Me.SendPropertyChanged("FullFeeUSD")
				Me.OnFullFeeUSDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Rates", DbType:="Float")>  _
	Public Property Rates() As System.Nullable(Of Double)
		Get
			Return Me._Rates
		End Get
		Set
			If (Me._Rates.Equals(value) = false) Then
				Me.OnRatesChanging(value)
				Me.SendPropertyChanging
				Me._Rates = value
				Me.SendPropertyChanged("Rates")
				Me.OnRatesChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_AmoutWord", DbType:="VarChar(8000)")>  _
	Public Property AmoutWord() As String
		Get
			Return Me._AmoutWord
		End Get
		Set
			If (String.Equals(Me._AmoutWord, value) = false) Then
				Me.OnAmoutWordChanging(value)
				Me.SendPropertyChanging
				Me._AmoutWord = value
				Me.SendPropertyChanged("AmoutWord")
				Me.OnAmoutWordChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ConOP", DbType:="Char(1)")>  _
	Public Property ConOP() As System.Nullable(Of Char)
		Get
			Return Me._ConOP
		End Get
		Set
			If (Me._ConOP.Equals(value) = false) Then
				Me.OnConOPChanging(value)
				Me.SendPropertyChanging
				Me._ConOP = value
				Me.SendPropertyChanged("ConOP")
				Me.OnConOPChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ConAE", DbType:="Char(1)")>  _
	Public Property ConAE() As System.Nullable(Of Char)
		Get
			Return Me._ConAE
		End Get
		Set
			If (Me._ConAE.Equals(value) = false) Then
				Me.OnConAEChanging(value)
				Me.SendPropertyChanging
				Me._ConAE = value
				Me.SendPropertyChanged("ConAE")
				Me.OnConAEChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ConOT", DbType:="Char(1)")>  _
	Public Property ConOT() As System.Nullable(Of Char)
		Get
			Return Me._ConOT
		End Get
		Set
			If (Me._ConOT.Equals(value) = false) Then
				Me.OnConOTChanging(value)
				Me.SendPropertyChanging
				Me._ConOT = value
				Me.SendPropertyChanged("ConOT")
				Me.OnConOTChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ConCON", DbType:="Char(1)")>  _
	Public Property ConCON() As System.Nullable(Of Char)
		Get
			Return Me._ConCON
		End Get
		Set
			If (Me._ConCON.Equals(value) = false) Then
				Me.OnConCONChanging(value)
				Me.SendPropertyChanging
				Me._ConCON = value
				Me.SendPropertyChanged("ConCON")
				Me.OnConCONChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ConFOL", DbType:="Char(1)")>  _
	Public Property ConFOL() As System.Nullable(Of Char)
		Get
			Return Me._ConFOL
		End Get
		Set
			If (Me._ConFOL.Equals(value) = false) Then
				Me.OnConFOLChanging(value)
				Me.SendPropertyChanging
				Me._ConFOL = value
				Me.SendPropertyChanged("ConFOL")
				Me.OnConFOLChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ConMED", DbType:="Char(1)")>  _
	Public Property ConMED() As System.Nullable(Of Char)
		Get
			Return Me._ConMED
		End Get
		Set
			If (Me._ConMED.Equals(value) = false) Then
				Me.OnConMEDChanging(value)
				Me.SendPropertyChanging
				Me._ConMED = value
				Me.SendPropertyChanged("ConMED")
				Me.OnConMEDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ConGLA", DbType:="Char(1)")>  _
	Public Property ConGLA() As System.Nullable(Of Char)
		Get
			Return Me._ConGLA
		End Get
		Set
			If (Me._ConGLA.Equals(value) = false) Then
				Me.OnConGLAChanging(value)
				Me.SendPropertyChanging
				Me._ConGLA = value
				Me.SendPropertyChanged("ConGLA")
				Me.OnConGLAChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ConSocialFee", DbType:="Char(1)")>  _
	Public Property ConSocialFee() As System.Nullable(Of Char)
		Get
			Return Me._ConSocialFee
		End Get
		Set
			If (Me._ConSocialFee.Equals(value) = false) Then
				Me.OnConSocialFeeChanging(value)
				Me.SendPropertyChanging
				Me._ConSocialFee = value
				Me.SendPropertyChanged("ConSocialFee")
				Me.OnConSocialFeeChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ConFullFee", DbType:="Char(1)")>  _
	Public Property ConFullFee() As System.Nullable(Of Char)
		Get
			Return Me._ConFullFee
		End Get
		Set
			If (Me._ConFullFee.Equals(value) = false) Then
				Me.OnConFullFeeChanging(value)
				Me.SendPropertyChanging
				Me._ConFullFee = value
				Me.SendPropertyChanged("ConFullFee")
				Me.OnConFullFeeChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ConGeneral", DbType:="Char(2)")>  _
	Public Property ConGeneral() As String
		Get
			Return Me._ConGeneral
		End Get
		Set
			If (String.Equals(Me._ConGeneral, value) = false) Then
				Me.OnConGeneralChanging(value)
				Me.SendPropertyChanging
				Me._ConGeneral = value
				Me.SendPropertyChanged("ConGeneral")
				Me.OnConGeneralChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_CashierIn", DbType:="VarChar(200)")>  _
	Public Property CashierIn() As String
		Get
			Return Me._CashierIn
		End Get
		Set
			If (String.Equals(Me._CashierIn, value) = false) Then
				Me.OnCashierInChanging(value)
				Me.SendPropertyChanging
				Me._CashierIn = value
				Me.SendPropertyChanged("CashierIn")
				Me.OnCashierInChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_CashierUpdate", DbType:="VarChar(200)")>  _
	Public Property CashierUpdate() As String
		Get
			Return Me._CashierUpdate
		End Get
		Set
			If (String.Equals(Me._CashierUpdate, value) = false) Then
				Me.OnCashierUpdateChanging(value)
				Me.SendPropertyChanging
				Me._CashierUpdate = value
				Me.SendPropertyChanged("CashierUpdate")
				Me.OnCashierUpdateChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_PrintCount", DbType:="Int")>  _
	Public Property PrintCount() As System.Nullable(Of Integer)
		Get
			Return Me._PrintCount
		End Get
		Set
			If (Me._PrintCount.Equals(value) = false) Then
				Me.OnPrintCountChanging(value)
				Me.SendPropertyChanging
				Me._PrintCount = value
				Me.SendPropertyChanged("PrintCount")
				Me.OnPrintCountChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_DateIn", DbType:="DateTime")>  _
	Public Property DateIn() As System.Nullable(Of Date)
		Get
			Return Me._DateIn
		End Get
		Set
			If (Me._DateIn.Equals(value) = false) Then
				Me.OnDateInChanging(value)
				Me.SendPropertyChanging
				Me._DateIn = value
				Me.SendPropertyChanged("DateIn")
				Me.OnDateInChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_DateUpdate", DbType:="DateTime")>  _
	Public Property DateUpdate() As System.Nullable(Of Date)
		Get
			Return Me._DateUpdate
		End Get
		Set
			If (Me._DateUpdate.Equals(value) = false) Then
				Me.OnDateUpdateChanging(value)
				Me.SendPropertyChanging
				Me._DateUpdate = value
				Me.SendPropertyChanged("DateUpdate")
				Me.OnDateUpdateChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_DateNow", DbType:="DateTime")>  _
	Public Property DateNow() As System.Nullable(Of Date)
		Get
			Return Me._DateNow
		End Get
		Set
			If (Me._DateNow.Equals(value) = false) Then
				Me.OnDateNowChanging(value)
				Me.SendPropertyChanging
				Me._DateNow = value
				Me.SendPropertyChanged("DateNow")
				Me.OnDateNowChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ConPay", DbType:="Char(1)")>  _
	Public Property ConPay() As System.Nullable(Of Char)
		Get
			Return Me._ConPay
		End Get
		Set
			If (Me._ConPay.Equals(value) = false) Then
				Me.OnConPayChanging(value)
				Me.SendPropertyChanging
				Me._ConPay = value
				Me.SendPropertyChanged("ConPay")
				Me.OnConPayChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ConDelete", DbType:="Char(1)")>  _
	Public Property ConDelete() As System.Nullable(Of Char)
		Get
			Return Me._ConDelete
		End Get
		Set
			If (Me._ConDelete.Equals(value) = false) Then
				Me.OnConDeleteChanging(value)
				Me.SendPropertyChanging
				Me._ConDelete = value
				Me.SendPropertyChanged("ConDelete")
				Me.OnConDeleteChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Years", DbType:="Int")>  _
	Public Property Years() As System.Nullable(Of Integer)
		Get
			Return Me._Years
		End Get
		Set
			If (Me._Years.Equals(value) = false) Then
				Me.OnYearsChanging(value)
				Me.SendPropertyChanging
				Me._Years = value
				Me.SendPropertyChanged("Years")
				Me.OnYearsChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Operation", DbType:="VarChar(8000)")>  _
	Public Property Operation() As String
		Get
			Return Me._Operation
		End Get
		Set
			If (String.Equals(Me._Operation, value) = false) Then
				Me.OnOperationChanging(value)
				Me.SendPropertyChanging
				Me._Operation = value
				Me.SendPropertyChanged("Operation")
				Me.OnOperationChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_IsDonation", DbType:="Bit")>  _
	Public Property IsDonation() As System.Nullable(Of Boolean)
		Get
			Return Me._IsDonation
		End Get
		Set
			If (Me._IsDonation.Equals(value) = false) Then
				Me.OnIsDonationChanging(value)
				Me.SendPropertyChanging
				Me._IsDonation = value
				Me.SendPropertyChanged("IsDonation")
				Me.OnIsDonationChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_DonationID", DbType:="Decimal(18,0)")>  _
	Public Property DonationID() As System.Nullable(Of Decimal)
		Get
			Return Me._DonationID
		End Get
		Set
			If (Me._DonationID.Equals(value) = false) Then
				Me.OnDonationIDChanging(value)
				Me.SendPropertyChanging
				Me._DonationID = value
				Me.SendPropertyChanged("DonationID")
				Me.OnDonationIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_DonationName", DbType:="NVarChar(50)")>  _
	Public Property DonationName() As String
		Get
			Return Me._DonationName
		End Get
		Set
			If (String.Equals(Me._DonationName, value) = false) Then
				Me.OnDonationNameChanging(value)
				Me.SendPropertyChanging
				Me._DonationName = value
				Me.SendPropertyChanged("DonationName")
				Me.OnDonationNameChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_DonationPay", DbType:="Float")>  _
	Public Property DonationPay() As System.Nullable(Of Double)
		Get
			Return Me._DonationPay
		End Get
		Set
			If (Me._DonationPay.Equals(value) = false) Then
				Me.OnDonationPayChanging(value)
				Me.SendPropertyChanging
				Me._DonationPay = value
				Me.SendPropertyChanged("DonationPay")
				Me.OnDonationPayChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_DonateNote", DbType:="NVarChar(200)")>  _
	Public Property DonateNote() As String
		Get
			Return Me._DonateNote
		End Get
		Set
			If (String.Equals(Me._DonateNote, value) = false) Then
				Me.OnDonateNoteChanging(value)
				Me.SendPropertyChanging
				Me._DonateNote = value
				Me.SendPropertyChanged("DonateNote")
				Me.OnDonateNoteChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_HosFee", DbType:="Float")>  _
	Public Property HosFee() As System.Nullable(Of Double)
		Get
			Return Me._HosFee
		End Get
		Set
			If (Me._HosFee.Equals(value) = false) Then
				Me.OnHosFeeChanging(value)
				Me.SendPropertyChanging
				Me._HosFee = value
				Me.SendPropertyChanged("HosFee")
				Me.OnHosFeeChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_CashTotal", DbType:="Float")>  _
	Public Property CashTotal() As System.Nullable(Of Double)
		Get
			Return Me._CashTotal
		End Get
		Set
			If (Me._CashTotal.Equals(value) = false) Then
				Me.OnCashTotalChanging(value)
				Me.SendPropertyChanging
				Me._CashTotal = value
				Me.SendPropertyChanged("CashTotal")
				Me.OnCashTotalChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_IsPatientNill", DbType:="Bit")>  _
	Public Property IsPatientNill() As System.Nullable(Of Boolean)
		Get
			Return Me._IsPatientNill
		End Get
		Set
			If (Me._IsPatientNill.Equals(value) = false) Then
				Me.OnIsPatientNillChanging(value)
				Me.SendPropertyChanging
				Me._IsPatientNill = value
				Me.SendPropertyChanged("IsPatientNill")
				Me.OnIsPatientNillChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReceiptNote", DbType:="NVarChar(250)")>  _
	Public Property ReceiptNote() As String
		Get
			Return Me._ReceiptNote
		End Get
		Set
			If (String.Equals(Me._ReceiptNote, value) = false) Then
				Me.OnReceiptNoteChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptNote = value
				Me.SendPropertyChanged("ReceiptNote")
				Me.OnReceiptNoteChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_TIME_CREATE", DbType:="NVarChar(50)")>  _
	Public Property TIME_CREATE() As String
		Get
			Return Me._TIME_CREATE
		End Get
		Set
			If (String.Equals(Me._TIME_CREATE, value) = false) Then
				Me.OnTIME_CREATEChanging(value)
				Me.SendPropertyChanging
				Me._TIME_CREATE = value
				Me.SendPropertyChanged("TIME_CREATE")
				Me.OnTIME_CREATEChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_TIME_ISSUE", DbType:="NVarChar(50)")>  _
	Public Property TIME_ISSUE() As String
		Get
			Return Me._TIME_ISSUE
		End Get
		Set
			If (String.Equals(Me._TIME_ISSUE, value) = false) Then
				Me.OnTIME_ISSUEChanging(value)
				Me.SendPropertyChanging
				Me._TIME_ISSUE = value
				Me.SendPropertyChanged("TIME_ISSUE")
				Me.OnTIME_ISSUEChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ISSUE_BY_DEPART", DbType:="Decimal(18,0)")>  _
	Public Property ISSUE_BY_DEPART() As System.Nullable(Of Decimal)
		Get
			Return Me._ISSUE_BY_DEPART
		End Get
		Set
			If (Me._ISSUE_BY_DEPART.Equals(value) = false) Then
				Me.OnISSUE_BY_DEPARTChanging(value)
				Me.SendPropertyChanging
				Me._ISSUE_BY_DEPART = value
				Me.SendPropertyChanged("ISSUE_BY_DEPART")
				Me.OnISSUE_BY_DEPARTChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Table(Name:="dbo.RECEIPT")>  _
Partial Public Class RECEIPT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ReceiptID As Decimal
	
	Private _ReceiptNo As String
	
	Private _ReceiptDate As System.Nullable(Of Date)
	
	Private _CustID As System.Nullable(Of Decimal)
	
	Private _CustomerNo As System.Nullable(Of Decimal)
	
	Private _MedicReal As System.Nullable(Of Decimal)
	
	Private _MedicDolar As System.Nullable(Of Decimal)
	
	Private _EyeGlassesReal As System.Nullable(Of Decimal)
	
	Private _EyeGlassesDolar As System.Nullable(Of Decimal)
	
	Private _ReadyModDolar As System.Nullable(Of Decimal)
	
	Private _ReadyModR As System.Nullable(Of Decimal)
	
	Private _SpectacleDolar As System.Nullable(Of Decimal)
	
	Private _SpectacleR As System.Nullable(Of Decimal)
	
	Private _FundRaisingDolar As System.Nullable(Of Decimal)
	
	Private _FundRaisingR As System.Nullable(Of Decimal)
	
	Private _OtherDolar As System.Nullable(Of Decimal)
	
	Private _OtherR As System.Nullable(Of Decimal)
	
	Private _TotalReal As System.Nullable(Of Decimal)
	
	Private _TotalDolar As System.Nullable(Of Decimal)
	
	Private _AmountInWords As String
	
	Private _AmountFigureReal As System.Nullable(Of Decimal)
	
	Private _AmountFigureDolar As System.Nullable(Of Decimal)
	
	Private _ReturnReal As System.Nullable(Of Decimal)
	
	Private _ReturnDolar As System.Nullable(Of Decimal)
	
	Private _IsCurrency As System.Nullable(Of Boolean)
	
	Private _IsDonation As System.Nullable(Of Boolean)
	
	Private _DonationID As System.Nullable(Of Decimal)
	
	Private _PayBySelf As System.Nullable(Of Decimal)
	
	Private _PayByDonation As System.Nullable(Of Decimal)
	
	Private _IsPaid As System.Nullable(Of Decimal)
	
	Private _ReceiptNote As String
	
	Private _UserID As System.Nullable(Of Decimal)
	
	Private _UserName As String
	
	Private _IncomType As System.Nullable(Of Char)
	
	Private _Glasses As System.Nullable(Of Integer)
	
	Private _DonateAmount As System.Nullable(Of Decimal)
	
	Private _SupportedAmtDolar As System.Nullable(Of Decimal)
	
	Private _SupportedAmtR As System.Nullable(Of Decimal)
	
	Private _ReceiptType As String
	
	Private _SubReceiptType As String
	
	Private _PaidR As System.Nullable(Of Decimal)
	
	Private _PaidDollar As System.Nullable(Of Decimal)
	
	Private _IsOldPatient As System.Nullable(Of Boolean)
	
	Private _PaymentType As System.Nullable(Of Integer)
	
	Private _FullAmount As System.Nullable(Of Decimal)
	
	Private _NilAmount As System.Nullable(Of Decimal)
	
	Private _SocialAmount As System.Nullable(Of Decimal)
	
	Private _PaymentCur As String
	
	Private _Comment As String
	
	Private _TotalSocial As System.Nullable(Of Decimal)
	
	Private _TIME_CREATE As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnReceiptIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnReceiptIDChanged()
    End Sub
    Partial Private Sub OnReceiptNoChanging(value As String)
    End Sub
    Partial Private Sub OnReceiptNoChanged()
    End Sub
    Partial Private Sub OnReceiptDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnReceiptDateChanged()
    End Sub
    Partial Private Sub OnCustIDChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCustIDChanged()
    End Sub
    Partial Private Sub OnCustomerNoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCustomerNoChanged()
    End Sub
    Partial Private Sub OnMedicRealChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMedicRealChanged()
    End Sub
    Partial Private Sub OnMedicDolarChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMedicDolarChanged()
    End Sub
    Partial Private Sub OnEyeGlassesRealChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnEyeGlassesRealChanged()
    End Sub
    Partial Private Sub OnEyeGlassesDolarChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnEyeGlassesDolarChanged()
    End Sub
    Partial Private Sub OnReadyModDolarChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnReadyModDolarChanged()
    End Sub
    Partial Private Sub OnReadyModRChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnReadyModRChanged()
    End Sub
    Partial Private Sub OnSpectacleDolarChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSpectacleDolarChanged()
    End Sub
    Partial Private Sub OnSpectacleRChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSpectacleRChanged()
    End Sub
    Partial Private Sub OnFundRaisingDolarChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFundRaisingDolarChanged()
    End Sub
    Partial Private Sub OnFundRaisingRChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFundRaisingRChanged()
    End Sub
    Partial Private Sub OnOtherDolarChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOtherDolarChanged()
    End Sub
    Partial Private Sub OnOtherRChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnOtherRChanged()
    End Sub
    Partial Private Sub OnTotalRealChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotalRealChanged()
    End Sub
    Partial Private Sub OnTotalDolarChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotalDolarChanged()
    End Sub
    Partial Private Sub OnAmountInWordsChanging(value As String)
    End Sub
    Partial Private Sub OnAmountInWordsChanged()
    End Sub
    Partial Private Sub OnAmountFigureRealChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAmountFigureRealChanged()
    End Sub
    Partial Private Sub OnAmountFigureDolarChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAmountFigureDolarChanged()
    End Sub
    Partial Private Sub OnReturnRealChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnReturnRealChanged()
    End Sub
    Partial Private Sub OnReturnDolarChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnReturnDolarChanged()
    End Sub
    Partial Private Sub OnIsCurrencyChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsCurrencyChanged()
    End Sub
    Partial Private Sub OnIsDonationChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsDonationChanged()
    End Sub
    Partial Private Sub OnDonationIDChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDonationIDChanged()
    End Sub
    Partial Private Sub OnPayBySelfChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPayBySelfChanged()
    End Sub
    Partial Private Sub OnPayByDonationChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPayByDonationChanged()
    End Sub
    Partial Private Sub OnIsPaidChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnIsPaidChanged()
    End Sub
    Partial Private Sub OnReceiptNoteChanging(value As String)
    End Sub
    Partial Private Sub OnReceiptNoteChanged()
    End Sub
    Partial Private Sub OnUserIDChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnUserNameChanging(value As String)
    End Sub
    Partial Private Sub OnUserNameChanged()
    End Sub
    Partial Private Sub OnIncomTypeChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnIncomTypeChanged()
    End Sub
    Partial Private Sub OnGlassesChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGlassesChanged()
    End Sub
    Partial Private Sub OnDonateAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDonateAmountChanged()
    End Sub
    Partial Private Sub OnSupportedAmtDolarChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSupportedAmtDolarChanged()
    End Sub
    Partial Private Sub OnSupportedAmtRChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSupportedAmtRChanged()
    End Sub
    Partial Private Sub OnReceiptTypeChanging(value As String)
    End Sub
    Partial Private Sub OnReceiptTypeChanged()
    End Sub
    Partial Private Sub OnSubReceiptTypeChanging(value As String)
    End Sub
    Partial Private Sub OnSubReceiptTypeChanged()
    End Sub
    Partial Private Sub OnPaidRChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPaidRChanged()
    End Sub
    Partial Private Sub OnPaidDollarChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPaidDollarChanged()
    End Sub
    Partial Private Sub OnIsOldPatientChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsOldPatientChanged()
    End Sub
    Partial Private Sub OnPaymentTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPaymentTypeChanged()
    End Sub
    Partial Private Sub OnFullAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFullAmountChanged()
    End Sub
    Partial Private Sub OnNilAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNilAmountChanged()
    End Sub
    Partial Private Sub OnSocialAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSocialAmountChanged()
    End Sub
    Partial Private Sub OnPaymentCurChanging(value As String)
    End Sub
    Partial Private Sub OnPaymentCurChanged()
    End Sub
    Partial Private Sub OnCommentChanging(value As String)
    End Sub
    Partial Private Sub OnCommentChanged()
    End Sub
    Partial Private Sub OnTotalSocialChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotalSocialChanged()
    End Sub
    Partial Private Sub OnTIME_CREATEChanging(value As String)
    End Sub
    Partial Private Sub OnTIME_CREATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Column(Storage:="_ReceiptID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ReceiptID() As Decimal
		Get
			Return Me._ReceiptID
		End Get
		Set
			If ((Me._ReceiptID = value)  _
						= false) Then
				Me.OnReceiptIDChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptID = value
				Me.SendPropertyChanged("ReceiptID")
				Me.OnReceiptIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReceiptNo", DbType:="NVarChar(50)")>  _
	Public Property ReceiptNo() As String
		Get
			Return Me._ReceiptNo
		End Get
		Set
			If (String.Equals(Me._ReceiptNo, value) = false) Then
				Me.OnReceiptNoChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptNo = value
				Me.SendPropertyChanged("ReceiptNo")
				Me.OnReceiptNoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReceiptDate", DbType:="DateTime")>  _
	Public Property ReceiptDate() As System.Nullable(Of Date)
		Get
			Return Me._ReceiptDate
		End Get
		Set
			If (Me._ReceiptDate.Equals(value) = false) Then
				Me.OnReceiptDateChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptDate = value
				Me.SendPropertyChanged("ReceiptDate")
				Me.OnReceiptDateChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_CustID", DbType:="Decimal(18,0)")>  _
	Public Property CustID() As System.Nullable(Of Decimal)
		Get
			Return Me._CustID
		End Get
		Set
			If (Me._CustID.Equals(value) = false) Then
				Me.OnCustIDChanging(value)
				Me.SendPropertyChanging
				Me._CustID = value
				Me.SendPropertyChanged("CustID")
				Me.OnCustIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_CustomerNo", DbType:="Decimal(18,0)")>  _
	Public Property CustomerNo() As System.Nullable(Of Decimal)
		Get
			Return Me._CustomerNo
		End Get
		Set
			If (Me._CustomerNo.Equals(value) = false) Then
				Me.OnCustomerNoChanging(value)
				Me.SendPropertyChanging
				Me._CustomerNo = value
				Me.SendPropertyChanged("CustomerNo")
				Me.OnCustomerNoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_MedicReal", DbType:="Decimal(18,0)")>  _
	Public Property MedicReal() As System.Nullable(Of Decimal)
		Get
			Return Me._MedicReal
		End Get
		Set
			If (Me._MedicReal.Equals(value) = false) Then
				Me.OnMedicRealChanging(value)
				Me.SendPropertyChanging
				Me._MedicReal = value
				Me.SendPropertyChanged("MedicReal")
				Me.OnMedicRealChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_MedicDolar", DbType:="Decimal(18,3)")>  _
	Public Property MedicDolar() As System.Nullable(Of Decimal)
		Get
			Return Me._MedicDolar
		End Get
		Set
			If (Me._MedicDolar.Equals(value) = false) Then
				Me.OnMedicDolarChanging(value)
				Me.SendPropertyChanging
				Me._MedicDolar = value
				Me.SendPropertyChanged("MedicDolar")
				Me.OnMedicDolarChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_EyeGlassesReal", DbType:="Decimal(18,0)")>  _
	Public Property EyeGlassesReal() As System.Nullable(Of Decimal)
		Get
			Return Me._EyeGlassesReal
		End Get
		Set
			If (Me._EyeGlassesReal.Equals(value) = false) Then
				Me.OnEyeGlassesRealChanging(value)
				Me.SendPropertyChanging
				Me._EyeGlassesReal = value
				Me.SendPropertyChanged("EyeGlassesReal")
				Me.OnEyeGlassesRealChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_EyeGlassesDolar", DbType:="Decimal(18,3)")>  _
	Public Property EyeGlassesDolar() As System.Nullable(Of Decimal)
		Get
			Return Me._EyeGlassesDolar
		End Get
		Set
			If (Me._EyeGlassesDolar.Equals(value) = false) Then
				Me.OnEyeGlassesDolarChanging(value)
				Me.SendPropertyChanging
				Me._EyeGlassesDolar = value
				Me.SendPropertyChanged("EyeGlassesDolar")
				Me.OnEyeGlassesDolarChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReadyModDolar", DbType:="Decimal(18,3)")>  _
	Public Property ReadyModDolar() As System.Nullable(Of Decimal)
		Get
			Return Me._ReadyModDolar
		End Get
		Set
			If (Me._ReadyModDolar.Equals(value) = false) Then
				Me.OnReadyModDolarChanging(value)
				Me.SendPropertyChanging
				Me._ReadyModDolar = value
				Me.SendPropertyChanged("ReadyModDolar")
				Me.OnReadyModDolarChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReadyModR", DbType:="Decimal(18,0)")>  _
	Public Property ReadyModR() As System.Nullable(Of Decimal)
		Get
			Return Me._ReadyModR
		End Get
		Set
			If (Me._ReadyModR.Equals(value) = false) Then
				Me.OnReadyModRChanging(value)
				Me.SendPropertyChanging
				Me._ReadyModR = value
				Me.SendPropertyChanged("ReadyModR")
				Me.OnReadyModRChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_SpectacleDolar", DbType:="Decimal(18,3)")>  _
	Public Property SpectacleDolar() As System.Nullable(Of Decimal)
		Get
			Return Me._SpectacleDolar
		End Get
		Set
			If (Me._SpectacleDolar.Equals(value) = false) Then
				Me.OnSpectacleDolarChanging(value)
				Me.SendPropertyChanging
				Me._SpectacleDolar = value
				Me.SendPropertyChanged("SpectacleDolar")
				Me.OnSpectacleDolarChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_SpectacleR", DbType:="Decimal(18,0)")>  _
	Public Property SpectacleR() As System.Nullable(Of Decimal)
		Get
			Return Me._SpectacleR
		End Get
		Set
			If (Me._SpectacleR.Equals(value) = false) Then
				Me.OnSpectacleRChanging(value)
				Me.SendPropertyChanging
				Me._SpectacleR = value
				Me.SendPropertyChanged("SpectacleR")
				Me.OnSpectacleRChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_FundRaisingDolar", DbType:="Decimal(18,3)")>  _
	Public Property FundRaisingDolar() As System.Nullable(Of Decimal)
		Get
			Return Me._FundRaisingDolar
		End Get
		Set
			If (Me._FundRaisingDolar.Equals(value) = false) Then
				Me.OnFundRaisingDolarChanging(value)
				Me.SendPropertyChanging
				Me._FundRaisingDolar = value
				Me.SendPropertyChanged("FundRaisingDolar")
				Me.OnFundRaisingDolarChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_FundRaisingR", DbType:="Decimal(18,0)")>  _
	Public Property FundRaisingR() As System.Nullable(Of Decimal)
		Get
			Return Me._FundRaisingR
		End Get
		Set
			If (Me._FundRaisingR.Equals(value) = false) Then
				Me.OnFundRaisingRChanging(value)
				Me.SendPropertyChanging
				Me._FundRaisingR = value
				Me.SendPropertyChanged("FundRaisingR")
				Me.OnFundRaisingRChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_OtherDolar", DbType:="Decimal(18,3)")>  _
	Public Property OtherDolar() As System.Nullable(Of Decimal)
		Get
			Return Me._OtherDolar
		End Get
		Set
			If (Me._OtherDolar.Equals(value) = false) Then
				Me.OnOtherDolarChanging(value)
				Me.SendPropertyChanging
				Me._OtherDolar = value
				Me.SendPropertyChanged("OtherDolar")
				Me.OnOtherDolarChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_OtherR", DbType:="Decimal(18,0)")>  _
	Public Property OtherR() As System.Nullable(Of Decimal)
		Get
			Return Me._OtherR
		End Get
		Set
			If (Me._OtherR.Equals(value) = false) Then
				Me.OnOtherRChanging(value)
				Me.SendPropertyChanging
				Me._OtherR = value
				Me.SendPropertyChanged("OtherR")
				Me.OnOtherRChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_TotalReal", DbType:="Decimal(18,0)")>  _
	Public Property TotalReal() As System.Nullable(Of Decimal)
		Get
			Return Me._TotalReal
		End Get
		Set
			If (Me._TotalReal.Equals(value) = false) Then
				Me.OnTotalRealChanging(value)
				Me.SendPropertyChanging
				Me._TotalReal = value
				Me.SendPropertyChanged("TotalReal")
				Me.OnTotalRealChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_TotalDolar", DbType:="Decimal(18,3)")>  _
	Public Property TotalDolar() As System.Nullable(Of Decimal)
		Get
			Return Me._TotalDolar
		End Get
		Set
			If (Me._TotalDolar.Equals(value) = false) Then
				Me.OnTotalDolarChanging(value)
				Me.SendPropertyChanging
				Me._TotalDolar = value
				Me.SendPropertyChanged("TotalDolar")
				Me.OnTotalDolarChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_AmountInWords", DbType:="NVarChar(200)")>  _
	Public Property AmountInWords() As String
		Get
			Return Me._AmountInWords
		End Get
		Set
			If (String.Equals(Me._AmountInWords, value) = false) Then
				Me.OnAmountInWordsChanging(value)
				Me.SendPropertyChanging
				Me._AmountInWords = value
				Me.SendPropertyChanged("AmountInWords")
				Me.OnAmountInWordsChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_AmountFigureReal", DbType:="Decimal(18,0)")>  _
	Public Property AmountFigureReal() As System.Nullable(Of Decimal)
		Get
			Return Me._AmountFigureReal
		End Get
		Set
			If (Me._AmountFigureReal.Equals(value) = false) Then
				Me.OnAmountFigureRealChanging(value)
				Me.SendPropertyChanging
				Me._AmountFigureReal = value
				Me.SendPropertyChanged("AmountFigureReal")
				Me.OnAmountFigureRealChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_AmountFigureDolar", DbType:="Decimal(18,3)")>  _
	Public Property AmountFigureDolar() As System.Nullable(Of Decimal)
		Get
			Return Me._AmountFigureDolar
		End Get
		Set
			If (Me._AmountFigureDolar.Equals(value) = false) Then
				Me.OnAmountFigureDolarChanging(value)
				Me.SendPropertyChanging
				Me._AmountFigureDolar = value
				Me.SendPropertyChanged("AmountFigureDolar")
				Me.OnAmountFigureDolarChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReturnReal", DbType:="Decimal(18,0)")>  _
	Public Property ReturnReal() As System.Nullable(Of Decimal)
		Get
			Return Me._ReturnReal
		End Get
		Set
			If (Me._ReturnReal.Equals(value) = false) Then
				Me.OnReturnRealChanging(value)
				Me.SendPropertyChanging
				Me._ReturnReal = value
				Me.SendPropertyChanged("ReturnReal")
				Me.OnReturnRealChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReturnDolar", DbType:="Decimal(18,3)")>  _
	Public Property ReturnDolar() As System.Nullable(Of Decimal)
		Get
			Return Me._ReturnDolar
		End Get
		Set
			If (Me._ReturnDolar.Equals(value) = false) Then
				Me.OnReturnDolarChanging(value)
				Me.SendPropertyChanging
				Me._ReturnDolar = value
				Me.SendPropertyChanged("ReturnDolar")
				Me.OnReturnDolarChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_IsCurrency", DbType:="Bit")>  _
	Public Property IsCurrency() As System.Nullable(Of Boolean)
		Get
			Return Me._IsCurrency
		End Get
		Set
			If (Me._IsCurrency.Equals(value) = false) Then
				Me.OnIsCurrencyChanging(value)
				Me.SendPropertyChanging
				Me._IsCurrency = value
				Me.SendPropertyChanged("IsCurrency")
				Me.OnIsCurrencyChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_IsDonation", DbType:="Bit")>  _
	Public Property IsDonation() As System.Nullable(Of Boolean)
		Get
			Return Me._IsDonation
		End Get
		Set
			If (Me._IsDonation.Equals(value) = false) Then
				Me.OnIsDonationChanging(value)
				Me.SendPropertyChanging
				Me._IsDonation = value
				Me.SendPropertyChanged("IsDonation")
				Me.OnIsDonationChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_DonationID", DbType:="Decimal(18,0)")>  _
	Public Property DonationID() As System.Nullable(Of Decimal)
		Get
			Return Me._DonationID
		End Get
		Set
			If (Me._DonationID.Equals(value) = false) Then
				Me.OnDonationIDChanging(value)
				Me.SendPropertyChanging
				Me._DonationID = value
				Me.SendPropertyChanged("DonationID")
				Me.OnDonationIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_PayBySelf", DbType:="Decimal(18,3)")>  _
	Public Property PayBySelf() As System.Nullable(Of Decimal)
		Get
			Return Me._PayBySelf
		End Get
		Set
			If (Me._PayBySelf.Equals(value) = false) Then
				Me.OnPayBySelfChanging(value)
				Me.SendPropertyChanging
				Me._PayBySelf = value
				Me.SendPropertyChanged("PayBySelf")
				Me.OnPayBySelfChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_PayByDonation", DbType:="Decimal(18,3)")>  _
	Public Property PayByDonation() As System.Nullable(Of Decimal)
		Get
			Return Me._PayByDonation
		End Get
		Set
			If (Me._PayByDonation.Equals(value) = false) Then
				Me.OnPayByDonationChanging(value)
				Me.SendPropertyChanging
				Me._PayByDonation = value
				Me.SendPropertyChanged("PayByDonation")
				Me.OnPayByDonationChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_IsPaid", DbType:="Decimal(18,0)")>  _
	Public Property IsPaid() As System.Nullable(Of Decimal)
		Get
			Return Me._IsPaid
		End Get
		Set
			If (Me._IsPaid.Equals(value) = false) Then
				Me.OnIsPaidChanging(value)
				Me.SendPropertyChanging
				Me._IsPaid = value
				Me.SendPropertyChanged("IsPaid")
				Me.OnIsPaidChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReceiptNote", DbType:="NVarChar(250)")>  _
	Public Property ReceiptNote() As String
		Get
			Return Me._ReceiptNote
		End Get
		Set
			If (String.Equals(Me._ReceiptNote, value) = false) Then
				Me.OnReceiptNoteChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptNote = value
				Me.SendPropertyChanged("ReceiptNote")
				Me.OnReceiptNoteChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_UserID", DbType:="Decimal(18,0)")>  _
	Public Property UserID() As System.Nullable(Of Decimal)
		Get
			Return Me._UserID
		End Get
		Set
			If (Me._UserID.Equals(value) = false) Then
				Me.OnUserIDChanging(value)
				Me.SendPropertyChanging
				Me._UserID = value
				Me.SendPropertyChanged("UserID")
				Me.OnUserIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_UserName", DbType:="NVarChar(50)")>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me.OnUserNameChanging(value)
				Me.SendPropertyChanging
				Me._UserName = value
				Me.SendPropertyChanged("UserName")
				Me.OnUserNameChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_IncomType", DbType:="Char(1)")>  _
	Public Property IncomType() As System.Nullable(Of Char)
		Get
			Return Me._IncomType
		End Get
		Set
			If (Me._IncomType.Equals(value) = false) Then
				Me.OnIncomTypeChanging(value)
				Me.SendPropertyChanging
				Me._IncomType = value
				Me.SendPropertyChanged("IncomType")
				Me.OnIncomTypeChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Glasses", DbType:="Int")>  _
	Public Property Glasses() As System.Nullable(Of Integer)
		Get
			Return Me._Glasses
		End Get
		Set
			If (Me._Glasses.Equals(value) = false) Then
				Me.OnGlassesChanging(value)
				Me.SendPropertyChanging
				Me._Glasses = value
				Me.SendPropertyChanged("Glasses")
				Me.OnGlassesChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_DonateAmount", DbType:="Decimal(18,3)")>  _
	Public Property DonateAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._DonateAmount
		End Get
		Set
			If (Me._DonateAmount.Equals(value) = false) Then
				Me.OnDonateAmountChanging(value)
				Me.SendPropertyChanging
				Me._DonateAmount = value
				Me.SendPropertyChanged("DonateAmount")
				Me.OnDonateAmountChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_SupportedAmtDolar", DbType:="Decimal(18,3)")>  _
	Public Property SupportedAmtDolar() As System.Nullable(Of Decimal)
		Get
			Return Me._SupportedAmtDolar
		End Get
		Set
			If (Me._SupportedAmtDolar.Equals(value) = false) Then
				Me.OnSupportedAmtDolarChanging(value)
				Me.SendPropertyChanging
				Me._SupportedAmtDolar = value
				Me.SendPropertyChanged("SupportedAmtDolar")
				Me.OnSupportedAmtDolarChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_SupportedAmtR", DbType:="Decimal(18,3)")>  _
	Public Property SupportedAmtR() As System.Nullable(Of Decimal)
		Get
			Return Me._SupportedAmtR
		End Get
		Set
			If (Me._SupportedAmtR.Equals(value) = false) Then
				Me.OnSupportedAmtRChanging(value)
				Me.SendPropertyChanging
				Me._SupportedAmtR = value
				Me.SendPropertyChanged("SupportedAmtR")
				Me.OnSupportedAmtRChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReceiptType", DbType:="NVarChar(100)")>  _
	Public Property ReceiptType() As String
		Get
			Return Me._ReceiptType
		End Get
		Set
			If (String.Equals(Me._ReceiptType, value) = false) Then
				Me.OnReceiptTypeChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptType = value
				Me.SendPropertyChanged("ReceiptType")
				Me.OnReceiptTypeChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_SubReceiptType", DbType:="NVarChar(100)")>  _
	Public Property SubReceiptType() As String
		Get
			Return Me._SubReceiptType
		End Get
		Set
			If (String.Equals(Me._SubReceiptType, value) = false) Then
				Me.OnSubReceiptTypeChanging(value)
				Me.SendPropertyChanging
				Me._SubReceiptType = value
				Me.SendPropertyChanged("SubReceiptType")
				Me.OnSubReceiptTypeChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_PaidR", DbType:="Decimal(18,0)")>  _
	Public Property PaidR() As System.Nullable(Of Decimal)
		Get
			Return Me._PaidR
		End Get
		Set
			If (Me._PaidR.Equals(value) = false) Then
				Me.OnPaidRChanging(value)
				Me.SendPropertyChanging
				Me._PaidR = value
				Me.SendPropertyChanged("PaidR")
				Me.OnPaidRChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_PaidDollar", DbType:="Decimal(18,3)")>  _
	Public Property PaidDollar() As System.Nullable(Of Decimal)
		Get
			Return Me._PaidDollar
		End Get
		Set
			If (Me._PaidDollar.Equals(value) = false) Then
				Me.OnPaidDollarChanging(value)
				Me.SendPropertyChanging
				Me._PaidDollar = value
				Me.SendPropertyChanged("PaidDollar")
				Me.OnPaidDollarChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_IsOldPatient", DbType:="Bit")>  _
	Public Property IsOldPatient() As System.Nullable(Of Boolean)
		Get
			Return Me._IsOldPatient
		End Get
		Set
			If (Me._IsOldPatient.Equals(value) = false) Then
				Me.OnIsOldPatientChanging(value)
				Me.SendPropertyChanging
				Me._IsOldPatient = value
				Me.SendPropertyChanged("IsOldPatient")
				Me.OnIsOldPatientChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_PaymentType", DbType:="Int")>  _
	Public Property PaymentType() As System.Nullable(Of Integer)
		Get
			Return Me._PaymentType
		End Get
		Set
			If (Me._PaymentType.Equals(value) = false) Then
				Me.OnPaymentTypeChanging(value)
				Me.SendPropertyChanging
				Me._PaymentType = value
				Me.SendPropertyChanged("PaymentType")
				Me.OnPaymentTypeChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_FullAmount", DbType:="Decimal(18,3)")>  _
	Public Property FullAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._FullAmount
		End Get
		Set
			If (Me._FullAmount.Equals(value) = false) Then
				Me.OnFullAmountChanging(value)
				Me.SendPropertyChanging
				Me._FullAmount = value
				Me.SendPropertyChanged("FullAmount")
				Me.OnFullAmountChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_NilAmount", DbType:="Decimal(18,3)")>  _
	Public Property NilAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._NilAmount
		End Get
		Set
			If (Me._NilAmount.Equals(value) = false) Then
				Me.OnNilAmountChanging(value)
				Me.SendPropertyChanging
				Me._NilAmount = value
				Me.SendPropertyChanged("NilAmount")
				Me.OnNilAmountChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_SocialAmount", DbType:="Decimal(18,3)")>  _
	Public Property SocialAmount() As System.Nullable(Of Decimal)
		Get
			Return Me._SocialAmount
		End Get
		Set
			If (Me._SocialAmount.Equals(value) = false) Then
				Me.OnSocialAmountChanging(value)
				Me.SendPropertyChanging
				Me._SocialAmount = value
				Me.SendPropertyChanged("SocialAmount")
				Me.OnSocialAmountChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_PaymentCur", DbType:="NVarChar(50)")>  _
	Public Property PaymentCur() As String
		Get
			Return Me._PaymentCur
		End Get
		Set
			If (String.Equals(Me._PaymentCur, value) = false) Then
				Me.OnPaymentCurChanging(value)
				Me.SendPropertyChanging
				Me._PaymentCur = value
				Me.SendPropertyChanged("PaymentCur")
				Me.OnPaymentCurChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Comment", DbType:="NVarChar(500)")>  _
	Public Property Comment() As String
		Get
			Return Me._Comment
		End Get
		Set
			If (String.Equals(Me._Comment, value) = false) Then
				Me.OnCommentChanging(value)
				Me.SendPropertyChanging
				Me._Comment = value
				Me.SendPropertyChanged("Comment")
				Me.OnCommentChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_TotalSocial", DbType:="Decimal(18,3)")>  _
	Public Property TotalSocial() As System.Nullable(Of Decimal)
		Get
			Return Me._TotalSocial
		End Get
		Set
			If (Me._TotalSocial.Equals(value) = false) Then
				Me.OnTotalSocialChanging(value)
				Me.SendPropertyChanging
				Me._TotalSocial = value
				Me.SendPropertyChanged("TotalSocial")
				Me.OnTotalSocialChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_TIME_CREATE", DbType:="NVarChar(50)")>  _
	Public Property TIME_CREATE() As String
		Get
			Return Me._TIME_CREATE
		End Get
		Set
			If (String.Equals(Me._TIME_CREATE, value) = false) Then
				Me.OnTIME_CREATEChanging(value)
				Me.SendPropertyChanging
				Me._TIME_CREATE = value
				Me.SendPropertyChanged("TIME_CREATE")
				Me.OnTIME_CREATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Table(Name:="dbo.RECEIPT_DETAIL")>  _
Partial Public Class RECEIPT_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ReceiptDID As Decimal
	
	Private _ReceiptNo As String
	
	Private _ItemID As String
	
	Private _ItemPrice As System.Nullable(Of Decimal)
	
	Private _ItemQTY As System.Nullable(Of Decimal)
	
	Private _SubTotalReal As System.Nullable(Of Decimal)
	
	Private _SubTotalDolar As System.Nullable(Of Decimal)
	
	Private _IncomeID As System.Nullable(Of Decimal)
	
	Private _ReceiptDate As System.Nullable(Of Date)
	
	Private _ItemCost As System.Nullable(Of Decimal)
	
	Private _EXCHANGE_RATE As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnReceiptDIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnReceiptDIDChanged()
    End Sub
    Partial Private Sub OnReceiptNoChanging(value As String)
    End Sub
    Partial Private Sub OnReceiptNoChanged()
    End Sub
    Partial Private Sub OnItemIDChanging(value As String)
    End Sub
    Partial Private Sub OnItemIDChanged()
    End Sub
    Partial Private Sub OnItemPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnItemPriceChanged()
    End Sub
    Partial Private Sub OnItemQTYChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnItemQTYChanged()
    End Sub
    Partial Private Sub OnSubTotalRealChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSubTotalRealChanged()
    End Sub
    Partial Private Sub OnSubTotalDolarChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSubTotalDolarChanged()
    End Sub
    Partial Private Sub OnIncomeIDChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnIncomeIDChanged()
    End Sub
    Partial Private Sub OnReceiptDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnReceiptDateChanged()
    End Sub
    Partial Private Sub OnItemCostChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnItemCostChanged()
    End Sub
    Partial Private Sub OnEXCHANGE_RATEChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnEXCHANGE_RATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Column(Storage:="_ReceiptDID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ReceiptDID() As Decimal
		Get
			Return Me._ReceiptDID
		End Get
		Set
			If ((Me._ReceiptDID = value)  _
						= false) Then
				Me.OnReceiptDIDChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptDID = value
				Me.SendPropertyChanged("ReceiptDID")
				Me.OnReceiptDIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReceiptNo", DbType:="NVarChar(50)")>  _
	Public Property ReceiptNo() As String
		Get
			Return Me._ReceiptNo
		End Get
		Set
			If (String.Equals(Me._ReceiptNo, value) = false) Then
				Me.OnReceiptNoChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptNo = value
				Me.SendPropertyChanged("ReceiptNo")
				Me.OnReceiptNoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ItemID", DbType:="NVarChar(50)")>  _
	Public Property ItemID() As String
		Get
			Return Me._ItemID
		End Get
		Set
			If (String.Equals(Me._ItemID, value) = false) Then
				Me.OnItemIDChanging(value)
				Me.SendPropertyChanging
				Me._ItemID = value
				Me.SendPropertyChanged("ItemID")
				Me.OnItemIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ItemPrice", DbType:="Decimal(18,3)")>  _
	Public Property ItemPrice() As System.Nullable(Of Decimal)
		Get
			Return Me._ItemPrice
		End Get
		Set
			If (Me._ItemPrice.Equals(value) = false) Then
				Me.OnItemPriceChanging(value)
				Me.SendPropertyChanging
				Me._ItemPrice = value
				Me.SendPropertyChanged("ItemPrice")
				Me.OnItemPriceChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ItemQTY", DbType:="Decimal(18,0)")>  _
	Public Property ItemQTY() As System.Nullable(Of Decimal)
		Get
			Return Me._ItemQTY
		End Get
		Set
			If (Me._ItemQTY.Equals(value) = false) Then
				Me.OnItemQTYChanging(value)
				Me.SendPropertyChanging
				Me._ItemQTY = value
				Me.SendPropertyChanged("ItemQTY")
				Me.OnItemQTYChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_SubTotalReal", DbType:="Decimal(18,0)")>  _
	Public Property SubTotalReal() As System.Nullable(Of Decimal)
		Get
			Return Me._SubTotalReal
		End Get
		Set
			If (Me._SubTotalReal.Equals(value) = false) Then
				Me.OnSubTotalRealChanging(value)
				Me.SendPropertyChanging
				Me._SubTotalReal = value
				Me.SendPropertyChanged("SubTotalReal")
				Me.OnSubTotalRealChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_SubTotalDolar", DbType:="Decimal(18,3)")>  _
	Public Property SubTotalDolar() As System.Nullable(Of Decimal)
		Get
			Return Me._SubTotalDolar
		End Get
		Set
			If (Me._SubTotalDolar.Equals(value) = false) Then
				Me.OnSubTotalDolarChanging(value)
				Me.SendPropertyChanging
				Me._SubTotalDolar = value
				Me.SendPropertyChanged("SubTotalDolar")
				Me.OnSubTotalDolarChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_IncomeID", DbType:="Decimal(18,0)")>  _
	Public Property IncomeID() As System.Nullable(Of Decimal)
		Get
			Return Me._IncomeID
		End Get
		Set
			If (Me._IncomeID.Equals(value) = false) Then
				Me.OnIncomeIDChanging(value)
				Me.SendPropertyChanging
				Me._IncomeID = value
				Me.SendPropertyChanged("IncomeID")
				Me.OnIncomeIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReceiptDate", DbType:="DateTime")>  _
	Public Property ReceiptDate() As System.Nullable(Of Date)
		Get
			Return Me._ReceiptDate
		End Get
		Set
			If (Me._ReceiptDate.Equals(value) = false) Then
				Me.OnReceiptDateChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptDate = value
				Me.SendPropertyChanged("ReceiptDate")
				Me.OnReceiptDateChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ItemCost", DbType:="Decimal(18,3)")>  _
	Public Property ItemCost() As System.Nullable(Of Decimal)
		Get
			Return Me._ItemCost
		End Get
		Set
			If (Me._ItemCost.Equals(value) = false) Then
				Me.OnItemCostChanging(value)
				Me.SendPropertyChanging
				Me._ItemCost = value
				Me.SendPropertyChanged("ItemCost")
				Me.OnItemCostChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_EXCHANGE_RATE", DbType:="Decimal(18,0)")>  _
	Public Property EXCHANGE_RATE() As System.Nullable(Of Decimal)
		Get
			Return Me._EXCHANGE_RATE
		End Get
		Set
			If (Me._EXCHANGE_RATE.Equals(value) = false) Then
				Me.OnEXCHANGE_RATEChanging(value)
				Me.SendPropertyChanging
				Me._EXCHANGE_RATE = value
				Me.SendPropertyChanged("EXCHANGE_RATE")
				Me.OnEXCHANGE_RATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
