'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.4927
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<System.Data.Linq.Mapping.DatabaseAttribute(Name:="TakeoInventory")>  _
Partial Public Class LinqOpticalShopClassesDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertINCOME_TYPE(instance As INCOME_TYPE)
    End Sub
  Partial Private Sub UpdateINCOME_TYPE(instance As INCOME_TYPE)
    End Sub
  Partial Private Sub DeleteINCOME_TYPE(instance As INCOME_TYPE)
    End Sub
  Partial Private Sub InsertRECEIPT_CUSTOMER(instance As RECEIPT_CUSTOMER)
    End Sub
  Partial Private Sub UpdateRECEIPT_CUSTOMER(instance As RECEIPT_CUSTOMER)
    End Sub
  Partial Private Sub DeleteRECEIPT_CUSTOMER(instance As RECEIPT_CUSTOMER)
    End Sub
  Partial Private Sub InsertDONATION(instance As DONATION)
    End Sub
  Partial Private Sub UpdateDONATION(instance As DONATION)
    End Sub
  Partial Private Sub DeleteDONATION(instance As DONATION)
    End Sub
  Partial Private Sub InsertBARCODE(instance As BARCODE)
    End Sub
  Partial Private Sub UpdateBARCODE(instance As BARCODE)
    End Sub
  Partial Private Sub DeleteBARCODE(instance As BARCODE)
    End Sub
  Partial Private Sub InsertRECEIPT_DETAIL(instance As RECEIPT_DETAIL)
    End Sub
  Partial Private Sub UpdateRECEIPT_DETAIL(instance As RECEIPT_DETAIL)
    End Sub
  Partial Private Sub DeleteRECEIPT_DETAIL(instance As RECEIPT_DETAIL)
    End Sub
  Partial Private Sub InsertRECEIPT(instance As RECEIPT)
    End Sub
  Partial Private Sub UpdateRECEIPT(instance As RECEIPT)
    End Sub
  Partial Private Sub DeleteRECEIPT(instance As RECEIPT)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.TakeoHospitalInventory.My.MySettings.Default.TakeoInventoryConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property INCOME_TYPEs() As System.Data.Linq.Table(Of INCOME_TYPE)
		Get
			Return Me.GetTable(Of INCOME_TYPE)
		End Get
	End Property
	
	Public ReadOnly Property RECEIPT_CUSTOMERs() As System.Data.Linq.Table(Of RECEIPT_CUSTOMER)
		Get
			Return Me.GetTable(Of RECEIPT_CUSTOMER)
		End Get
	End Property
	
	Public ReadOnly Property DONATIONs() As System.Data.Linq.Table(Of DONATION)
		Get
			Return Me.GetTable(Of DONATION)
		End Get
	End Property
	
	Public ReadOnly Property BARCODEs() As System.Data.Linq.Table(Of BARCODE)
		Get
			Return Me.GetTable(Of BARCODE)
		End Get
	End Property
	
	Public ReadOnly Property RECEIPT_DETAILs() As System.Data.Linq.Table(Of RECEIPT_DETAIL)
		Get
			Return Me.GetTable(Of RECEIPT_DETAIL)
		End Get
	End Property
	
	Public ReadOnly Property RECEIPTs() As System.Data.Linq.Table(Of RECEIPT)
		Get
			Return Me.GetTable(Of RECEIPT)
		End Get
	End Property
End Class

<Table(Name:="dbo.INCOME_TYPE")>  _
Partial Public Class INCOME_TYPE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ICID As Decimal
	
	Private _ICType As String
	
	Private _Description As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnICIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnICIDChanged()
    End Sub
    Partial Private Sub OnICTypeChanging(value As String)
    End Sub
    Partial Private Sub OnICTypeChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Column(Storage:="_ICID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ICID() As Decimal
		Get
			Return Me._ICID
		End Get
		Set
			If ((Me._ICID = value)  _
						= false) Then
				Me.OnICIDChanging(value)
				Me.SendPropertyChanging
				Me._ICID = value
				Me.SendPropertyChanged("ICID")
				Me.OnICIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ICType", DbType:="NVarChar(50)")>  _
	Public Property ICType() As String
		Get
			Return Me._ICType
		End Get
		Set
			If (String.Equals(Me._ICType, value) = false) Then
				Me.OnICTypeChanging(value)
				Me.SendPropertyChanging
				Me._ICType = value
				Me.SendPropertyChanged("ICType")
				Me.OnICTypeChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Description", DbType:="NVarChar(150)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Table(Name:="dbo.RECEIPT_CUSTOMER")>  _
Partial Public Class RECEIPT_CUSTOMER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CustID As Decimal
	
	Private _CustomerNo As System.Nullable(Of Decimal)
	
	Private _CusName As String
	
	Private _Sex As System.Nullable(Of Char)
	
	Private _Age As System.Nullable(Of Decimal)
	
	Private _Occupation As String
	
	Private _Province As System.Nullable(Of Decimal)
	
	Private _District As System.Nullable(Of Decimal)
	
	Private _Commune As System.Nullable(Of Decimal)
	
	Private _Village As System.Nullable(Of Decimal)
	
	Private _Address As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCustIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCustIDChanged()
    End Sub
    Partial Private Sub OnCustomerNoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCustomerNoChanged()
    End Sub
    Partial Private Sub OnCusNameChanging(value As String)
    End Sub
    Partial Private Sub OnCusNameChanged()
    End Sub
    Partial Private Sub OnSexChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnSexChanged()
    End Sub
    Partial Private Sub OnAgeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAgeChanged()
    End Sub
    Partial Private Sub OnOccupationChanging(value As String)
    End Sub
    Partial Private Sub OnOccupationChanged()
    End Sub
    Partial Private Sub OnProvinceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnProvinceChanged()
    End Sub
    Partial Private Sub OnDistrictChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDistrictChanged()
    End Sub
    Partial Private Sub OnCommuneChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCommuneChanged()
    End Sub
    Partial Private Sub OnVillageChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnVillageChanged()
    End Sub
    Partial Private Sub OnAddressChanging(value As String)
    End Sub
    Partial Private Sub OnAddressChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Column(Storage:="_CustID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property CustID() As Decimal
		Get
			Return Me._CustID
		End Get
		Set
			If ((Me._CustID = value)  _
						= false) Then
				Me.OnCustIDChanging(value)
				Me.SendPropertyChanging
				Me._CustID = value
				Me.SendPropertyChanged("CustID")
				Me.OnCustIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_CustomerNo", DbType:="Decimal(18,0)")>  _
	Public Property CustomerNo() As System.Nullable(Of Decimal)
		Get
			Return Me._CustomerNo
		End Get
		Set
			If (Me._CustomerNo.Equals(value) = false) Then
				Me.OnCustomerNoChanging(value)
				Me.SendPropertyChanging
				Me._CustomerNo = value
				Me.SendPropertyChanged("CustomerNo")
				Me.OnCustomerNoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_CusName", DbType:="NVarChar(50)")>  _
	Public Property CusName() As String
		Get
			Return Me._CusName
		End Get
		Set
			If (String.Equals(Me._CusName, value) = false) Then
				Me.OnCusNameChanging(value)
				Me.SendPropertyChanging
				Me._CusName = value
				Me.SendPropertyChanged("CusName")
				Me.OnCusNameChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Sex", DbType:="Char(1)")>  _
	Public Property Sex() As System.Nullable(Of Char)
		Get
			Return Me._Sex
		End Get
		Set
			If (Me._Sex.Equals(value) = false) Then
				Me.OnSexChanging(value)
				Me.SendPropertyChanging
				Me._Sex = value
				Me.SendPropertyChanged("Sex")
				Me.OnSexChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Age", DbType:="Decimal(18,0)")>  _
	Public Property Age() As System.Nullable(Of Decimal)
		Get
			Return Me._Age
		End Get
		Set
			If (Me._Age.Equals(value) = false) Then
				Me.OnAgeChanging(value)
				Me.SendPropertyChanging
				Me._Age = value
				Me.SendPropertyChanged("Age")
				Me.OnAgeChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Occupation", DbType:="NVarChar(100)")>  _
	Public Property Occupation() As String
		Get
			Return Me._Occupation
		End Get
		Set
			If (String.Equals(Me._Occupation, value) = false) Then
				Me.OnOccupationChanging(value)
				Me.SendPropertyChanging
				Me._Occupation = value
				Me.SendPropertyChanged("Occupation")
				Me.OnOccupationChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Province", DbType:="Decimal(18,0)")>  _
	Public Property Province() As System.Nullable(Of Decimal)
		Get
			Return Me._Province
		End Get
		Set
			If (Me._Province.Equals(value) = false) Then
				Me.OnProvinceChanging(value)
				Me.SendPropertyChanging
				Me._Province = value
				Me.SendPropertyChanged("Province")
				Me.OnProvinceChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_District", DbType:="Decimal(18,0)")>  _
	Public Property District() As System.Nullable(Of Decimal)
		Get
			Return Me._District
		End Get
		Set
			If (Me._District.Equals(value) = false) Then
				Me.OnDistrictChanging(value)
				Me.SendPropertyChanging
				Me._District = value
				Me.SendPropertyChanged("District")
				Me.OnDistrictChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Commune", DbType:="Decimal(18,0)")>  _
	Public Property Commune() As System.Nullable(Of Decimal)
		Get
			Return Me._Commune
		End Get
		Set
			If (Me._Commune.Equals(value) = false) Then
				Me.OnCommuneChanging(value)
				Me.SendPropertyChanging
				Me._Commune = value
				Me.SendPropertyChanged("Commune")
				Me.OnCommuneChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Village", DbType:="Decimal(18,0)")>  _
	Public Property Village() As System.Nullable(Of Decimal)
		Get
			Return Me._Village
		End Get
		Set
			If (Me._Village.Equals(value) = false) Then
				Me.OnVillageChanging(value)
				Me.SendPropertyChanging
				Me._Village = value
				Me.SendPropertyChanged("Village")
				Me.OnVillageChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Address", DbType:="NVarChar(250)")>  _
	Public Property Address() As String
		Get
			Return Me._Address
		End Get
		Set
			If (String.Equals(Me._Address, value) = false) Then
				Me.OnAddressChanging(value)
				Me.SendPropertyChanging
				Me._Address = value
				Me.SendPropertyChanged("Address")
				Me.OnAddressChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Table(Name:="dbo.DONATION")>  _
Partial Public Class DONATION
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DonationID As Decimal
	
	Private _Donation As String
	
	Private _Description As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDonationIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnDonationIDChanged()
    End Sub
    Partial Private Sub OnDonationChanging(value As String)
    End Sub
    Partial Private Sub OnDonationChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Column(Storage:="_DonationID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property DonationID() As Decimal
		Get
			Return Me._DonationID
		End Get
		Set
			If ((Me._DonationID = value)  _
						= false) Then
				Me.OnDonationIDChanging(value)
				Me.SendPropertyChanging
				Me._DonationID = value
				Me.SendPropertyChanged("DonationID")
				Me.OnDonationIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Donation", DbType:="NVarChar(50)")>  _
	Public Property Donation() As String
		Get
			Return Me._Donation
		End Get
		Set
			If (String.Equals(Me._Donation, value) = false) Then
				Me.OnDonationChanging(value)
				Me.SendPropertyChanging
				Me._Donation = value
				Me.SendPropertyChanged("Donation")
				Me.OnDonationChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Description", DbType:="NVarChar(50)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Table(Name:="dbo.BARCODE")>  _
Partial Public Class BARCODE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BarcodeID As Decimal
	
	Private _BarcodeNo As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBarcodeIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBarcodeIDChanged()
    End Sub
    Partial Private Sub OnBarcodeNoChanging(value As String)
    End Sub
    Partial Private Sub OnBarcodeNoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Column(Storage:="_BarcodeID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property BarcodeID() As Decimal
		Get
			Return Me._BarcodeID
		End Get
		Set
			If ((Me._BarcodeID = value)  _
						= false) Then
				Me.OnBarcodeIDChanging(value)
				Me.SendPropertyChanging
				Me._BarcodeID = value
				Me.SendPropertyChanged("BarcodeID")
				Me.OnBarcodeIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_BarcodeNo", DbType:="VarChar(50)")>  _
	Public Property BarcodeNo() As String
		Get
			Return Me._BarcodeNo
		End Get
		Set
			If (String.Equals(Me._BarcodeNo, value) = false) Then
				Me.OnBarcodeNoChanging(value)
				Me.SendPropertyChanging
				Me._BarcodeNo = value
				Me.SendPropertyChanged("BarcodeNo")
				Me.OnBarcodeNoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Table(Name:="dbo.RECEIPT_DETAIL")>  _
Partial Public Class RECEIPT_DETAIL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ReceiptDID As Decimal
	
	Private _ReceiptNo As String
	
	Private _ItemID As String
	
	Private _ItemPrice As System.Nullable(Of Decimal)
	
	Private _ItemQTY As System.Nullable(Of Decimal)
	
	Private _SubTotalReal As System.Nullable(Of Double)
	
	Private _SubTotalDolar As System.Nullable(Of Double)
	
	Private _IncomeID As System.Nullable(Of Decimal)
	
	Private _ReceiptDate As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnReceiptDIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnReceiptDIDChanged()
    End Sub
    Partial Private Sub OnReceiptNoChanging(value As String)
    End Sub
    Partial Private Sub OnReceiptNoChanged()
    End Sub
    Partial Private Sub OnItemIDChanging(value As String)
    End Sub
    Partial Private Sub OnItemIDChanged()
    End Sub
    Partial Private Sub OnItemPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnItemPriceChanged()
    End Sub
    Partial Private Sub OnItemQTYChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnItemQTYChanged()
    End Sub
    Partial Private Sub OnSubTotalRealChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSubTotalRealChanged()
    End Sub
    Partial Private Sub OnSubTotalDolarChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSubTotalDolarChanged()
    End Sub
    Partial Private Sub OnIncomeIDChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnIncomeIDChanged()
    End Sub
    Partial Private Sub OnReceiptDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnReceiptDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Column(Storage:="_ReceiptDID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ReceiptDID() As Decimal
		Get
			Return Me._ReceiptDID
		End Get
		Set
			If ((Me._ReceiptDID = value)  _
						= false) Then
				Me.OnReceiptDIDChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptDID = value
				Me.SendPropertyChanged("ReceiptDID")
				Me.OnReceiptDIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReceiptNo", DbType:="NVarChar(50)")>  _
	Public Property ReceiptNo() As String
		Get
			Return Me._ReceiptNo
		End Get
		Set
			If (String.Equals(Me._ReceiptNo, value) = false) Then
				Me.OnReceiptNoChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptNo = value
				Me.SendPropertyChanged("ReceiptNo")
				Me.OnReceiptNoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ItemID", DbType:="NVarChar(50)")>  _
	Public Property ItemID() As String
		Get
			Return Me._ItemID
		End Get
		Set
			If (String.Equals(Me._ItemID, value) = false) Then
				Me.OnItemIDChanging(value)
				Me.SendPropertyChanging
				Me._ItemID = value
				Me.SendPropertyChanged("ItemID")
				Me.OnItemIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ItemPrice", DbType:="Decimal(18,0)")>  _
	Public Property ItemPrice() As System.Nullable(Of Decimal)
		Get
			Return Me._ItemPrice
		End Get
		Set
			If (Me._ItemPrice.Equals(value) = false) Then
				Me.OnItemPriceChanging(value)
				Me.SendPropertyChanging
				Me._ItemPrice = value
				Me.SendPropertyChanged("ItemPrice")
				Me.OnItemPriceChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ItemQTY", DbType:="Decimal(18,0)")>  _
	Public Property ItemQTY() As System.Nullable(Of Decimal)
		Get
			Return Me._ItemQTY
		End Get
		Set
			If (Me._ItemQTY.Equals(value) = false) Then
				Me.OnItemQTYChanging(value)
				Me.SendPropertyChanging
				Me._ItemQTY = value
				Me.SendPropertyChanged("ItemQTY")
				Me.OnItemQTYChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_SubTotalReal", DbType:="Float")>  _
	Public Property SubTotalReal() As System.Nullable(Of Double)
		Get
			Return Me._SubTotalReal
		End Get
		Set
			If (Me._SubTotalReal.Equals(value) = false) Then
				Me.OnSubTotalRealChanging(value)
				Me.SendPropertyChanging
				Me._SubTotalReal = value
				Me.SendPropertyChanged("SubTotalReal")
				Me.OnSubTotalRealChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_SubTotalDolar", DbType:="Float")>  _
	Public Property SubTotalDolar() As System.Nullable(Of Double)
		Get
			Return Me._SubTotalDolar
		End Get
		Set
			If (Me._SubTotalDolar.Equals(value) = false) Then
				Me.OnSubTotalDolarChanging(value)
				Me.SendPropertyChanging
				Me._SubTotalDolar = value
				Me.SendPropertyChanged("SubTotalDolar")
				Me.OnSubTotalDolarChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_IncomeID", DbType:="Decimal(18,0)")>  _
	Public Property IncomeID() As System.Nullable(Of Decimal)
		Get
			Return Me._IncomeID
		End Get
		Set
			If (Me._IncomeID.Equals(value) = false) Then
				Me.OnIncomeIDChanging(value)
				Me.SendPropertyChanging
				Me._IncomeID = value
				Me.SendPropertyChanged("IncomeID")
				Me.OnIncomeIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReceiptDate", DbType:="DateTime")>  _
	Public Property ReceiptDate() As System.Nullable(Of Date)
		Get
			Return Me._ReceiptDate
		End Get
		Set
			If (Me._ReceiptDate.Equals(value) = false) Then
				Me.OnReceiptDateChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptDate = value
				Me.SendPropertyChanged("ReceiptDate")
				Me.OnReceiptDateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Table(Name:="dbo.RECEIPT")>  _
Partial Public Class RECEIPT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ReceiptID As Decimal
	
	Private _ReceiptNo As String
	
	Private _ReceiptDate As System.Nullable(Of Date)
	
	Private _CustomerNo As System.Nullable(Of Decimal)
	
	Private _MedicReal As System.Nullable(Of Double)
	
	Private _MedicDolar As System.Nullable(Of Double)
	
	Private _EyeGlassesReal As System.Nullable(Of Double)
	
	Private _EyeGlassesDolar As System.Nullable(Of Double)
	
	Private _TotalReal As System.Nullable(Of Double)
	
	Private _TotalDolar As System.Nullable(Of Double)
	
	Private _AmountInWords As String
	
	Private _AmountFigureReal As System.Nullable(Of Double)
	
	Private _AmountFigureDolar As System.Nullable(Of Double)
	
	Private _ReturnReal As System.Nullable(Of Double)
	
	Private _ReturnDolar As System.Nullable(Of Double)
	
	Private _IsCurrency As System.Nullable(Of Boolean)
	
	Private _IsDonation As System.Nullable(Of Boolean)
	
	Private _DonationID As System.Nullable(Of Decimal)
	
	Private _PayBySelf As System.Nullable(Of Double)
	
	Private _PayByDonation As System.Nullable(Of Double)
	
	Private _IsPaid As System.Nullable(Of Decimal)
	
	Private _ReceiptNote As String
	
	Private _UserID As System.Nullable(Of Decimal)
	
	Private _UserName As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnReceiptIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnReceiptIDChanged()
    End Sub
    Partial Private Sub OnReceiptNoChanging(value As String)
    End Sub
    Partial Private Sub OnReceiptNoChanged()
    End Sub
    Partial Private Sub OnReceiptDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnReceiptDateChanged()
    End Sub
    Partial Private Sub OnCustomerNoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCustomerNoChanged()
    End Sub
    Partial Private Sub OnMedicRealChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMedicRealChanged()
    End Sub
    Partial Private Sub OnMedicDolarChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMedicDolarChanged()
    End Sub
    Partial Private Sub OnEyeGlassesRealChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnEyeGlassesRealChanged()
    End Sub
    Partial Private Sub OnEyeGlassesDolarChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnEyeGlassesDolarChanged()
    End Sub
    Partial Private Sub OnTotalRealChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalRealChanged()
    End Sub
    Partial Private Sub OnTotalDolarChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnTotalDolarChanged()
    End Sub
    Partial Private Sub OnAmountInWordsChanging(value As String)
    End Sub
    Partial Private Sub OnAmountInWordsChanged()
    End Sub
    Partial Private Sub OnAmountFigureRealChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAmountFigureRealChanged()
    End Sub
    Partial Private Sub OnAmountFigureDolarChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAmountFigureDolarChanged()
    End Sub
    Partial Private Sub OnReturnRealChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnReturnRealChanged()
    End Sub
    Partial Private Sub OnReturnDolarChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnReturnDolarChanged()
    End Sub
    Partial Private Sub OnIsCurrencyChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsCurrencyChanged()
    End Sub
    Partial Private Sub OnIsDonationChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsDonationChanged()
    End Sub
    Partial Private Sub OnDonationIDChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDonationIDChanged()
    End Sub
    Partial Private Sub OnPayBySelfChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPayBySelfChanged()
    End Sub
    Partial Private Sub OnPayByDonationChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPayByDonationChanged()
    End Sub
    Partial Private Sub OnIsPaidChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnIsPaidChanged()
    End Sub
    Partial Private Sub OnReceiptNoteChanging(value As String)
    End Sub
    Partial Private Sub OnReceiptNoteChanged()
    End Sub
    Partial Private Sub OnUserIDChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnUserNameChanging(value As String)
    End Sub
    Partial Private Sub OnUserNameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Column(Storage:="_ReceiptID", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ReceiptID() As Decimal
		Get
			Return Me._ReceiptID
		End Get
		Set
			If ((Me._ReceiptID = value)  _
						= false) Then
				Me.OnReceiptIDChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptID = value
				Me.SendPropertyChanged("ReceiptID")
				Me.OnReceiptIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReceiptNo", DbType:="NVarChar(50)")>  _
	Public Property ReceiptNo() As String
		Get
			Return Me._ReceiptNo
		End Get
		Set
			If (String.Equals(Me._ReceiptNo, value) = false) Then
				Me.OnReceiptNoChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptNo = value
				Me.SendPropertyChanged("ReceiptNo")
				Me.OnReceiptNoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReceiptDate", DbType:="DateTime")>  _
	Public Property ReceiptDate() As System.Nullable(Of Date)
		Get
			Return Me._ReceiptDate
		End Get
		Set
			If (Me._ReceiptDate.Equals(value) = false) Then
				Me.OnReceiptDateChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptDate = value
				Me.SendPropertyChanged("ReceiptDate")
				Me.OnReceiptDateChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_CustomerNo", DbType:="Decimal(18,0)")>  _
	Public Property CustomerNo() As System.Nullable(Of Decimal)
		Get
			Return Me._CustomerNo
		End Get
		Set
			If (Me._CustomerNo.Equals(value) = false) Then
				Me.OnCustomerNoChanging(value)
				Me.SendPropertyChanging
				Me._CustomerNo = value
				Me.SendPropertyChanged("CustomerNo")
				Me.OnCustomerNoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_MedicReal", DbType:="Float")>  _
	Public Property MedicReal() As System.Nullable(Of Double)
		Get
			Return Me._MedicReal
		End Get
		Set
			If (Me._MedicReal.Equals(value) = false) Then
				Me.OnMedicRealChanging(value)
				Me.SendPropertyChanging
				Me._MedicReal = value
				Me.SendPropertyChanged("MedicReal")
				Me.OnMedicRealChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_MedicDolar", DbType:="Float")>  _
	Public Property MedicDolar() As System.Nullable(Of Double)
		Get
			Return Me._MedicDolar
		End Get
		Set
			If (Me._MedicDolar.Equals(value) = false) Then
				Me.OnMedicDolarChanging(value)
				Me.SendPropertyChanging
				Me._MedicDolar = value
				Me.SendPropertyChanged("MedicDolar")
				Me.OnMedicDolarChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_EyeGlassesReal", DbType:="Float")>  _
	Public Property EyeGlassesReal() As System.Nullable(Of Double)
		Get
			Return Me._EyeGlassesReal
		End Get
		Set
			If (Me._EyeGlassesReal.Equals(value) = false) Then
				Me.OnEyeGlassesRealChanging(value)
				Me.SendPropertyChanging
				Me._EyeGlassesReal = value
				Me.SendPropertyChanged("EyeGlassesReal")
				Me.OnEyeGlassesRealChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_EyeGlassesDolar", DbType:="Float")>  _
	Public Property EyeGlassesDolar() As System.Nullable(Of Double)
		Get
			Return Me._EyeGlassesDolar
		End Get
		Set
			If (Me._EyeGlassesDolar.Equals(value) = false) Then
				Me.OnEyeGlassesDolarChanging(value)
				Me.SendPropertyChanging
				Me._EyeGlassesDolar = value
				Me.SendPropertyChanged("EyeGlassesDolar")
				Me.OnEyeGlassesDolarChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_TotalReal", DbType:="Float")>  _
	Public Property TotalReal() As System.Nullable(Of Double)
		Get
			Return Me._TotalReal
		End Get
		Set
			If (Me._TotalReal.Equals(value) = false) Then
				Me.OnTotalRealChanging(value)
				Me.SendPropertyChanging
				Me._TotalReal = value
				Me.SendPropertyChanged("TotalReal")
				Me.OnTotalRealChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_TotalDolar", DbType:="Float")>  _
	Public Property TotalDolar() As System.Nullable(Of Double)
		Get
			Return Me._TotalDolar
		End Get
		Set
			If (Me._TotalDolar.Equals(value) = false) Then
				Me.OnTotalDolarChanging(value)
				Me.SendPropertyChanging
				Me._TotalDolar = value
				Me.SendPropertyChanged("TotalDolar")
				Me.OnTotalDolarChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_AmountInWords", DbType:="NVarChar(200)")>  _
	Public Property AmountInWords() As String
		Get
			Return Me._AmountInWords
		End Get
		Set
			If (String.Equals(Me._AmountInWords, value) = false) Then
				Me.OnAmountInWordsChanging(value)
				Me.SendPropertyChanging
				Me._AmountInWords = value
				Me.SendPropertyChanged("AmountInWords")
				Me.OnAmountInWordsChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_AmountFigureReal", DbType:="Float")>  _
	Public Property AmountFigureReal() As System.Nullable(Of Double)
		Get
			Return Me._AmountFigureReal
		End Get
		Set
			If (Me._AmountFigureReal.Equals(value) = false) Then
				Me.OnAmountFigureRealChanging(value)
				Me.SendPropertyChanging
				Me._AmountFigureReal = value
				Me.SendPropertyChanged("AmountFigureReal")
				Me.OnAmountFigureRealChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_AmountFigureDolar", DbType:="Float")>  _
	Public Property AmountFigureDolar() As System.Nullable(Of Double)
		Get
			Return Me._AmountFigureDolar
		End Get
		Set
			If (Me._AmountFigureDolar.Equals(value) = false) Then
				Me.OnAmountFigureDolarChanging(value)
				Me.SendPropertyChanging
				Me._AmountFigureDolar = value
				Me.SendPropertyChanged("AmountFigureDolar")
				Me.OnAmountFigureDolarChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReturnReal", DbType:="Float")>  _
	Public Property ReturnReal() As System.Nullable(Of Double)
		Get
			Return Me._ReturnReal
		End Get
		Set
			If (Me._ReturnReal.Equals(value) = false) Then
				Me.OnReturnRealChanging(value)
				Me.SendPropertyChanging
				Me._ReturnReal = value
				Me.SendPropertyChanged("ReturnReal")
				Me.OnReturnRealChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReturnDolar", DbType:="Float")>  _
	Public Property ReturnDolar() As System.Nullable(Of Double)
		Get
			Return Me._ReturnDolar
		End Get
		Set
			If (Me._ReturnDolar.Equals(value) = false) Then
				Me.OnReturnDolarChanging(value)
				Me.SendPropertyChanging
				Me._ReturnDolar = value
				Me.SendPropertyChanged("ReturnDolar")
				Me.OnReturnDolarChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_IsCurrency", DbType:="Bit")>  _
	Public Property IsCurrency() As System.Nullable(Of Boolean)
		Get
			Return Me._IsCurrency
		End Get
		Set
			If (Me._IsCurrency.Equals(value) = false) Then
				Me.OnIsCurrencyChanging(value)
				Me.SendPropertyChanging
				Me._IsCurrency = value
				Me.SendPropertyChanged("IsCurrency")
				Me.OnIsCurrencyChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_IsDonation", DbType:="Bit")>  _
	Public Property IsDonation() As System.Nullable(Of Boolean)
		Get
			Return Me._IsDonation
		End Get
		Set
			If (Me._IsDonation.Equals(value) = false) Then
				Me.OnIsDonationChanging(value)
				Me.SendPropertyChanging
				Me._IsDonation = value
				Me.SendPropertyChanged("IsDonation")
				Me.OnIsDonationChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_DonationID", DbType:="Decimal(18,0)")>  _
	Public Property DonationID() As System.Nullable(Of Decimal)
		Get
			Return Me._DonationID
		End Get
		Set
			If (Me._DonationID.Equals(value) = false) Then
				Me.OnDonationIDChanging(value)
				Me.SendPropertyChanging
				Me._DonationID = value
				Me.SendPropertyChanged("DonationID")
				Me.OnDonationIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_PayBySelf", DbType:="Float")>  _
	Public Property PayBySelf() As System.Nullable(Of Double)
		Get
			Return Me._PayBySelf
		End Get
		Set
			If (Me._PayBySelf.Equals(value) = false) Then
				Me.OnPayBySelfChanging(value)
				Me.SendPropertyChanging
				Me._PayBySelf = value
				Me.SendPropertyChanged("PayBySelf")
				Me.OnPayBySelfChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_PayByDonation", DbType:="Float")>  _
	Public Property PayByDonation() As System.Nullable(Of Double)
		Get
			Return Me._PayByDonation
		End Get
		Set
			If (Me._PayByDonation.Equals(value) = false) Then
				Me.OnPayByDonationChanging(value)
				Me.SendPropertyChanging
				Me._PayByDonation = value
				Me.SendPropertyChanged("PayByDonation")
				Me.OnPayByDonationChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_IsPaid", DbType:="Decimal(18,0)")>  _
	Public Property IsPaid() As System.Nullable(Of Decimal)
		Get
			Return Me._IsPaid
		End Get
		Set
			If (Me._IsPaid.Equals(value) = false) Then
				Me.OnIsPaidChanging(value)
				Me.SendPropertyChanging
				Me._IsPaid = value
				Me.SendPropertyChanged("IsPaid")
				Me.OnIsPaidChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_ReceiptNote", DbType:="NVarChar(250)")>  _
	Public Property ReceiptNote() As String
		Get
			Return Me._ReceiptNote
		End Get
		Set
			If (String.Equals(Me._ReceiptNote, value) = false) Then
				Me.OnReceiptNoteChanging(value)
				Me.SendPropertyChanging
				Me._ReceiptNote = value
				Me.SendPropertyChanged("ReceiptNote")
				Me.OnReceiptNoteChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_UserID", DbType:="Decimal(18,0)")>  _
	Public Property UserID() As System.Nullable(Of Decimal)
		Get
			Return Me._UserID
		End Get
		Set
			If (Me._UserID.Equals(value) = false) Then
				Me.OnUserIDChanging(value)
				Me.SendPropertyChanging
				Me._UserID = value
				Me.SendPropertyChanged("UserID")
				Me.OnUserIDChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_UserName", DbType:="NVarChar(50)")>  _
	Public Property UserName() As String
		Get
			Return Me._UserName
		End Get
		Set
			If (String.Equals(Me._UserName, value) = false) Then
				Me.OnUserNameChanging(value)
				Me.SendPropertyChanging
				Me._UserName = value
				Me.SendPropertyChanged("UserName")
				Me.OnUserNameChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
