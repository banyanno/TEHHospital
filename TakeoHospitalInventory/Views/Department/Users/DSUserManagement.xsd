<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DSUserManagement" targetNamespace="http://tempuri.org/DSUserManagement.xsd" xmlns:mstns="http://tempuri.org/DSUserManagement.xsd" xmlns="http://tempuri.org/DSUserManagement.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="2" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="TakeoInventoryConnectionString2" IsAppSettingsProperty="true" Modifier="Assembly" Name="TakeoInventoryConnectionString2 (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.TakeoHospitalInventory.MySettings.GlobalReference.Default.TakeoInventoryConnectionString2" Provider="System.Data.SqlClient" />
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="TakeoInventoryConnectionString" IsAppSettingsProperty="true" Modifier="Assembly" Name="TakeoInventoryConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.TakeoHospitalInventory.MySettings.GlobalReference.Default.TakeoInventoryConnectionString" Provider="System.Data.SqlClient" />
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="TakeoDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TakeoDBConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.TakeoHospitalInventory.My.MySettings.GlobalReference.Default.TakeoDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Department_Add_UserTableAdapter" GeneratorDataComponentClassName="Department_Add_UserTableAdapter" Name="Department_Add_User" UserDataComponentName="Department_Add_UserTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TakeoDBConnectionString (MySettings)" DbObjectName="TakeoDB.dbo.Department_Add_User" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Department_Add_User] WHERE (([GUNo] = @Original_GUNo) AND ((@IsNull_GroupNo = 1 AND [GroupNo] IS NULL) OR ([GroupNo] = @Original_GroupNo)) AND ((@IsNull_UserNo = 1 AND [UserNo] IS NULL) OR ([UserNo] = @Original_UserNo)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_GUNo" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="GUNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_GroupNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupNo" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_GroupNo" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="GroupNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_UserNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserNo" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_UserNo" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="UserNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Department_Add_User] ([GroupNo], [UserNo]) VALUES (@GroupNo, @UserNo);
SELECT GUNo, GroupNo, UserNo FROM Department_Add_User WHERE (GUNo = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@GroupNo" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="GroupNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@UserNo" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="UserNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GUNo, GroupNo, UserNo FROM dbo.Department_Add_User</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Department_Add_User] SET [GroupNo] = @GroupNo, [UserNo] = @UserNo WHERE (([GUNo] = @Original_GUNo) AND ((@IsNull_GroupNo = 1 AND [GroupNo] IS NULL) OR ([GroupNo] = @Original_GroupNo)) AND ((@IsNull_UserNo = 1 AND [UserNo] IS NULL) OR ([UserNo] = @Original_UserNo)));
SELECT GUNo, GroupNo, UserNo FROM Department_Add_User WHERE (GUNo = @GUNo)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@GroupNo" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="GroupNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@UserNo" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="UserNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_GUNo" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="GUNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_GroupNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupNo" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_GroupNo" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="GroupNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_UserNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserNo" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_UserNo" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="UserNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="GUNo" ColumnName="GUNo" DataSourceName="" DataTypeServer="numeric" DbType="Decimal" Direction="Input" ParameterName="@GUNo" Precision="18" ProviderType="Decimal" Scale="0" Size="9" SourceColumn="GUNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GUNo" DataSetColumn="GUNo" />
              <Mapping SourceColumn="GroupNo" DataSetColumn="GroupNo" />
              <Mapping SourceColumn="UserNo" DataSetColumn="UserNo" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Department_UserTableAdapter" GeneratorDataComponentClassName="Department_UserTableAdapter" Name="Department_User" UserDataComponentName="Department_UserTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TakeoDBConnectionString (MySettings)" DbObjectName="TakeoDB.dbo.Department_User" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Department_User] ([EmployeeName], [UserName], [Password], [isActive]) VALUES (@EmployeeName, @UserName, @Password, @isActive)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@EmployeeName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="EmployeeName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@isActive" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="isActive" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT UserID, EmployeeName, UserName, Password, isActive
FROM Department_User</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
              <Mapping SourceColumn="EmployeeName" DataSetColumn="EmployeeName" />
              <Mapping SourceColumn="UserName" DataSetColumn="UserName" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="isActive" DataSetColumn="isActive" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Deppartment_Permistion_MenuTableAdapter" GeneratorDataComponentClassName="Deppartment_Permistion_MenuTableAdapter" Name="Deppartment_Permistion_Menu" UserDataComponentName="Deppartment_Permistion_MenuTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TakeoDBConnectionString (MySettings)" DbObjectName="TakeoDB.dbo.Deppartment_Permistion_Menu" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Deppartment_Permistion_Menu] WHERE (([GroupID] = @Original_GroupID) AND ((@IsNull_GroupNo = 1 AND [GroupNo] IS NULL) OR ([GroupNo] = @Original_GroupNo)) AND ((@IsNull_MenuNo = 1 AND [MenuNo] IS NULL) OR ([MenuNo] = @Original_MenuNo)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_GroupNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupNo" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_MenuNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MenuNo" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MenuNo" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MenuNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Deppartment_Permistion_Menu] ([GroupNo], [MenuNo]) VALUES (@GroupNo, @MenuNo);
SELECT GroupID, GroupNo, MenuNo FROM Deppartment_Permistion_Menu WHERE (GroupID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MenuNo" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MenuNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GroupID, GroupNo, MenuNo FROM dbo.Deppartment_Permistion_Menu</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Deppartment_Permistion_Menu] SET [GroupNo] = @GroupNo, [MenuNo] = @MenuNo WHERE (([GroupID] = @Original_GroupID) AND ((@IsNull_GroupNo = 1 AND [GroupNo] IS NULL) OR ([GroupNo] = @Original_GroupNo)) AND ((@IsNull_MenuNo = 1 AND [MenuNo] IS NULL) OR ([MenuNo] = @Original_MenuNo)));
SELECT GroupID, GroupNo, MenuNo FROM Deppartment_Permistion_Menu WHERE (GroupID = @GroupID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MenuNo" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MenuNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_GroupNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupNo" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_MenuNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MenuNo" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MenuNo" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MenuNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="GroupID" ColumnName="GroupID" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GroupID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GroupID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GroupID" DataSetColumn="GroupID" />
              <Mapping SourceColumn="GroupNo" DataSetColumn="GroupNo" />
              <Mapping SourceColumn="MenuNo" DataSetColumn="MenuNo" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="VUsersInGroupTableAdapter" GeneratorDataComponentClassName="VUsersInGroupTableAdapter" Name="VUsersInGroup" UserDataComponentName="VUsersInGroupTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TakeoDBConnectionString (MySettings)" DbObjectName="TakeoDB.dbo.VUsersInGroup" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        UserID, EmployeeName, UserName, GroupNo, DepartName, isHospitalManager, isMainStockManager, Password, isActive, NewPassword
FROM            VUsersInGroup</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
              <Mapping SourceColumn="EmployeeName" DataSetColumn="EmployeeName" />
              <Mapping SourceColumn="UserName" DataSetColumn="UserName" />
              <Mapping SourceColumn="GroupNo" DataSetColumn="GroupNo" />
              <Mapping SourceColumn="DepartName" DataSetColumn="DepartName" />
              <Mapping SourceColumn="isHospitalManager" DataSetColumn="isHospitalManager" />
              <Mapping SourceColumn="isMainStockManager" DataSetColumn="isMainStockManager" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
              <Mapping SourceColumn="isActive" DataSetColumn="isActive" />
              <Mapping SourceColumn="NewPassword" DataSetColumn="NewPassword" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="TakeoDBConnectionString (MySettings)" DbObjectName="TakeoDB.dbo.VUsersInGroup" DbObjectType="View" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataUserByGroup" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataUserByGroup" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataUserByGroup" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DepartName, EmployeeName, GroupNo, NewPassword, Password, UserID, UserName, isActive, isHospitalManager, isMainStockManager FROM VUsersInGroup WHERE (GroupNo = @GroupNo)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="GroupNo" ColumnName="GroupNo" DataSourceName="TakeoDB.dbo.VUsersInGroup" DataTypeServer="numeric(18, 0)" DbType="Decimal" Direction="Input" ParameterName="@GroupNo" Precision="18" ProviderType="Decimal" Scale="0" Size="9" SourceColumn="GroupNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="TakeoDBConnectionString (MySettings)" DbObjectName="TakeoDB.dbo.VUsersInGroup" DbObjectType="View" FillMethodModifier="Public" FillMethodName="FillByUseAndPwd" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByUserAndPwd" GeneratorSourceName="FillByUseAndPwd" GetMethodModifier="Public" GetMethodName="GetDataByUserAndPwd" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByUserAndPwd" UserSourceName="FillByUseAndPwd">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DepartName, EmployeeName, GroupNo, NewPassword, Password, UserID, UserName, isActive, isHospitalManager, isMainStockManager FROM VUsersInGroup WHERE (UserName = @UserName) AND (NewPassword = @Password)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="UserName" ColumnName="UserName" DataSourceName="TakeoDB.dbo.VUsersInGroup" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Password" ColumnName="NewPassword" DataSourceName="TakeoDB.dbo.VUsersInGroup" DataTypeServer="varchar(250)" DbType="AnsiString" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="VarChar" Scale="0" Size="250" SourceColumn="NewPassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="TakeoDBConnectionString (MySettings)" DbObjectName="TakeoDB.dbo.VUsersInGroup" DbObjectType="View" FillMethodModifier="Public" FillMethodName="FillByUserID" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByUserID" GeneratorSourceName="FillByUserID" GetMethodModifier="Public" GetMethodName="GetDataByUserID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByUserID" UserSourceName="FillByUserID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DepartName, EmployeeName, GroupNo, NewPassword, Password, UserID, UserName, isActive, isHospitalManager, isMainStockManager FROM VUsersInGroup WHERE (UserID = @UserID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="UserID" ColumnName="UserID" DataSourceName="TakeoDB.dbo.VUsersInGroup" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="VGroupPermistionTableAdapter" GeneratorDataComponentClassName="VGroupPermistionTableAdapter" Name="VGroupPermistion" UserDataComponentName="VGroupPermistionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TakeoDBConnectionString (MySettings)" DbObjectName="TakeoDB.dbo.VGroupPermistion" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        MenuDisplay, MenuNo, GroupNo, GroupID, MenuAutoNo
FROM            VGroupPermistion</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MenuDisplay" DataSetColumn="MenuDisplay" />
              <Mapping SourceColumn="MenuNo" DataSetColumn="MenuNo" />
              <Mapping SourceColumn="GroupNo" DataSetColumn="GroupNo" />
              <Mapping SourceColumn="GroupID" DataSetColumn="GroupID" />
              <Mapping SourceColumn="MenuAutoNo" DataSetColumn="MenuAutoNo" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="TakeoDBConnectionString (MySettings)" DbObjectName="TakeoDB.dbo.VGroupPermistion" DbObjectType="View" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByGroupNo" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetDataByGroupNo" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByGroupNo" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT GroupID, GroupNo, MenuAutoNo, MenuDisplay, MenuNo FROM VGroupPermistion WHERE (GroupNo = @GroupNo)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="GroupNo" ColumnName="GroupNo" DataSourceName="TakeoDB.dbo.VGroupPermistion" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GroupNo" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GroupNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Menu_INVENTORYTableAdapter" GeneratorDataComponentClassName="Menu_INVENTORYTableAdapter" Name="Menu_INVENTORY" UserDataComponentName="Menu_INVENTORYTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TakeoDBConnectionString (MySettings)" DbObjectName="TakeoDB.dbo.Menu_INVENTORY" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Menu_INVENTORY] WHERE (([MenuNo] = @Original_MenuNo) AND ((@IsNull_MenuDisplay = 1 AND [MenuDisplay] IS NULL) OR ([MenuDisplay] = @Original_MenuDisplay)) AND ((@IsNull_MenuKey = 1 AND [MenuKey] IS NULL) OR ([MenuKey] = @Original_MenuKey)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MenuNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MenuNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_MenuDisplay" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MenuDisplay" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MenuDisplay" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MenuDisplay" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_MenuKey" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MenuKey" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MenuKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MenuKey" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Menu_INVENTORY] ([MenuDisplay], [MenuKey]) VALUES (@MenuDisplay, @MenuKey);
SELECT MenuNo, MenuDisplay, MenuKey FROM Menu_INVENTORY WHERE (MenuNo = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MenuDisplay" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MenuDisplay" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MenuKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MenuKey" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MenuNo, MenuDisplay, MenuKey FROM dbo.Menu_INVENTORY</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Menu_INVENTORY] SET [MenuDisplay] = @MenuDisplay, [MenuKey] = @MenuKey WHERE (([MenuNo] = @Original_MenuNo) AND ((@IsNull_MenuDisplay = 1 AND [MenuDisplay] IS NULL) OR ([MenuDisplay] = @Original_MenuDisplay)) AND ((@IsNull_MenuKey = 1 AND [MenuKey] IS NULL) OR ([MenuKey] = @Original_MenuKey)));
SELECT MenuNo, MenuDisplay, MenuKey FROM Menu_INVENTORY WHERE (MenuNo = @MenuNo)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MenuDisplay" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MenuDisplay" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MenuKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MenuKey" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MenuNo" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MenuNo" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_MenuDisplay" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MenuDisplay" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MenuDisplay" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MenuDisplay" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_MenuKey" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MenuKey" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MenuKey" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MenuKey" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="MenuNo" ColumnName="MenuNo" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@MenuNo" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="MenuNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MenuNo" DataSetColumn="MenuNo" />
              <Mapping SourceColumn="MenuDisplay" DataSetColumn="MenuDisplay" />
              <Mapping SourceColumn="MenuKey" DataSetColumn="MenuKey" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="VEODAccessRightTableAdapter" GeneratorDataComponentClassName="VEODAccessRightTableAdapter" Name="VEODAccessRight" UserDataComponentName="VEODAccessRightTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TakeoDBConnectionString (MySettings)" DbObjectName="TakeoDB_INVEN.dbo.VEODAccessRight" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        UserNo, DepartName, DepartID
FROM            VEODAccessRight</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserNo" DataSetColumn="UserNo" />
              <Mapping SourceColumn="DepartName" DataSetColumn="DepartName" />
              <Mapping SourceColumn="DepartID" DataSetColumn="DepartID" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="TakeoDBConnectionString (MySettings)" DbObjectName="TakeoDB_INVEN.dbo.VEODAccessRight" DbObjectType="View" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetEODAccessRightByUserID" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetEODAccessRightByUserID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetEODAccessRightByUserID" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DepartID, DepartName, UserNo FROM VEODAccessRight WHERE (UserNo = @UserNo)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="UserNo" ColumnName="UserNo" DataSourceName="TakeoDB_INVEN.dbo.VEODAccessRight" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@UserNo" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="UserNo" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DSUserManagement" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="DSUserManagement" msprop:Generator_DataSetName="DSUserManagement" msprop:EnableTableAdapterManager="true">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Department_Add_User" msprop:Generator_UserTableName="Department_Add_User" msprop:Generator_RowDeletedName="Department_Add_UserRowDeleted" msprop:Generator_RowChangedName="Department_Add_UserRowChanged" msprop:Generator_RowClassName="Department_Add_UserRow" msprop:Generator_RowChangingName="Department_Add_UserRowChanging" msprop:Generator_RowEvArgName="Department_Add_UserRowChangeEvent" msprop:Generator_RowEvHandlerName="Department_Add_UserRowChangeEventHandler" msprop:Generator_TableClassName="Department_Add_UserDataTable" msprop:Generator_TableVarName="tableDepartment_Add_User" msprop:Generator_RowDeletingName="Department_Add_UserRowDeleting" msprop:Generator_TablePropName="Department_Add_User">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GUNo" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="GUNo" msprop:Generator_ColumnPropNameInRow="GUNo" msprop:Generator_ColumnVarNameInTable="columnGUNo" msprop:Generator_ColumnPropNameInTable="GUNoColumn" type="xs:decimal" />
              <xs:element name="GroupNo" msprop:Generator_UserColumnName="GroupNo" msprop:Generator_ColumnPropNameInRow="GroupNo" msprop:Generator_ColumnVarNameInTable="columnGroupNo" msprop:Generator_ColumnPropNameInTable="GroupNoColumn" type="xs:decimal" minOccurs="0" />
              <xs:element name="UserNo" msprop:Generator_UserColumnName="UserNo" msprop:Generator_ColumnPropNameInRow="UserNo" msprop:Generator_ColumnVarNameInTable="columnUserNo" msprop:Generator_ColumnPropNameInTable="UserNoColumn" type="xs:decimal" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Department_User" msprop:Generator_UserTableName="Department_User" msprop:Generator_RowDeletedName="Department_UserRowDeleted" msprop:Generator_RowChangedName="Department_UserRowChanged" msprop:Generator_RowClassName="Department_UserRow" msprop:Generator_RowChangingName="Department_UserRowChanging" msprop:Generator_RowEvArgName="Department_UserRowChangeEvent" msprop:Generator_RowEvHandlerName="Department_UserRowChangeEventHandler" msprop:Generator_TableClassName="Department_UserDataTable" msprop:Generator_TableVarName="tableDepartment_User" msprop:Generator_RowDeletingName="Department_UserRowDeleting" msprop:Generator_TablePropName="Department_User">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="UserID" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_ColumnVarNameInTable="columnUserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" type="xs:int" />
              <xs:element name="EmployeeName" msprop:Generator_UserColumnName="EmployeeName" msprop:Generator_ColumnPropNameInRow="EmployeeName" msprop:Generator_ColumnVarNameInTable="columnEmployeeName" msprop:Generator_ColumnPropNameInTable="EmployeeNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="80" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserName" msprop:Generator_UserColumnName="UserName" msprop:Generator_ColumnPropNameInRow="UserName" msprop:Generator_ColumnVarNameInTable="columnUserName" msprop:Generator_ColumnPropNameInTable="UserNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Password" msprop:Generator_UserColumnName="Password" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_ColumnPropNameInTable="PasswordColumn" type="xs:base64Binary" />
              <xs:element name="isActive" msprop:Generator_UserColumnName="isActive" msprop:Generator_ColumnPropNameInRow="isActive" msprop:Generator_ColumnVarNameInTable="columnisActive" msprop:Generator_ColumnPropNameInTable="isActiveColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Deppartment_Permistion_Menu" msprop:Generator_UserTableName="Deppartment_Permistion_Menu" msprop:Generator_RowDeletedName="Deppartment_Permistion_MenuRowDeleted" msprop:Generator_RowChangedName="Deppartment_Permistion_MenuRowChanged" msprop:Generator_RowClassName="Deppartment_Permistion_MenuRow" msprop:Generator_RowChangingName="Deppartment_Permistion_MenuRowChanging" msprop:Generator_RowEvArgName="Deppartment_Permistion_MenuRowChangeEvent" msprop:Generator_RowEvHandlerName="Deppartment_Permistion_MenuRowChangeEventHandler" msprop:Generator_TableClassName="Deppartment_Permistion_MenuDataTable" msprop:Generator_TableVarName="tableDeppartment_Permistion_Menu" msprop:Generator_RowDeletingName="Deppartment_Permistion_MenuRowDeleting" msprop:Generator_TablePropName="Deppartment_Permistion_Menu">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GroupID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="GroupID" msprop:Generator_ColumnPropNameInRow="GroupID" msprop:Generator_ColumnVarNameInTable="columnGroupID" msprop:Generator_ColumnPropNameInTable="GroupIDColumn" type="xs:int" />
              <xs:element name="GroupNo" msprop:Generator_UserColumnName="GroupNo" msprop:Generator_ColumnPropNameInRow="GroupNo" msprop:Generator_ColumnVarNameInTable="columnGroupNo" msprop:Generator_ColumnPropNameInTable="GroupNoColumn" type="xs:int" minOccurs="0" />
              <xs:element name="MenuNo" msprop:Generator_UserColumnName="MenuNo" msprop:Generator_ColumnPropNameInRow="MenuNo" msprop:Generator_ColumnVarNameInTable="columnMenuNo" msprop:Generator_ColumnPropNameInTable="MenuNoColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="VUsersInGroup" msprop:Generator_UserTableName="VUsersInGroup" msprop:Generator_RowDeletedName="VUsersInGroupRowDeleted" msprop:Generator_RowChangedName="VUsersInGroupRowChanged" msprop:Generator_RowClassName="VUsersInGroupRow" msprop:Generator_RowChangingName="VUsersInGroupRowChanging" msprop:Generator_RowEvArgName="VUsersInGroupRowChangeEvent" msprop:Generator_RowEvHandlerName="VUsersInGroupRowChangeEventHandler" msprop:Generator_TableClassName="VUsersInGroupDataTable" msprop:Generator_TableVarName="tableVUsersInGroup" msprop:Generator_RowDeletingName="VUsersInGroupRowDeleting" msprop:Generator_TablePropName="VUsersInGroup">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserID" msprop:Generator_UserColumnName="UserID" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_ColumnVarNameInTable="columnUserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" type="xs:int" />
              <xs:element name="EmployeeName" msprop:Generator_UserColumnName="EmployeeName" msprop:Generator_ColumnPropNameInRow="EmployeeName" msprop:Generator_ColumnVarNameInTable="columnEmployeeName" msprop:Generator_ColumnPropNameInTable="EmployeeNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="80" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserName" msprop:Generator_UserColumnName="UserName" msprop:Generator_ColumnPropNameInRow="UserName" msprop:Generator_ColumnVarNameInTable="columnUserName" msprop:Generator_ColumnPropNameInTable="UserNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GroupNo" msprop:Generator_UserColumnName="GroupNo" msprop:Generator_ColumnPropNameInRow="GroupNo" msprop:Generator_ColumnVarNameInTable="columnGroupNo" msprop:Generator_ColumnPropNameInTable="GroupNoColumn" type="xs:decimal" minOccurs="0" />
              <xs:element name="DepartName" msprop:Generator_UserColumnName="DepartName" msprop:Generator_ColumnPropNameInRow="DepartName" msprop:Generator_ColumnVarNameInTable="columnDepartName" msprop:Generator_ColumnPropNameInTable="DepartNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="150" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="isHospitalManager" msprop:Generator_UserColumnName="isHospitalManager" msprop:Generator_ColumnVarNameInTable="columnisHospitalManager" msprop:Generator_ColumnPropNameInRow="isHospitalManager" msprop:Generator_ColumnPropNameInTable="isHospitalManagerColumn" type="xs:boolean" minOccurs="0" />
              <xs:element name="isMainStockManager" msprop:Generator_UserColumnName="isMainStockManager" msprop:Generator_ColumnVarNameInTable="columnisMainStockManager" msprop:Generator_ColumnPropNameInRow="isMainStockManager" msprop:Generator_ColumnPropNameInTable="isMainStockManagerColumn" type="xs:boolean" minOccurs="0" />
              <xs:element name="Password" msprop:Generator_UserColumnName="Password" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_ColumnPropNameInTable="PasswordColumn" type="xs:base64Binary" minOccurs="0" />
              <xs:element name="isActive" msprop:Generator_UserColumnName="isActive" msprop:Generator_ColumnPropNameInRow="isActive" msprop:Generator_ColumnVarNameInTable="columnisActive" msprop:Generator_ColumnPropNameInTable="isActiveColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="NewPassword" msprop:Generator_UserColumnName="NewPassword" msprop:Generator_ColumnVarNameInTable="columnNewPassword" msprop:Generator_ColumnPropNameInRow="NewPassword" msprop:Generator_ColumnPropNameInTable="NewPasswordColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="VGroupPermistion" msprop:Generator_UserTableName="VGroupPermistion" msprop:Generator_RowDeletedName="VGroupPermistionRowDeleted" msprop:Generator_RowChangedName="VGroupPermistionRowChanged" msprop:Generator_RowClassName="VGroupPermistionRow" msprop:Generator_RowChangingName="VGroupPermistionRowChanging" msprop:Generator_RowEvArgName="VGroupPermistionRowChangeEvent" msprop:Generator_RowEvHandlerName="VGroupPermistionRowChangeEventHandler" msprop:Generator_TableClassName="VGroupPermistionDataTable" msprop:Generator_TableVarName="tableVGroupPermistion" msprop:Generator_RowDeletingName="VGroupPermistionRowDeleting" msprop:Generator_TablePropName="VGroupPermistion">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MenuDisplay" msprop:Generator_UserColumnName="MenuDisplay" msprop:Generator_ColumnPropNameInRow="MenuDisplay" msprop:Generator_ColumnVarNameInTable="columnMenuDisplay" msprop:Generator_ColumnPropNameInTable="MenuDisplayColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MenuNo" msprop:Generator_UserColumnName="MenuNo" msprop:Generator_ColumnPropNameInRow="MenuNo" msprop:Generator_ColumnVarNameInTable="columnMenuNo" msprop:Generator_ColumnPropNameInTable="MenuNoColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GroupNo" msprop:Generator_UserColumnName="GroupNo" msprop:Generator_ColumnPropNameInRow="GroupNo" msprop:Generator_ColumnVarNameInTable="columnGroupNo" msprop:Generator_ColumnPropNameInTable="GroupNoColumn" type="xs:int" minOccurs="0" />
              <xs:element name="GroupID" msprop:Generator_UserColumnName="GroupID" msprop:Generator_ColumnVarNameInTable="columnGroupID" msprop:Generator_ColumnPropNameInRow="GroupID" msprop:Generator_ColumnPropNameInTable="GroupIDColumn" type="xs:int" />
              <xs:element name="MenuAutoNo" msprop:Generator_UserColumnName="MenuAutoNo" msprop:Generator_ColumnPropNameInRow="MenuAutoNo" msprop:Generator_ColumnVarNameInTable="columnMenuAutoNo" msprop:Generator_ColumnPropNameInTable="MenuAutoNoColumn" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Menu_INVENTORY" msprop:Generator_UserTableName="Menu_INVENTORY" msprop:Generator_RowDeletedName="Menu_INVENTORYRowDeleted" msprop:Generator_RowChangedName="Menu_INVENTORYRowChanged" msprop:Generator_RowClassName="Menu_INVENTORYRow" msprop:Generator_RowChangingName="Menu_INVENTORYRowChanging" msprop:Generator_RowEvArgName="Menu_INVENTORYRowChangeEvent" msprop:Generator_RowEvHandlerName="Menu_INVENTORYRowChangeEventHandler" msprop:Generator_TableClassName="Menu_INVENTORYDataTable" msprop:Generator_TableVarName="tableMenu_INVENTORY" msprop:Generator_RowDeletingName="Menu_INVENTORYRowDeleting" msprop:Generator_TablePropName="Menu_INVENTORY">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MenuNo" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="MenuNo" msprop:Generator_ColumnVarNameInTable="columnMenuNo" msprop:Generator_ColumnPropNameInRow="MenuNo" msprop:Generator_ColumnPropNameInTable="MenuNoColumn" type="xs:int" />
              <xs:element name="MenuDisplay" msprop:Generator_UserColumnName="MenuDisplay" msprop:Generator_ColumnVarNameInTable="columnMenuDisplay" msprop:Generator_ColumnPropNameInRow="MenuDisplay" msprop:Generator_ColumnPropNameInTable="MenuDisplayColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MenuKey" msprop:Generator_UserColumnName="MenuKey" msprop:Generator_ColumnVarNameInTable="columnMenuKey" msprop:Generator_ColumnPropNameInRow="MenuKey" msprop:Generator_ColumnPropNameInTable="MenuKeyColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="VEODAccessRight" msprop:Generator_UserTableName="VEODAccessRight" msprop:Generator_RowDeletedName="VEODAccessRightRowDeleted" msprop:Generator_RowChangedName="VEODAccessRightRowChanged" msprop:Generator_RowClassName="VEODAccessRightRow" msprop:Generator_RowChangingName="VEODAccessRightRowChanging" msprop:Generator_RowEvArgName="VEODAccessRightRowChangeEvent" msprop:Generator_RowEvHandlerName="VEODAccessRightRowChangeEventHandler" msprop:Generator_TableClassName="VEODAccessRightDataTable" msprop:Generator_TableVarName="tableVEODAccessRight" msprop:Generator_RowDeletingName="VEODAccessRightRowDeleting" msprop:Generator_TablePropName="VEODAccessRight">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserNo" msprop:Generator_UserColumnName="UserNo" msprop:Generator_ColumnPropNameInRow="UserNo" msprop:Generator_ColumnVarNameInTable="columnUserNo" msprop:Generator_ColumnPropNameInTable="UserNoColumn" type="xs:int" minOccurs="0" />
              <xs:element name="DepartName" msprop:Generator_UserColumnName="DepartName" msprop:Generator_ColumnPropNameInRow="DepartName" msprop:Generator_ColumnVarNameInTable="columnDepartName" msprop:Generator_ColumnPropNameInTable="DepartNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="150" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="DepartID" msprop:Generator_UserColumnName="DepartID" msprop:Generator_ColumnPropNameInRow="DepartID" msprop:Generator_ColumnVarNameInTable="columnDepartID" msprop:Generator_ColumnPropNameInTable="DepartIDColumn" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Menu_INVENTORY" />
      <xs:field xpath="mstns:MenuNo" />
    </xs:unique>
    <xs:unique name="VEODAccessRight_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:VEODAccessRight" />
      <xs:field xpath="mstns:DepartID" />
    </xs:unique>
  </xs:element>
</xs:schema>