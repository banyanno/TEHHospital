'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.8825
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DSPaymentList"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DSPaymentList
    Inherits Global.System.Data.DataSet
    
    Private tabletblPatientReceipt As tblPatientReceiptDataTable
    
    Private tableV_DeletePayment As V_DeletePaymentDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tblPatientReceipt")) Is Nothing) Then
                MyBase.Tables.Add(New tblPatientReceiptDataTable(ds.Tables("tblPatientReceipt")))
            End If
            If (Not (ds.Tables("V_DeletePayment")) Is Nothing) Then
                MyBase.Tables.Add(New V_DeletePaymentDataTable(ds.Tables("V_DeletePayment")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tblPatientReceipt() As tblPatientReceiptDataTable
        Get
            Return Me.tabletblPatientReceipt
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property V_DeletePayment() As V_DeletePaymentDataTable
        Get
            Return Me.tableV_DeletePayment
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DSPaymentList = CType(MyBase.Clone,DSPaymentList)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("tblPatientReceipt")) Is Nothing) Then
                MyBase.Tables.Add(New tblPatientReceiptDataTable(ds.Tables("tblPatientReceipt")))
            End If
            If (Not (ds.Tables("V_DeletePayment")) Is Nothing) Then
                MyBase.Tables.Add(New V_DeletePaymentDataTable(ds.Tables("V_DeletePayment")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabletblPatientReceipt = CType(MyBase.Tables("tblPatientReceipt"),tblPatientReceiptDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletblPatientReceipt) Is Nothing) Then
                Me.tabletblPatientReceipt.InitVars
            End If
        End If
        Me.tableV_DeletePayment = CType(MyBase.Tables("V_DeletePayment"),V_DeletePaymentDataTable)
        If (initTable = true) Then
            If (Not (Me.tableV_DeletePayment) Is Nothing) Then
                Me.tableV_DeletePayment.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DSPaymentList"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DSPaymentList.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabletblPatientReceipt = New tblPatientReceiptDataTable
        MyBase.Tables.Add(Me.tabletblPatientReceipt)
        Me.tableV_DeletePayment = New V_DeletePaymentDataTable
        MyBase.Tables.Add(Me.tableV_DeletePayment)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializetblPatientReceipt() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeV_DeletePayment() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DSPaymentList = New DSPaymentList
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub tblPatientReceiptRowChangeEventHandler(ByVal sender As Object, ByVal e As tblPatientReceiptRowChangeEvent)
    
    Public Delegate Sub V_DeletePaymentRowChangeEventHandler(ByVal sender As Object, ByVal e As V_DeletePaymentRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tblPatientReceiptDataTable
        Inherits Global.System.Data.TypedTableBase(Of tblPatientReceiptRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnReceiptNo As Global.System.Data.DataColumn
        
        Private columnIDCashReceipt As Global.System.Data.DataColumn
        
        Private columnHN As Global.System.Data.DataColumn
        
        Private columnPatientName As Global.System.Data.DataColumn
        
        Private columnCashRiel As Global.System.Data.DataColumn
        
        Private columnCashUSD As Global.System.Data.DataColumn
        
        Private columnTotalRiel As Global.System.Data.DataColumn
        
        Private columnTotalUSD As Global.System.Data.DataColumn
        
        Private columnOperationFeeRiel As Global.System.Data.DataColumn
        
        Private columnOperationFeeUSD As Global.System.Data.DataColumn
        
        Private columnArtificialEyeFeeRiel As Global.System.Data.DataColumn
        
        Private columnArtificialEyeFeeUSD As Global.System.Data.DataColumn
        
        Private columnOtherFeeRiel As Global.System.Data.DataColumn
        
        Private columnOtherFeeUSD As Global.System.Data.DataColumn
        
        Private columnConsultationFeeRiel As Global.System.Data.DataColumn
        
        Private columnConsultationFeeUSD As Global.System.Data.DataColumn
        
        Private columnFollowUpFeeRiel As Global.System.Data.DataColumn
        
        Private columnFollowUpFeeUSD As Global.System.Data.DataColumn
        
        Private columnMedicineFeeRiel As Global.System.Data.DataColumn
        
        Private columnMedicineFeeUSD As Global.System.Data.DataColumn
        
        Private columnGlassFeeRiel As Global.System.Data.DataColumn
        
        Private columnGlassFeeUSD As Global.System.Data.DataColumn
        
        Private columnSocialFeeRiel As Global.System.Data.DataColumn
        
        Private columnSocialFeeUSD As Global.System.Data.DataColumn
        
        Private columnFullFeeRiel As Global.System.Data.DataColumn
        
        Private columnFullFeeUSD As Global.System.Data.DataColumn
        
        Private columnRates As Global.System.Data.DataColumn
        
        Private columnAmoutWord As Global.System.Data.DataColumn
        
        Private columnConOP As Global.System.Data.DataColumn
        
        Private columnConAE As Global.System.Data.DataColumn
        
        Private columnConOT As Global.System.Data.DataColumn
        
        Private columnConCON As Global.System.Data.DataColumn
        
        Private columnConFOL As Global.System.Data.DataColumn
        
        Private columnConMED As Global.System.Data.DataColumn
        
        Private columnConGLA As Global.System.Data.DataColumn
        
        Private columnConSocialFee As Global.System.Data.DataColumn
        
        Private columnConFullFee As Global.System.Data.DataColumn
        
        Private columnConGeneral As Global.System.Data.DataColumn
        
        Private columnCashierIn As Global.System.Data.DataColumn
        
        Private columnCashierUpdate As Global.System.Data.DataColumn
        
        Private columnPrintCount As Global.System.Data.DataColumn
        
        Private columnDateIn As Global.System.Data.DataColumn
        
        Private columnDateUpdate As Global.System.Data.DataColumn
        
        Private columnDateNow As Global.System.Data.DataColumn
        
        Private columnConPay As Global.System.Data.DataColumn
        
        Private columnConDelete As Global.System.Data.DataColumn
        
        Private columnYears As Global.System.Data.DataColumn
        
        Private columnOperation As Global.System.Data.DataColumn
        
        Private columnIsDonation As Global.System.Data.DataColumn
        
        Private columnDonationID As Global.System.Data.DataColumn
        
        Private columnDonationName As Global.System.Data.DataColumn
        
        Private columnDonationPay As Global.System.Data.DataColumn
        
        Private columnDonateNote As Global.System.Data.DataColumn
        
        Private columnHosFee As Global.System.Data.DataColumn
        
        Private columnCashTotal As Global.System.Data.DataColumn
        
        Private columnIsPatientNill As Global.System.Data.DataColumn
        
        Private columnTIME_CREATE As Global.System.Data.DataColumn
        
        Private columnTIME_ISSUE As Global.System.Data.DataColumn
        
        Private columnReceiptNote As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "tblPatientReceipt"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ReceiptNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiptNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDCashReceiptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDCashReceipt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PatientNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CashRielColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCashRiel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CashUSDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCashUSD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TotalRielColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalRiel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TotalUSDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalUSD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OperationFeeRielColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperationFeeRiel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OperationFeeUSDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperationFeeUSD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ArtificialEyeFeeRielColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtificialEyeFeeRiel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ArtificialEyeFeeUSDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArtificialEyeFeeUSD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OtherFeeRielColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherFeeRiel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OtherFeeUSDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherFeeUSD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConsultationFeeRielColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConsultationFeeRiel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConsultationFeeUSDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConsultationFeeUSD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FollowUpFeeRielColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFollowUpFeeRiel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FollowUpFeeUSDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFollowUpFeeUSD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MedicineFeeRielColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMedicineFeeRiel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MedicineFeeUSDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMedicineFeeUSD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GlassFeeRielColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGlassFeeRiel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GlassFeeUSDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGlassFeeUSD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SocialFeeRielColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSocialFeeRiel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SocialFeeUSDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSocialFeeUSD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FullFeeRielColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullFeeRiel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FullFeeUSDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullFeeUSD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RatesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRates
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AmoutWordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmoutWord
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConOPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConOP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConAEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConAE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConOTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConOT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConCONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConCON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConFOLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConFOL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConMEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConMED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConGLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConGLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConSocialFeeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConSocialFee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConFullFeeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConFullFee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConGeneralColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConGeneral
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CashierInColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCashierIn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CashierUpdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCashierUpdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PrintCountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrintCount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateInColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateIn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateUpdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateUpdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateNowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateNow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConPayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConPay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConDeleteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConDelete
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property YearsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYears
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OperationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IsDonationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsDonation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DonationIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDonationID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DonationNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDonationName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DonationPayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDonationPay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DonateNoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDonateNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HosFeeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHosFee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CashTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCashTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IsPatientNillColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsPatientNill
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIME_CREATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIME_CREATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TIME_ISSUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIME_ISSUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ReceiptNoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiptNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As tblPatientReceiptRow
            Get
                Return CType(Me.Rows(index),tblPatientReceiptRow)
            End Get
        End Property
        
        Public Event tblPatientReceiptRowChanging As tblPatientReceiptRowChangeEventHandler
        
        Public Event tblPatientReceiptRowChanged As tblPatientReceiptRowChangeEventHandler
        
        Public Event tblPatientReceiptRowDeleting As tblPatientReceiptRowChangeEventHandler
        
        Public Event tblPatientReceiptRowDeleted As tblPatientReceiptRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddtblPatientReceiptRow(ByVal row As tblPatientReceiptRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddtblPatientReceiptRow( _
                    ByVal ReceiptNo As Long,  _
                    ByVal IDCashReceipt As String,  _
                    ByVal HN As Decimal,  _
                    ByVal PatientName As String,  _
                    ByVal CashRiel As Double,  _
                    ByVal CashUSD As Double,  _
                    ByVal TotalRiel As Double,  _
                    ByVal TotalUSD As Double,  _
                    ByVal OperationFeeRiel As Double,  _
                    ByVal OperationFeeUSD As Double,  _
                    ByVal ArtificialEyeFeeRiel As Double,  _
                    ByVal ArtificialEyeFeeUSD As Double,  _
                    ByVal OtherFeeRiel As Double,  _
                    ByVal OtherFeeUSD As Double,  _
                    ByVal ConsultationFeeRiel As Double,  _
                    ByVal ConsultationFeeUSD As Double,  _
                    ByVal FollowUpFeeRiel As Double,  _
                    ByVal FollowUpFeeUSD As Double,  _
                    ByVal MedicineFeeRiel As Double,  _
                    ByVal MedicineFeeUSD As Double,  _
                    ByVal GlassFeeRiel As Double,  _
                    ByVal GlassFeeUSD As Double,  _
                    ByVal SocialFeeRiel As Double,  _
                    ByVal SocialFeeUSD As Double,  _
                    ByVal FullFeeRiel As Double,  _
                    ByVal FullFeeUSD As Double,  _
                    ByVal Rates As Double,  _
                    ByVal AmoutWord As String,  _
                    ByVal ConOP As String,  _
                    ByVal ConAE As String,  _
                    ByVal ConOT As String,  _
                    ByVal ConCON As String,  _
                    ByVal ConFOL As String,  _
                    ByVal ConMED As String,  _
                    ByVal ConGLA As String,  _
                    ByVal ConSocialFee As String,  _
                    ByVal ConFullFee As String,  _
                    ByVal ConGeneral As String,  _
                    ByVal CashierIn As String,  _
                    ByVal CashierUpdate As String,  _
                    ByVal PrintCount As Integer,  _
                    ByVal DateIn As Date,  _
                    ByVal DateUpdate As Date,  _
                    ByVal DateNow As Date,  _
                    ByVal ConPay As String,  _
                    ByVal ConDelete As String,  _
                    ByVal Years As Integer,  _
                    ByVal Operation As String,  _
                    ByVal IsDonation As Boolean,  _
                    ByVal DonationID As Decimal,  _
                    ByVal DonationName As String,  _
                    ByVal DonationPay As Double,  _
                    ByVal DonateNote As String,  _
                    ByVal HosFee As Double,  _
                    ByVal CashTotal As Double,  _
                    ByVal IsPatientNill As Boolean,  _
                    ByVal TIME_CREATE As String,  _
                    ByVal TIME_ISSUE As String,  _
                    ByVal ReceiptNote As String) As tblPatientReceiptRow
            Dim rowtblPatientReceiptRow As tblPatientReceiptRow = CType(Me.NewRow,tblPatientReceiptRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ReceiptNo, IDCashReceipt, HN, PatientName, CashRiel, CashUSD, TotalRiel, TotalUSD, OperationFeeRiel, OperationFeeUSD, ArtificialEyeFeeRiel, ArtificialEyeFeeUSD, OtherFeeRiel, OtherFeeUSD, ConsultationFeeRiel, ConsultationFeeUSD, FollowUpFeeRiel, FollowUpFeeUSD, MedicineFeeRiel, MedicineFeeUSD, GlassFeeRiel, GlassFeeUSD, SocialFeeRiel, SocialFeeUSD, FullFeeRiel, FullFeeUSD, Rates, AmoutWord, ConOP, ConAE, ConOT, ConCON, ConFOL, ConMED, ConGLA, ConSocialFee, ConFullFee, ConGeneral, CashierIn, CashierUpdate, PrintCount, DateIn, DateUpdate, DateNow, ConPay, ConDelete, Years, Operation, IsDonation, DonationID, DonationName, DonationPay, DonateNote, HosFee, CashTotal, IsPatientNill, TIME_CREATE, TIME_ISSUE, ReceiptNote}
            rowtblPatientReceiptRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtblPatientReceiptRow)
            Return rowtblPatientReceiptRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByID(ByVal ID As Long) As tblPatientReceiptRow
            Return CType(Me.Rows.Find(New Object() {ID}),tblPatientReceiptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tblPatientReceiptDataTable = CType(MyBase.Clone,tblPatientReceiptDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tblPatientReceiptDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnReceiptNo = MyBase.Columns("ReceiptNo")
            Me.columnIDCashReceipt = MyBase.Columns("IDCashReceipt")
            Me.columnHN = MyBase.Columns("HN")
            Me.columnPatientName = MyBase.Columns("PatientName")
            Me.columnCashRiel = MyBase.Columns("CashRiel")
            Me.columnCashUSD = MyBase.Columns("CashUSD")
            Me.columnTotalRiel = MyBase.Columns("TotalRiel")
            Me.columnTotalUSD = MyBase.Columns("TotalUSD")
            Me.columnOperationFeeRiel = MyBase.Columns("OperationFeeRiel")
            Me.columnOperationFeeUSD = MyBase.Columns("OperationFeeUSD")
            Me.columnArtificialEyeFeeRiel = MyBase.Columns("ArtificialEyeFeeRiel")
            Me.columnArtificialEyeFeeUSD = MyBase.Columns("ArtificialEyeFeeUSD")
            Me.columnOtherFeeRiel = MyBase.Columns("OtherFeeRiel")
            Me.columnOtherFeeUSD = MyBase.Columns("OtherFeeUSD")
            Me.columnConsultationFeeRiel = MyBase.Columns("ConsultationFeeRiel")
            Me.columnConsultationFeeUSD = MyBase.Columns("ConsultationFeeUSD")
            Me.columnFollowUpFeeRiel = MyBase.Columns("FollowUpFeeRiel")
            Me.columnFollowUpFeeUSD = MyBase.Columns("FollowUpFeeUSD")
            Me.columnMedicineFeeRiel = MyBase.Columns("MedicineFeeRiel")
            Me.columnMedicineFeeUSD = MyBase.Columns("MedicineFeeUSD")
            Me.columnGlassFeeRiel = MyBase.Columns("GlassFeeRiel")
            Me.columnGlassFeeUSD = MyBase.Columns("GlassFeeUSD")
            Me.columnSocialFeeRiel = MyBase.Columns("SocialFeeRiel")
            Me.columnSocialFeeUSD = MyBase.Columns("SocialFeeUSD")
            Me.columnFullFeeRiel = MyBase.Columns("FullFeeRiel")
            Me.columnFullFeeUSD = MyBase.Columns("FullFeeUSD")
            Me.columnRates = MyBase.Columns("Rates")
            Me.columnAmoutWord = MyBase.Columns("AmoutWord")
            Me.columnConOP = MyBase.Columns("ConOP")
            Me.columnConAE = MyBase.Columns("ConAE")
            Me.columnConOT = MyBase.Columns("ConOT")
            Me.columnConCON = MyBase.Columns("ConCON")
            Me.columnConFOL = MyBase.Columns("ConFOL")
            Me.columnConMED = MyBase.Columns("ConMED")
            Me.columnConGLA = MyBase.Columns("ConGLA")
            Me.columnConSocialFee = MyBase.Columns("ConSocialFee")
            Me.columnConFullFee = MyBase.Columns("ConFullFee")
            Me.columnConGeneral = MyBase.Columns("ConGeneral")
            Me.columnCashierIn = MyBase.Columns("CashierIn")
            Me.columnCashierUpdate = MyBase.Columns("CashierUpdate")
            Me.columnPrintCount = MyBase.Columns("PrintCount")
            Me.columnDateIn = MyBase.Columns("DateIn")
            Me.columnDateUpdate = MyBase.Columns("DateUpdate")
            Me.columnDateNow = MyBase.Columns("DateNow")
            Me.columnConPay = MyBase.Columns("ConPay")
            Me.columnConDelete = MyBase.Columns("ConDelete")
            Me.columnYears = MyBase.Columns("Years")
            Me.columnOperation = MyBase.Columns("Operation")
            Me.columnIsDonation = MyBase.Columns("IsDonation")
            Me.columnDonationID = MyBase.Columns("DonationID")
            Me.columnDonationName = MyBase.Columns("DonationName")
            Me.columnDonationPay = MyBase.Columns("DonationPay")
            Me.columnDonateNote = MyBase.Columns("DonateNote")
            Me.columnHosFee = MyBase.Columns("HosFee")
            Me.columnCashTotal = MyBase.Columns("CashTotal")
            Me.columnIsPatientNill = MyBase.Columns("IsPatientNill")
            Me.columnTIME_CREATE = MyBase.Columns("TIME_CREATE")
            Me.columnTIME_ISSUE = MyBase.Columns("TIME_ISSUE")
            Me.columnReceiptNote = MyBase.Columns("ReceiptNote")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnReceiptNo = New Global.System.Data.DataColumn("ReceiptNo", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiptNo)
            Me.columnIDCashReceipt = New Global.System.Data.DataColumn("IDCashReceipt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDCashReceipt)
            Me.columnHN = New Global.System.Data.DataColumn("HN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHN)
            Me.columnPatientName = New Global.System.Data.DataColumn("PatientName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientName)
            Me.columnCashRiel = New Global.System.Data.DataColumn("CashRiel", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCashRiel)
            Me.columnCashUSD = New Global.System.Data.DataColumn("CashUSD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCashUSD)
            Me.columnTotalRiel = New Global.System.Data.DataColumn("TotalRiel", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalRiel)
            Me.columnTotalUSD = New Global.System.Data.DataColumn("TotalUSD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalUSD)
            Me.columnOperationFeeRiel = New Global.System.Data.DataColumn("OperationFeeRiel", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperationFeeRiel)
            Me.columnOperationFeeUSD = New Global.System.Data.DataColumn("OperationFeeUSD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperationFeeUSD)
            Me.columnArtificialEyeFeeRiel = New Global.System.Data.DataColumn("ArtificialEyeFeeRiel", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtificialEyeFeeRiel)
            Me.columnArtificialEyeFeeUSD = New Global.System.Data.DataColumn("ArtificialEyeFeeUSD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArtificialEyeFeeUSD)
            Me.columnOtherFeeRiel = New Global.System.Data.DataColumn("OtherFeeRiel", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherFeeRiel)
            Me.columnOtherFeeUSD = New Global.System.Data.DataColumn("OtherFeeUSD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherFeeUSD)
            Me.columnConsultationFeeRiel = New Global.System.Data.DataColumn("ConsultationFeeRiel", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConsultationFeeRiel)
            Me.columnConsultationFeeUSD = New Global.System.Data.DataColumn("ConsultationFeeUSD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConsultationFeeUSD)
            Me.columnFollowUpFeeRiel = New Global.System.Data.DataColumn("FollowUpFeeRiel", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFollowUpFeeRiel)
            Me.columnFollowUpFeeUSD = New Global.System.Data.DataColumn("FollowUpFeeUSD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFollowUpFeeUSD)
            Me.columnMedicineFeeRiel = New Global.System.Data.DataColumn("MedicineFeeRiel", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMedicineFeeRiel)
            Me.columnMedicineFeeUSD = New Global.System.Data.DataColumn("MedicineFeeUSD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMedicineFeeUSD)
            Me.columnGlassFeeRiel = New Global.System.Data.DataColumn("GlassFeeRiel", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGlassFeeRiel)
            Me.columnGlassFeeUSD = New Global.System.Data.DataColumn("GlassFeeUSD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGlassFeeUSD)
            Me.columnSocialFeeRiel = New Global.System.Data.DataColumn("SocialFeeRiel", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSocialFeeRiel)
            Me.columnSocialFeeUSD = New Global.System.Data.DataColumn("SocialFeeUSD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSocialFeeUSD)
            Me.columnFullFeeRiel = New Global.System.Data.DataColumn("FullFeeRiel", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullFeeRiel)
            Me.columnFullFeeUSD = New Global.System.Data.DataColumn("FullFeeUSD", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullFeeUSD)
            Me.columnRates = New Global.System.Data.DataColumn("Rates", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRates)
            Me.columnAmoutWord = New Global.System.Data.DataColumn("AmoutWord", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmoutWord)
            Me.columnConOP = New Global.System.Data.DataColumn("ConOP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConOP)
            Me.columnConAE = New Global.System.Data.DataColumn("ConAE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConAE)
            Me.columnConOT = New Global.System.Data.DataColumn("ConOT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConOT)
            Me.columnConCON = New Global.System.Data.DataColumn("ConCON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConCON)
            Me.columnConFOL = New Global.System.Data.DataColumn("ConFOL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConFOL)
            Me.columnConMED = New Global.System.Data.DataColumn("ConMED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConMED)
            Me.columnConGLA = New Global.System.Data.DataColumn("ConGLA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConGLA)
            Me.columnConSocialFee = New Global.System.Data.DataColumn("ConSocialFee", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConSocialFee)
            Me.columnConFullFee = New Global.System.Data.DataColumn("ConFullFee", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConFullFee)
            Me.columnConGeneral = New Global.System.Data.DataColumn("ConGeneral", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConGeneral)
            Me.columnCashierIn = New Global.System.Data.DataColumn("CashierIn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCashierIn)
            Me.columnCashierUpdate = New Global.System.Data.DataColumn("CashierUpdate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCashierUpdate)
            Me.columnPrintCount = New Global.System.Data.DataColumn("PrintCount", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrintCount)
            Me.columnDateIn = New Global.System.Data.DataColumn("DateIn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateIn)
            Me.columnDateUpdate = New Global.System.Data.DataColumn("DateUpdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateUpdate)
            Me.columnDateNow = New Global.System.Data.DataColumn("DateNow", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateNow)
            Me.columnConPay = New Global.System.Data.DataColumn("ConPay", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConPay)
            Me.columnConDelete = New Global.System.Data.DataColumn("ConDelete", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConDelete)
            Me.columnYears = New Global.System.Data.DataColumn("Years", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYears)
            Me.columnOperation = New Global.System.Data.DataColumn("Operation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperation)
            Me.columnIsDonation = New Global.System.Data.DataColumn("IsDonation", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsDonation)
            Me.columnDonationID = New Global.System.Data.DataColumn("DonationID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDonationID)
            Me.columnDonationName = New Global.System.Data.DataColumn("DonationName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDonationName)
            Me.columnDonationPay = New Global.System.Data.DataColumn("DonationPay", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDonationPay)
            Me.columnDonateNote = New Global.System.Data.DataColumn("DonateNote", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDonateNote)
            Me.columnHosFee = New Global.System.Data.DataColumn("HosFee", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHosFee)
            Me.columnCashTotal = New Global.System.Data.DataColumn("CashTotal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCashTotal)
            Me.columnIsPatientNill = New Global.System.Data.DataColumn("IsPatientNill", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsPatientNill)
            Me.columnTIME_CREATE = New Global.System.Data.DataColumn("TIME_CREATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIME_CREATE)
            Me.columnTIME_ISSUE = New Global.System.Data.DataColumn("TIME_ISSUE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIME_ISSUE)
            Me.columnReceiptNote = New Global.System.Data.DataColumn("ReceiptNote", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiptNote)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AutoIncrement = true
            Me.columnID.AutoIncrementSeed = -1
            Me.columnID.AutoIncrementStep = -1
            Me.columnID.AllowDBNull = false
            Me.columnID.ReadOnly = true
            Me.columnID.Unique = true
            Me.columnReceiptNo.AllowDBNull = false
            Me.columnIDCashReceipt.AllowDBNull = false
            Me.columnIDCashReceipt.MaxLength = 50
            Me.columnHN.AllowDBNull = false
            Me.columnPatientName.MaxLength = 500
            Me.columnAmoutWord.MaxLength = 8000
            Me.columnConOP.MaxLength = 1
            Me.columnConAE.MaxLength = 1
            Me.columnConOT.MaxLength = 1
            Me.columnConCON.MaxLength = 1
            Me.columnConFOL.MaxLength = 1
            Me.columnConMED.MaxLength = 1
            Me.columnConGLA.MaxLength = 1
            Me.columnConSocialFee.MaxLength = 1
            Me.columnConFullFee.MaxLength = 1
            Me.columnConGeneral.MaxLength = 2
            Me.columnCashierIn.MaxLength = 200
            Me.columnCashierUpdate.MaxLength = 200
            Me.columnConPay.MaxLength = 1
            Me.columnConDelete.MaxLength = 1
            Me.columnOperation.MaxLength = 8000
            Me.columnDonationName.MaxLength = 50
            Me.columnDonateNote.MaxLength = 200
            Me.columnTIME_CREATE.MaxLength = 50
            Me.columnTIME_ISSUE.MaxLength = 50
            Me.columnReceiptNote.MaxLength = 250
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewtblPatientReceiptRow() As tblPatientReceiptRow
            Return CType(Me.NewRow,tblPatientReceiptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tblPatientReceiptRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tblPatientReceiptRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tblPatientReceiptRowChangedEvent) Is Nothing) Then
                RaiseEvent tblPatientReceiptRowChanged(Me, New tblPatientReceiptRowChangeEvent(CType(e.Row,tblPatientReceiptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tblPatientReceiptRowChangingEvent) Is Nothing) Then
                RaiseEvent tblPatientReceiptRowChanging(Me, New tblPatientReceiptRowChangeEvent(CType(e.Row,tblPatientReceiptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tblPatientReceiptRowDeletedEvent) Is Nothing) Then
                RaiseEvent tblPatientReceiptRowDeleted(Me, New tblPatientReceiptRowChangeEvent(CType(e.Row,tblPatientReceiptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tblPatientReceiptRowDeletingEvent) Is Nothing) Then
                RaiseEvent tblPatientReceiptRowDeleting(Me, New tblPatientReceiptRowChangeEvent(CType(e.Row,tblPatientReceiptRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovetblPatientReceiptRow(ByVal row As tblPatientReceiptRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSPaymentList = New DSPaymentList
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tblPatientReceiptDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class V_DeletePaymentDataTable
        Inherits Global.System.Data.TypedTableBase(Of V_DeletePaymentRow)
        
        Private columnHN As Global.System.Data.DataColumn
        
        Private columnPatientName As Global.System.Data.DataColumn
        
        Private columnReceiptNo As Global.System.Data.DataColumn
        
        Private columnIDCashReceipt As Global.System.Data.DataColumn
        
        Private columnConPay As Global.System.Data.DataColumn
        
        Private columnConGeneral As Global.System.Data.DataColumn
        
        Private columnDateIn As Global.System.Data.DataColumn
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnReceiptNote As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "V_DeletePayment"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PatientNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ReceiptNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiptNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDCashReceiptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIDCashReceipt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConPayColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConPay
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ConGeneralColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConGeneral
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateInColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateIn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ReceiptNoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceiptNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As V_DeletePaymentRow
            Get
                Return CType(Me.Rows(index),V_DeletePaymentRow)
            End Get
        End Property
        
        Public Event V_DeletePaymentRowChanging As V_DeletePaymentRowChangeEventHandler
        
        Public Event V_DeletePaymentRowChanged As V_DeletePaymentRowChangeEventHandler
        
        Public Event V_DeletePaymentRowDeleting As V_DeletePaymentRowChangeEventHandler
        
        Public Event V_DeletePaymentRowDeleted As V_DeletePaymentRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddV_DeletePaymentRow(ByVal row As V_DeletePaymentRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddV_DeletePaymentRow(ByVal HN As Decimal, ByVal PatientName As String, ByVal ReceiptNo As Long, ByVal IDCashReceipt As String, ByVal ConPay As String, ByVal ConGeneral As String, ByVal DateIn As Date, ByVal ID As Long, ByVal ReceiptNote As String) As V_DeletePaymentRow
            Dim rowV_DeletePaymentRow As V_DeletePaymentRow = CType(Me.NewRow,V_DeletePaymentRow)
            Dim columnValuesArray() As Object = New Object() {HN, PatientName, ReceiptNo, IDCashReceipt, ConPay, ConGeneral, DateIn, ID, ReceiptNote}
            rowV_DeletePaymentRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowV_DeletePaymentRow)
            Return rowV_DeletePaymentRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As V_DeletePaymentDataTable = CType(MyBase.Clone,V_DeletePaymentDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New V_DeletePaymentDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnHN = MyBase.Columns("HN")
            Me.columnPatientName = MyBase.Columns("PatientName")
            Me.columnReceiptNo = MyBase.Columns("ReceiptNo")
            Me.columnIDCashReceipt = MyBase.Columns("IDCashReceipt")
            Me.columnConPay = MyBase.Columns("ConPay")
            Me.columnConGeneral = MyBase.Columns("ConGeneral")
            Me.columnDateIn = MyBase.Columns("DateIn")
            Me.columnID = MyBase.Columns("ID")
            Me.columnReceiptNote = MyBase.Columns("ReceiptNote")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnHN = New Global.System.Data.DataColumn("HN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHN)
            Me.columnPatientName = New Global.System.Data.DataColumn("PatientName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientName)
            Me.columnReceiptNo = New Global.System.Data.DataColumn("ReceiptNo", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiptNo)
            Me.columnIDCashReceipt = New Global.System.Data.DataColumn("IDCashReceipt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIDCashReceipt)
            Me.columnConPay = New Global.System.Data.DataColumn("ConPay", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConPay)
            Me.columnConGeneral = New Global.System.Data.DataColumn("ConGeneral", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConGeneral)
            Me.columnDateIn = New Global.System.Data.DataColumn("DateIn", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateIn)
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnReceiptNote = New Global.System.Data.DataColumn("ReceiptNote", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceiptNote)
            Me.columnHN.AllowDBNull = false
            Me.columnPatientName.MaxLength = 50
            Me.columnReceiptNo.AllowDBNull = false
            Me.columnIDCashReceipt.AllowDBNull = false
            Me.columnIDCashReceipt.MaxLength = 50
            Me.columnConPay.MaxLength = 1
            Me.columnConGeneral.MaxLength = 2
            Me.columnID.AllowDBNull = false
            Me.columnReceiptNote.MaxLength = 250
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewV_DeletePaymentRow() As V_DeletePaymentRow
            Return CType(Me.NewRow,V_DeletePaymentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New V_DeletePaymentRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(V_DeletePaymentRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.V_DeletePaymentRowChangedEvent) Is Nothing) Then
                RaiseEvent V_DeletePaymentRowChanged(Me, New V_DeletePaymentRowChangeEvent(CType(e.Row,V_DeletePaymentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.V_DeletePaymentRowChangingEvent) Is Nothing) Then
                RaiseEvent V_DeletePaymentRowChanging(Me, New V_DeletePaymentRowChangeEvent(CType(e.Row,V_DeletePaymentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.V_DeletePaymentRowDeletedEvent) Is Nothing) Then
                RaiseEvent V_DeletePaymentRowDeleted(Me, New V_DeletePaymentRowChangeEvent(CType(e.Row,V_DeletePaymentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.V_DeletePaymentRowDeletingEvent) Is Nothing) Then
                RaiseEvent V_DeletePaymentRowDeleting(Me, New V_DeletePaymentRowChangeEvent(CType(e.Row,V_DeletePaymentRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveV_DeletePaymentRow(ByVal row As V_DeletePaymentRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSPaymentList = New DSPaymentList
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "V_DeletePaymentDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class tblPatientReceiptRow
        Inherits Global.System.Data.DataRow
        
        Private tabletblPatientReceipt As tblPatientReceiptDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletblPatientReceipt = CType(Me.Table,tblPatientReceiptDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ID() As Long
            Get
                Return CType(Me(Me.tabletblPatientReceipt.IDColumn),Long)
            End Get
            Set
                Me(Me.tabletblPatientReceipt.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ReceiptNo() As Long
            Get
                Return CType(Me(Me.tabletblPatientReceipt.ReceiptNoColumn),Long)
            End Get
            Set
                Me(Me.tabletblPatientReceipt.ReceiptNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDCashReceipt() As String
            Get
                Return CType(Me(Me.tabletblPatientReceipt.IDCashReceiptColumn),String)
            End Get
            Set
                Me(Me.tabletblPatientReceipt.IDCashReceiptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HN() As Decimal
            Get
                Return CType(Me(Me.tabletblPatientReceipt.HNColumn),Decimal)
            End Get
            Set
                Me(Me.tabletblPatientReceipt.HNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PatientName() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.PatientNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PatientName' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.PatientNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CashRiel() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.CashRielColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CashRiel' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.CashRielColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CashUSD() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.CashUSDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CashUSD' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.CashUSDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TotalRiel() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.TotalRielColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalRiel' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.TotalRielColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TotalUSD() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.TotalUSDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalUSD' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.TotalUSDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OperationFeeRiel() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.OperationFeeRielColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OperationFeeRiel' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.OperationFeeRielColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OperationFeeUSD() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.OperationFeeUSDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OperationFeeUSD' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.OperationFeeUSDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ArtificialEyeFeeRiel() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.ArtificialEyeFeeRielColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ArtificialEyeFeeRiel' in table 'tblPatientReceipt' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.ArtificialEyeFeeRielColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ArtificialEyeFeeUSD() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.ArtificialEyeFeeUSDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ArtificialEyeFeeUSD' in table 'tblPatientReceipt' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.ArtificialEyeFeeUSDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OtherFeeRiel() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.OtherFeeRielColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherFeeRiel' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.OtherFeeRielColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OtherFeeUSD() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.OtherFeeUSDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherFeeUSD' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.OtherFeeUSDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ConsultationFeeRiel() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.ConsultationFeeRielColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConsultationFeeRiel' in table 'tblPatientReceipt' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.ConsultationFeeRielColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ConsultationFeeUSD() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.ConsultationFeeUSDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConsultationFeeUSD' in table 'tblPatientReceipt' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.ConsultationFeeUSDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FollowUpFeeRiel() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.FollowUpFeeRielColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FollowUpFeeRiel' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.FollowUpFeeRielColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FollowUpFeeUSD() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.FollowUpFeeUSDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FollowUpFeeUSD' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.FollowUpFeeUSDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MedicineFeeRiel() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.MedicineFeeRielColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MedicineFeeRiel' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.MedicineFeeRielColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MedicineFeeUSD() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.MedicineFeeUSDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MedicineFeeUSD' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.MedicineFeeUSDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GlassFeeRiel() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.GlassFeeRielColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GlassFeeRiel' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.GlassFeeRielColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GlassFeeUSD() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.GlassFeeUSDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GlassFeeUSD' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.GlassFeeUSDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SocialFeeRiel() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.SocialFeeRielColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SocialFeeRiel' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.SocialFeeRielColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SocialFeeUSD() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.SocialFeeUSDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SocialFeeUSD' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.SocialFeeUSDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FullFeeRiel() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.FullFeeRielColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FullFeeRiel' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.FullFeeRielColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FullFeeUSD() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.FullFeeUSDColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FullFeeUSD' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.FullFeeUSDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Rates() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.RatesColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rates' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.RatesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AmoutWord() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.AmoutWordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AmoutWord' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.AmoutWordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ConOP() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.ConOPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConOP' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.ConOPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ConAE() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.ConAEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConAE' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.ConAEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ConOT() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.ConOTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConOT' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.ConOTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ConCON() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.ConCONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConCON' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.ConCONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ConFOL() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.ConFOLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConFOL' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.ConFOLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ConMED() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.ConMEDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConMED' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.ConMEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ConGLA() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.ConGLAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConGLA' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.ConGLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ConSocialFee() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.ConSocialFeeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConSocialFee' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.ConSocialFeeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ConFullFee() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.ConFullFeeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConFullFee' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.ConFullFeeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ConGeneral() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.ConGeneralColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConGeneral' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.ConGeneralColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CashierIn() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.CashierInColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CashierIn' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.CashierInColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CashierUpdate() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.CashierUpdateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CashierUpdate' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.CashierUpdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PrintCount() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.PrintCountColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrintCount' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.PrintCountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DateIn() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.DateInColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateIn' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.DateInColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DateUpdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.DateUpdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateUpdate' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.DateUpdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DateNow() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.DateNowColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateNow' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.DateNowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ConPay() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.ConPayColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConPay' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.ConPayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ConDelete() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.ConDeleteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConDelete' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.ConDeleteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Years() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.YearsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Years' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.YearsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Operation() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.OperationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Operation' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.OperationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IsDonation() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.IsDonationColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsDonation' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.IsDonationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DonationID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.DonationIDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DonationID' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.DonationIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DonationName() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.DonationNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DonationName' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.DonationNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DonationPay() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.DonationPayColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DonationPay' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.DonationPayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DonateNote() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.DonateNoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DonateNote' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.DonateNoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HosFee() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.HosFeeColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HosFee' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.HosFeeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CashTotal() As Double
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.CashTotalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CashTotal' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.CashTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IsPatientNill() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.IsPatientNillColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsPatientNill' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.IsPatientNillColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIME_CREATE() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.TIME_CREATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIME_CREATE' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.TIME_CREATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TIME_ISSUE() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.TIME_ISSUEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIME_ISSUE' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.TIME_ISSUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ReceiptNote() As String
            Get
                Try 
                    Return CType(Me(Me.tabletblPatientReceipt.ReceiptNoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceiptNote' in table 'tblPatientReceipt' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletblPatientReceipt.ReceiptNoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPatientNameNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.PatientNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPatientNameNull()
            Me(Me.tabletblPatientReceipt.PatientNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCashRielNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.CashRielColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCashRielNull()
            Me(Me.tabletblPatientReceipt.CashRielColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCashUSDNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.CashUSDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCashUSDNull()
            Me(Me.tabletblPatientReceipt.CashUSDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotalRielNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.TotalRielColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotalRielNull()
            Me(Me.tabletblPatientReceipt.TotalRielColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotalUSDNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.TotalUSDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotalUSDNull()
            Me(Me.tabletblPatientReceipt.TotalUSDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOperationFeeRielNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.OperationFeeRielColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOperationFeeRielNull()
            Me(Me.tabletblPatientReceipt.OperationFeeRielColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOperationFeeUSDNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.OperationFeeUSDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOperationFeeUSDNull()
            Me(Me.tabletblPatientReceipt.OperationFeeUSDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsArtificialEyeFeeRielNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.ArtificialEyeFeeRielColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetArtificialEyeFeeRielNull()
            Me(Me.tabletblPatientReceipt.ArtificialEyeFeeRielColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsArtificialEyeFeeUSDNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.ArtificialEyeFeeUSDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetArtificialEyeFeeUSDNull()
            Me(Me.tabletblPatientReceipt.ArtificialEyeFeeUSDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOtherFeeRielNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.OtherFeeRielColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOtherFeeRielNull()
            Me(Me.tabletblPatientReceipt.OtherFeeRielColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOtherFeeUSDNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.OtherFeeUSDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOtherFeeUSDNull()
            Me(Me.tabletblPatientReceipt.OtherFeeUSDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConsultationFeeRielNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.ConsultationFeeRielColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConsultationFeeRielNull()
            Me(Me.tabletblPatientReceipt.ConsultationFeeRielColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConsultationFeeUSDNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.ConsultationFeeUSDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConsultationFeeUSDNull()
            Me(Me.tabletblPatientReceipt.ConsultationFeeUSDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFollowUpFeeRielNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.FollowUpFeeRielColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFollowUpFeeRielNull()
            Me(Me.tabletblPatientReceipt.FollowUpFeeRielColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFollowUpFeeUSDNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.FollowUpFeeUSDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFollowUpFeeUSDNull()
            Me(Me.tabletblPatientReceipt.FollowUpFeeUSDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMedicineFeeRielNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.MedicineFeeRielColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMedicineFeeRielNull()
            Me(Me.tabletblPatientReceipt.MedicineFeeRielColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMedicineFeeUSDNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.MedicineFeeUSDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMedicineFeeUSDNull()
            Me(Me.tabletblPatientReceipt.MedicineFeeUSDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGlassFeeRielNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.GlassFeeRielColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGlassFeeRielNull()
            Me(Me.tabletblPatientReceipt.GlassFeeRielColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGlassFeeUSDNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.GlassFeeUSDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGlassFeeUSDNull()
            Me(Me.tabletblPatientReceipt.GlassFeeUSDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSocialFeeRielNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.SocialFeeRielColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSocialFeeRielNull()
            Me(Me.tabletblPatientReceipt.SocialFeeRielColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSocialFeeUSDNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.SocialFeeUSDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSocialFeeUSDNull()
            Me(Me.tabletblPatientReceipt.SocialFeeUSDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFullFeeRielNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.FullFeeRielColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFullFeeRielNull()
            Me(Me.tabletblPatientReceipt.FullFeeRielColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFullFeeUSDNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.FullFeeUSDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFullFeeUSDNull()
            Me(Me.tabletblPatientReceipt.FullFeeUSDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRatesNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.RatesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRatesNull()
            Me(Me.tabletblPatientReceipt.RatesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAmoutWordNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.AmoutWordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAmoutWordNull()
            Me(Me.tabletblPatientReceipt.AmoutWordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConOPNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.ConOPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConOPNull()
            Me(Me.tabletblPatientReceipt.ConOPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConAENull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.ConAEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConAENull()
            Me(Me.tabletblPatientReceipt.ConAEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConOTNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.ConOTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConOTNull()
            Me(Me.tabletblPatientReceipt.ConOTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConCONNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.ConCONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConCONNull()
            Me(Me.tabletblPatientReceipt.ConCONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConFOLNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.ConFOLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConFOLNull()
            Me(Me.tabletblPatientReceipt.ConFOLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConMEDNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.ConMEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConMEDNull()
            Me(Me.tabletblPatientReceipt.ConMEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConGLANull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.ConGLAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConGLANull()
            Me(Me.tabletblPatientReceipt.ConGLAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConSocialFeeNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.ConSocialFeeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConSocialFeeNull()
            Me(Me.tabletblPatientReceipt.ConSocialFeeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConFullFeeNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.ConFullFeeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConFullFeeNull()
            Me(Me.tabletblPatientReceipt.ConFullFeeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConGeneralNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.ConGeneralColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConGeneralNull()
            Me(Me.tabletblPatientReceipt.ConGeneralColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCashierInNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.CashierInColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCashierInNull()
            Me(Me.tabletblPatientReceipt.CashierInColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCashierUpdateNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.CashierUpdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCashierUpdateNull()
            Me(Me.tabletblPatientReceipt.CashierUpdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPrintCountNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.PrintCountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPrintCountNull()
            Me(Me.tabletblPatientReceipt.PrintCountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDateInNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.DateInColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDateInNull()
            Me(Me.tabletblPatientReceipt.DateInColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDateUpdateNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.DateUpdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDateUpdateNull()
            Me(Me.tabletblPatientReceipt.DateUpdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDateNowNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.DateNowColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDateNowNull()
            Me(Me.tabletblPatientReceipt.DateNowColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConPayNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.ConPayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConPayNull()
            Me(Me.tabletblPatientReceipt.ConPayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConDeleteNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.ConDeleteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConDeleteNull()
            Me(Me.tabletblPatientReceipt.ConDeleteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsYearsNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.YearsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetYearsNull()
            Me(Me.tabletblPatientReceipt.YearsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOperationNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.OperationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOperationNull()
            Me(Me.tabletblPatientReceipt.OperationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIsDonationNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.IsDonationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIsDonationNull()
            Me(Me.tabletblPatientReceipt.IsDonationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDonationIDNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.DonationIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDonationIDNull()
            Me(Me.tabletblPatientReceipt.DonationIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDonationNameNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.DonationNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDonationNameNull()
            Me(Me.tabletblPatientReceipt.DonationNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDonationPayNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.DonationPayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDonationPayNull()
            Me(Me.tabletblPatientReceipt.DonationPayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDonateNoteNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.DonateNoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDonateNoteNull()
            Me(Me.tabletblPatientReceipt.DonateNoteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHosFeeNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.HosFeeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHosFeeNull()
            Me(Me.tabletblPatientReceipt.HosFeeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCashTotalNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.CashTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCashTotalNull()
            Me(Me.tabletblPatientReceipt.CashTotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIsPatientNillNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.IsPatientNillColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIsPatientNillNull()
            Me(Me.tabletblPatientReceipt.IsPatientNillColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTIME_CREATENull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.TIME_CREATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTIME_CREATENull()
            Me(Me.tabletblPatientReceipt.TIME_CREATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTIME_ISSUENull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.TIME_ISSUEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTIME_ISSUENull()
            Me(Me.tabletblPatientReceipt.TIME_ISSUEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsReceiptNoteNull() As Boolean
            Return Me.IsNull(Me.tabletblPatientReceipt.ReceiptNoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetReceiptNoteNull()
            Me(Me.tabletblPatientReceipt.ReceiptNoteColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class V_DeletePaymentRow
        Inherits Global.System.Data.DataRow
        
        Private tableV_DeletePayment As V_DeletePaymentDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableV_DeletePayment = CType(Me.Table,V_DeletePaymentDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HN() As Decimal
            Get
                Return CType(Me(Me.tableV_DeletePayment.HNColumn),Decimal)
            End Get
            Set
                Me(Me.tableV_DeletePayment.HNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PatientName() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_DeletePayment.PatientNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PatientName' in table 'V_DeletePayment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_DeletePayment.PatientNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ReceiptNo() As Long
            Get
                Return CType(Me(Me.tableV_DeletePayment.ReceiptNoColumn),Long)
            End Get
            Set
                Me(Me.tableV_DeletePayment.ReceiptNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IDCashReceipt() As String
            Get
                Return CType(Me(Me.tableV_DeletePayment.IDCashReceiptColumn),String)
            End Get
            Set
                Me(Me.tableV_DeletePayment.IDCashReceiptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ConPay() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_DeletePayment.ConPayColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConPay' in table 'V_DeletePayment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_DeletePayment.ConPayColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ConGeneral() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_DeletePayment.ConGeneralColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConGeneral' in table 'V_DeletePayment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_DeletePayment.ConGeneralColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DateIn() As Date
            Get
                Try 
                    Return CType(Me(Me.tableV_DeletePayment.DateInColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateIn' in table 'V_DeletePayment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_DeletePayment.DateInColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ID() As Long
            Get
                Return CType(Me(Me.tableV_DeletePayment.IDColumn),Long)
            End Get
            Set
                Me(Me.tableV_DeletePayment.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ReceiptNote() As String
            Get
                Try 
                    Return CType(Me(Me.tableV_DeletePayment.ReceiptNoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceiptNote' in table 'V_DeletePayment' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableV_DeletePayment.ReceiptNoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPatientNameNull() As Boolean
            Return Me.IsNull(Me.tableV_DeletePayment.PatientNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPatientNameNull()
            Me(Me.tableV_DeletePayment.PatientNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConPayNull() As Boolean
            Return Me.IsNull(Me.tableV_DeletePayment.ConPayColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConPayNull()
            Me(Me.tableV_DeletePayment.ConPayColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsConGeneralNull() As Boolean
            Return Me.IsNull(Me.tableV_DeletePayment.ConGeneralColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetConGeneralNull()
            Me(Me.tableV_DeletePayment.ConGeneralColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDateInNull() As Boolean
            Return Me.IsNull(Me.tableV_DeletePayment.DateInColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDateInNull()
            Me(Me.tableV_DeletePayment.DateInColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsReceiptNoteNull() As Boolean
            Return Me.IsNull(Me.tableV_DeletePayment.ReceiptNoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetReceiptNoteNull()
            Me(Me.tableV_DeletePayment.ReceiptNoteColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class tblPatientReceiptRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tblPatientReceiptRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As tblPatientReceiptRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As tblPatientReceiptRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class V_DeletePaymentRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As V_DeletePaymentRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As V_DeletePaymentRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As V_DeletePaymentRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DSPaymentListTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class tblPatientReceiptTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "tblPatientReceipt"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("ReceiptNo", "ReceiptNo")
            tableMapping.ColumnMappings.Add("IDCashReceipt", "IDCashReceipt")
            tableMapping.ColumnMappings.Add("HN", "HN")
            tableMapping.ColumnMappings.Add("PatientName", "PatientName")
            tableMapping.ColumnMappings.Add("CashRiel", "CashRiel")
            tableMapping.ColumnMappings.Add("CashUSD", "CashUSD")
            tableMapping.ColumnMappings.Add("TotalRiel", "TotalRiel")
            tableMapping.ColumnMappings.Add("TotalUSD", "TotalUSD")
            tableMapping.ColumnMappings.Add("OperationFeeRiel", "OperationFeeRiel")
            tableMapping.ColumnMappings.Add("OperationFeeUSD", "OperationFeeUSD")
            tableMapping.ColumnMappings.Add("ArtificialEyeFeeRiel", "ArtificialEyeFeeRiel")
            tableMapping.ColumnMappings.Add("ArtificialEyeFeeUSD", "ArtificialEyeFeeUSD")
            tableMapping.ColumnMappings.Add("OtherFeeRiel", "OtherFeeRiel")
            tableMapping.ColumnMappings.Add("OtherFeeUSD", "OtherFeeUSD")
            tableMapping.ColumnMappings.Add("ConsultationFeeRiel", "ConsultationFeeRiel")
            tableMapping.ColumnMappings.Add("ConsultationFeeUSD", "ConsultationFeeUSD")
            tableMapping.ColumnMappings.Add("FollowUpFeeRiel", "FollowUpFeeRiel")
            tableMapping.ColumnMappings.Add("FollowUpFeeUSD", "FollowUpFeeUSD")
            tableMapping.ColumnMappings.Add("MedicineFeeRiel", "MedicineFeeRiel")
            tableMapping.ColumnMappings.Add("MedicineFeeUSD", "MedicineFeeUSD")
            tableMapping.ColumnMappings.Add("GlassFeeRiel", "GlassFeeRiel")
            tableMapping.ColumnMappings.Add("GlassFeeUSD", "GlassFeeUSD")
            tableMapping.ColumnMappings.Add("SocialFeeRiel", "SocialFeeRiel")
            tableMapping.ColumnMappings.Add("SocialFeeUSD", "SocialFeeUSD")
            tableMapping.ColumnMappings.Add("FullFeeRiel", "FullFeeRiel")
            tableMapping.ColumnMappings.Add("FullFeeUSD", "FullFeeUSD")
            tableMapping.ColumnMappings.Add("Rates", "Rates")
            tableMapping.ColumnMappings.Add("AmoutWord", "AmoutWord")
            tableMapping.ColumnMappings.Add("ConOP", "ConOP")
            tableMapping.ColumnMappings.Add("ConAE", "ConAE")
            tableMapping.ColumnMappings.Add("ConOT", "ConOT")
            tableMapping.ColumnMappings.Add("ConCON", "ConCON")
            tableMapping.ColumnMappings.Add("ConFOL", "ConFOL")
            tableMapping.ColumnMappings.Add("ConMED", "ConMED")
            tableMapping.ColumnMappings.Add("ConGLA", "ConGLA")
            tableMapping.ColumnMappings.Add("ConSocialFee", "ConSocialFee")
            tableMapping.ColumnMappings.Add("ConFullFee", "ConFullFee")
            tableMapping.ColumnMappings.Add("ConGeneral", "ConGeneral")
            tableMapping.ColumnMappings.Add("CashierIn", "CashierIn")
            tableMapping.ColumnMappings.Add("CashierUpdate", "CashierUpdate")
            tableMapping.ColumnMappings.Add("PrintCount", "PrintCount")
            tableMapping.ColumnMappings.Add("DateIn", "DateIn")
            tableMapping.ColumnMappings.Add("DateUpdate", "DateUpdate")
            tableMapping.ColumnMappings.Add("DateNow", "DateNow")
            tableMapping.ColumnMappings.Add("ConPay", "ConPay")
            tableMapping.ColumnMappings.Add("ConDelete", "ConDelete")
            tableMapping.ColumnMappings.Add("Years", "Years")
            tableMapping.ColumnMappings.Add("Operation", "Operation")
            tableMapping.ColumnMappings.Add("IsDonation", "IsDonation")
            tableMapping.ColumnMappings.Add("DonationID", "DonationID")
            tableMapping.ColumnMappings.Add("DonationName", "DonationName")
            tableMapping.ColumnMappings.Add("DonationPay", "DonationPay")
            tableMapping.ColumnMappings.Add("DonateNote", "DonateNote")
            tableMapping.ColumnMappings.Add("HosFee", "HosFee")
            tableMapping.ColumnMappings.Add("CashTotal", "CashTotal")
            tableMapping.ColumnMappings.Add("IsPatientNill", "IsPatientNill")
            tableMapping.ColumnMappings.Add("TIME_CREATE", "TIME_CREATE")
            tableMapping.ColumnMappings.Add("TIME_ISSUE", "TIME_ISSUE")
            tableMapping.ColumnMappings.Add("ReceiptNote", "ReceiptNote")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [tblPatientReceipt] WHERE (([ID] = @Original_ID) AND ([ReceiptNo] = @"& _ 
                "Original_ReceiptNo) AND ([IDCashReceipt] = @Original_IDCashReceipt) AND ([HN] = "& _ 
                "@Original_HN) AND ((@IsNull_PatientName = 1 AND [PatientName] IS NULL) OR ([Pati"& _ 
                "entName] = @Original_PatientName)) AND ((@IsNull_CashRiel = 1 AND [CashRiel] IS "& _ 
                "NULL) OR ([CashRiel] = @Original_CashRiel)) AND ((@IsNull_CashUSD = 1 AND [CashU"& _ 
                "SD] IS NULL) OR ([CashUSD] = @Original_CashUSD)) AND ((@IsNull_TotalRiel = 1 AND"& _ 
                " [TotalRiel] IS NULL) OR ([TotalRiel] = @Original_TotalRiel)) AND ((@IsNull_Tota"& _ 
                "lUSD = 1 AND [TotalUSD] IS NULL) OR ([TotalUSD] = @Original_TotalUSD)) AND ((@Is"& _ 
                "Null_OperationFeeRiel = 1 AND [OperationFeeRiel] IS NULL) OR ([OperationFeeRiel]"& _ 
                " = @Original_OperationFeeRiel)) AND ((@IsNull_OperationFeeUSD = 1 AND [Operation"& _ 
                "FeeUSD] IS NULL) OR ([OperationFeeUSD] = @Original_OperationFeeUSD)) AND ((@IsNu"& _ 
                "ll_ArtificialEyeFeeRiel = 1 AND [ArtificialEyeFeeRiel] IS NULL) OR ([ArtificialE"& _ 
                "yeFeeRiel] = @Original_ArtificialEyeFeeRiel)) AND ((@IsNull_ArtificialEyeFeeUSD "& _ 
                "= 1 AND [ArtificialEyeFeeUSD] IS NULL) OR ([ArtificialEyeFeeUSD] = @Original_Art"& _ 
                "ificialEyeFeeUSD)) AND ((@IsNull_OtherFeeRiel = 1 AND [OtherFeeRiel] IS NULL) OR"& _ 
                " ([OtherFeeRiel] = @Original_OtherFeeRiel)) AND ((@IsNull_OtherFeeUSD = 1 AND [O"& _ 
                "therFeeUSD] IS NULL) OR ([OtherFeeUSD] = @Original_OtherFeeUSD)) AND ((@IsNull_C"& _ 
                "onsultationFeeRiel = 1 AND [ConsultationFeeRiel] IS NULL) OR ([ConsultationFeeRi"& _ 
                "el] = @Original_ConsultationFeeRiel)) AND ((@IsNull_ConsultationFeeUSD = 1 AND ["& _ 
                "ConsultationFeeUSD] IS NULL) OR ([ConsultationFeeUSD] = @Original_ConsultationFe"& _ 
                "eUSD)) AND ((@IsNull_FollowUpFeeRiel = 1 AND [FollowUpFeeRiel] IS NULL) OR ([Fol"& _ 
                "lowUpFeeRiel] = @Original_FollowUpFeeRiel)) AND ((@IsNull_FollowUpFeeUSD = 1 AND"& _ 
                " [FollowUpFeeUSD] IS NULL) OR ([FollowUpFeeUSD] = @Original_FollowUpFeeUSD)) AND"& _ 
                " ((@IsNull_MedicineFeeRiel = 1 AND [MedicineFeeRiel] IS NULL) OR ([MedicineFeeRi"& _ 
                "el] = @Original_MedicineFeeRiel)) AND ((@IsNull_MedicineFeeUSD = 1 AND [Medicine"& _ 
                "FeeUSD] IS NULL) OR ([MedicineFeeUSD] = @Original_MedicineFeeUSD)) AND ((@IsNull"& _ 
                "_GlassFeeRiel = 1 AND [GlassFeeRiel] IS NULL) OR ([GlassFeeRiel] = @Original_Gla"& _ 
                "ssFeeRiel)) AND ((@IsNull_GlassFeeUSD = 1 AND [GlassFeeUSD] IS NULL) OR ([GlassF"& _ 
                "eeUSD] = @Original_GlassFeeUSD)) AND ((@IsNull_SocialFeeRiel = 1 AND [SocialFeeR"& _ 
                "iel] IS NULL) OR ([SocialFeeRiel] = @Original_SocialFeeRiel)) AND ((@IsNull_Soci"& _ 
                "alFeeUSD = 1 AND [SocialFeeUSD] IS NULL) OR ([SocialFeeUSD] = @Original_SocialFe"& _ 
                "eUSD)) AND ((@IsNull_FullFeeRiel = 1 AND [FullFeeRiel] IS NULL) OR ([FullFeeRiel"& _ 
                "] = @Original_FullFeeRiel)) AND ((@IsNull_FullFeeUSD = 1 AND [FullFeeUSD] IS NUL"& _ 
                "L) OR ([FullFeeUSD] = @Original_FullFeeUSD)) AND ((@IsNull_Rates = 1 AND [Rates]"& _ 
                " IS NULL) OR ([Rates] = @Original_Rates)) AND ((@IsNull_AmoutWord = 1 AND [Amout"& _ 
                "Word] IS NULL) OR ([AmoutWord] = @Original_AmoutWord)) AND ((@IsNull_ConOP = 1 A"& _ 
                "ND [ConOP] IS NULL) OR ([ConOP] = @Original_ConOP)) AND ((@IsNull_ConAE = 1 AND "& _ 
                "[ConAE] IS NULL) OR ([ConAE] = @Original_ConAE)) AND ((@IsNull_ConOT = 1 AND [Co"& _ 
                "nOT] IS NULL) OR ([ConOT] = @Original_ConOT)) AND ((@IsNull_ConCON = 1 AND [ConC"& _ 
                "ON] IS NULL) OR ([ConCON] = @Original_ConCON)) AND ((@IsNull_ConFOL = 1 AND [Con"& _ 
                "FOL] IS NULL) OR ([ConFOL] = @Original_ConFOL)) AND ((@IsNull_ConMED = 1 AND [Co"& _ 
                "nMED] IS NULL) OR ([ConMED] = @Original_ConMED)) AND ((@IsNull_ConGLA = 1 AND [C"& _ 
                "onGLA] IS NULL) OR ([ConGLA] = @Original_ConGLA)) AND ((@IsNull_ConSocialFee = 1"& _ 
                " AND [ConSocialFee] IS NULL) OR ([ConSocialFee] = @Original_ConSocialFee)) AND ("& _ 
                "(@IsNull_ConFullFee = 1 AND [ConFullFee] IS NULL) OR ([ConFullFee] = @Original_C"& _ 
                "onFullFee)) AND ((@IsNull_ConGeneral = 1 AND [ConGeneral] IS NULL) OR ([ConGener"& _ 
                "al] = @Original_ConGeneral)) AND ((@IsNull_CashierIn = 1 AND [CashierIn] IS NULL"& _ 
                ") OR ([CashierIn] = @Original_CashierIn)) AND ((@IsNull_CashierUpdate = 1 AND [C"& _ 
                "ashierUpdate] IS NULL) OR ([CashierUpdate] = @Original_CashierUpdate)) AND ((@Is"& _ 
                "Null_PrintCount = 1 AND [PrintCount] IS NULL) OR ([PrintCount] = @Original_Print"& _ 
                "Count)) AND ((@IsNull_DateIn = 1 AND [DateIn] IS NULL) OR ([DateIn] = @Original_"& _ 
                "DateIn)) AND ((@IsNull_DateUpdate = 1 AND [DateUpdate] IS NULL) OR ([DateUpdate]"& _ 
                " = @Original_DateUpdate)) AND ((@IsNull_DateNow = 1 AND [DateNow] IS NULL) OR (["& _ 
                "DateNow] = @Original_DateNow)) AND ((@IsNull_ConPay = 1 AND [ConPay] IS NULL) OR"& _ 
                " ([ConPay] = @Original_ConPay)) AND ((@IsNull_ConDelete = 1 AND [ConDelete] IS N"& _ 
                "ULL) OR ([ConDelete] = @Original_ConDelete)) AND ((@IsNull_Years = 1 AND [Years]"& _ 
                " IS NULL) OR ([Years] = @Original_Years)) AND ((@IsNull_Operation = 1 AND [Opera"& _ 
                "tion] IS NULL) OR ([Operation] = @Original_Operation)) AND ((@IsNull_IsDonation "& _ 
                "= 1 AND [IsDonation] IS NULL) OR ([IsDonation] = @Original_IsDonation)) AND ((@I"& _ 
                "sNull_DonationID = 1 AND [DonationID] IS NULL) OR ([DonationID] = @Original_Dona"& _ 
                "tionID)) AND ((@IsNull_DonationName = 1 AND [DonationName] IS NULL) OR ([Donatio"& _ 
                "nName] = @Original_DonationName)) AND ((@IsNull_DonationPay = 1 AND [DonationPay"& _ 
                "] IS NULL) OR ([DonationPay] = @Original_DonationPay)) AND ((@IsNull_DonateNote "& _ 
                "= 1 AND [DonateNote] IS NULL) OR ([DonateNote] = @Original_DonateNote)) AND ((@I"& _ 
                "sNull_HosFee = 1 AND [HosFee] IS NULL) OR ([HosFee] = @Original_HosFee)) AND ((@"& _ 
                "IsNull_CashTotal = 1 AND [CashTotal] IS NULL) OR ([CashTotal] = @Original_CashTo"& _ 
                "tal)) AND ((@IsNull_IsPatientNill = 1 AND [IsPatientNill] IS NULL) OR ([IsPatien"& _ 
                "tNill] = @Original_IsPatientNill)) AND ((@IsNull_TIME_CREATE = 1 AND [TIME_CREAT"& _ 
                "E] IS NULL) OR ([TIME_CREATE] = @Original_TIME_CREATE)) AND ((@IsNull_TIME_ISSUE"& _ 
                " = 1 AND [TIME_ISSUE] IS NULL) OR ([TIME_ISSUE] = @Original_TIME_ISSUE)) AND ((@"& _ 
                "IsNull_ReceiptNote = 1 AND [ReceiptNote] IS NULL) OR ([ReceiptNote] = @Original_"& _ 
                "ReceiptNote)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiptNo", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDCashReceipt", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCashReceipt", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HN", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "HN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PatientName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PatientName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PatientName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PatientName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CashRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CashRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CashUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CashUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OperationFeeRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationFeeRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OperationFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationFeeRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OperationFeeUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationFeeUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OperationFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationFeeUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ArtificialEyeFeeRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArtificialEyeFeeRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ArtificialEyeFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArtificialEyeFeeRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ArtificialEyeFeeUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArtificialEyeFeeUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ArtificialEyeFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArtificialEyeFeeUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OtherFeeRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OtherFeeRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OtherFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OtherFeeRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OtherFeeUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OtherFeeUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OtherFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OtherFeeUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConsultationFeeRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConsultationFeeRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConsultationFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConsultationFeeRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConsultationFeeUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConsultationFeeUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConsultationFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConsultationFeeUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FollowUpFeeRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FollowUpFeeRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FollowUpFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FollowUpFeeRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FollowUpFeeUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FollowUpFeeUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FollowUpFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FollowUpFeeUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MedicineFeeRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MedicineFeeRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MedicineFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MedicineFeeRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MedicineFeeUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MedicineFeeUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MedicineFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MedicineFeeUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GlassFeeRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlassFeeRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GlassFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlassFeeRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GlassFeeUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlassFeeUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GlassFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlassFeeUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SocialFeeRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SocialFeeRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SocialFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SocialFeeRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SocialFeeUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SocialFeeUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SocialFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SocialFeeUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FullFeeRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FullFeeRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FullFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FullFeeRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FullFeeUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FullFeeUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FullFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FullFeeUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Rates", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rates", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Rates", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rates", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AmoutWord", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AmoutWord", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AmoutWord", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AmoutWord", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConOP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConOP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConOP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConOP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConAE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConAE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConAE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConAE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConOT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConOT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConOT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConOT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConCON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConCON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConCON", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConCON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConFOL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConFOL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConFOL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConFOL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConMED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConMED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConMED", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConMED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConGLA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConGLA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConGLA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConGLA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConSocialFee", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConSocialFee", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConSocialFee", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConSocialFee", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConFullFee", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConFullFee", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConFullFee", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConFullFee", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConGeneral", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConGeneral", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConGeneral", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConGeneral", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CashierIn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashierIn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CashierIn", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashierIn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CashierUpdate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashierUpdate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CashierUpdate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashierUpdate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PrintCount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PrintCount", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PrintCount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PrintCount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateIn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateIn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateIn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateIn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateUpdate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateUpdate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateUpdate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateUpdate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateNow", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateNow", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateNow", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateNow", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConPay", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConPay", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConPay", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConPay", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConDelete", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConDelete", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConDelete", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConDelete", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Years", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Years", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Years", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Years", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Operation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Operation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Operation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Operation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IsDonation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsDonation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsDonation", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsDonation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DonationID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonationID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DonationID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DonationID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DonationName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonationName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DonationName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonationName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DonationPay", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonationPay", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DonationPay", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonationPay", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DonateNote", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonateNote", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DonateNote", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonateNote", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HosFee", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HosFee", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HosFee", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HosFee", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CashTotal", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashTotal", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CashTotal", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashTotal", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IsPatientNill", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsPatientNill", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsPatientNill", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsPatientNill", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIME_CREATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIME_CREATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIME_CREATE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIME_CREATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIME_ISSUE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIME_ISSUE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIME_ISSUE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIME_ISSUE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceiptNote", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiptNote", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiptNote", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiptNote", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [tblPatientReceipt] ([ReceiptNo], [IDCashReceipt], [HN], [PatientName"& _ 
                "], [CashRiel], [CashUSD], [TotalRiel], [TotalUSD], [OperationFeeRiel], [Operatio"& _ 
                "nFeeUSD], [ArtificialEyeFeeRiel], [ArtificialEyeFeeUSD], [OtherFeeRiel], [OtherF"& _ 
                "eeUSD], [ConsultationFeeRiel], [ConsultationFeeUSD], [FollowUpFeeRiel], [FollowU"& _ 
                "pFeeUSD], [MedicineFeeRiel], [MedicineFeeUSD], [GlassFeeRiel], [GlassFeeUSD], [S"& _ 
                "ocialFeeRiel], [SocialFeeUSD], [FullFeeRiel], [FullFeeUSD], [Rates], [AmoutWord]"& _ 
                ", [ConOP], [ConAE], [ConOT], [ConCON], [ConFOL], [ConMED], [ConGLA], [ConSocialF"& _ 
                "ee], [ConFullFee], [ConGeneral], [CashierIn], [CashierUpdate], [PrintCount], [Da"& _ 
                "teIn], [DateUpdate], [DateNow], [ConPay], [ConDelete], [Years], [Operation], [Is"& _ 
                "Donation], [DonationID], [DonationName], [DonationPay], [DonateNote], [HosFee], "& _ 
                "[CashTotal], [IsPatientNill], [TIME_CREATE], [TIME_ISSUE], [ReceiptNote]) VALUES"& _ 
                " (@ReceiptNo, @IDCashReceipt, @HN, @PatientName, @CashRiel, @CashUSD, @TotalRiel"& _ 
                ", @TotalUSD, @OperationFeeRiel, @OperationFeeUSD, @ArtificialEyeFeeRiel, @Artifi"& _ 
                "cialEyeFeeUSD, @OtherFeeRiel, @OtherFeeUSD, @ConsultationFeeRiel, @ConsultationF"& _ 
                "eeUSD, @FollowUpFeeRiel, @FollowUpFeeUSD, @MedicineFeeRiel, @MedicineFeeUSD, @Gl"& _ 
                "assFeeRiel, @GlassFeeUSD, @SocialFeeRiel, @SocialFeeUSD, @FullFeeRiel, @FullFeeU"& _ 
                "SD, @Rates, @AmoutWord, @ConOP, @ConAE, @ConOT, @ConCON, @ConFOL, @ConMED, @ConG"& _ 
                "LA, @ConSocialFee, @ConFullFee, @ConGeneral, @CashierIn, @CashierUpdate, @PrintC"& _ 
                "ount, @DateIn, @DateUpdate, @DateNow, @ConPay, @ConDelete, @Years, @Operation, @"& _ 
                "IsDonation, @DonationID, @DonationName, @DonationPay, @DonateNote, @HosFee, @Cas"& _ 
                "hTotal, @IsPatientNill, @TIME_CREATE, @TIME_ISSUE, @ReceiptNote);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, Re"& _ 
                "ceiptNo, IDCashReceipt, HN, PatientName, CashRiel, CashUSD, TotalRiel, TotalUSD,"& _ 
                " OperationFeeRiel, OperationFeeUSD, ArtificialEyeFeeRiel, ArtificialEyeFeeUSD, O"& _ 
                "therFeeRiel, OtherFeeUSD, ConsultationFeeRiel, ConsultationFeeUSD, FollowUpFeeRi"& _ 
                "el, FollowUpFeeUSD, MedicineFeeRiel, MedicineFeeUSD, GlassFeeRiel, GlassFeeUSD, "& _ 
                "SocialFeeRiel, SocialFeeUSD, FullFeeRiel, FullFeeUSD, Rates, AmoutWord, ConOP, C"& _ 
                "onAE, ConOT, ConCON, ConFOL, ConMED, ConGLA, ConSocialFee, ConFullFee, ConGenera"& _ 
                "l, CashierIn, CashierUpdate, PrintCount, DateIn, DateUpdate, DateNow, ConPay, Co"& _ 
                "nDelete, Years, Operation, IsDonation, DonationID, DonationName, DonationPay, Do"& _ 
                "nateNote, HosFee, CashTotal, IsPatientNill, TIME_CREATE, TIME_ISSUE, ReceiptNote"& _ 
                " FROM tblPatientReceipt WHERE (ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiptNo", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDCashReceipt", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCashReceipt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HN", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "HN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PatientName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PatientName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CashRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CashUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperationFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationFeeRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperationFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationFeeUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ArtificialEyeFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArtificialEyeFeeRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ArtificialEyeFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArtificialEyeFeeUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OtherFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OtherFeeRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OtherFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OtherFeeUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConsultationFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConsultationFeeRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConsultationFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConsultationFeeUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FollowUpFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FollowUpFeeRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FollowUpFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FollowUpFeeUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MedicineFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MedicineFeeRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MedicineFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MedicineFeeUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GlassFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlassFeeRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GlassFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlassFeeUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SocialFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SocialFeeRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SocialFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SocialFeeUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FullFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FullFeeRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FullFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FullFeeUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rates", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rates", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AmoutWord", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AmoutWord", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConOP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConOP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConAE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConAE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConOT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConOT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConCON", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConCON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConFOL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConFOL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConMED", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConMED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConGLA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConGLA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConSocialFee", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConSocialFee", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConFullFee", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConFullFee", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConGeneral", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConGeneral", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CashierIn", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashierIn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CashierUpdate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashierUpdate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PrintCount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PrintCount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateIn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateIn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateUpdate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateUpdate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateNow", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateNow", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConPay", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConPay", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConDelete", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConDelete", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Years", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Years", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Operation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Operation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsDonation", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsDonation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DonationID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DonationID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DonationName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonationName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DonationPay", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonationPay", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DonateNote", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonateNote", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HosFee", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HosFee", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CashTotal", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashTotal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsPatientNill", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsPatientNill", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIME_CREATE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIME_CREATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIME_ISSUE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIME_ISSUE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiptNote", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiptNote", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [tblPatientReceipt] SET [ReceiptNo] = @ReceiptNo, [IDCashReceipt] = @IDCas"& _ 
                "hReceipt, [HN] = @HN, [PatientName] = @PatientName, [CashRiel] = @CashRiel, [Cas"& _ 
                "hUSD] = @CashUSD, [TotalRiel] = @TotalRiel, [TotalUSD] = @TotalUSD, [OperationFe"& _ 
                "eRiel] = @OperationFeeRiel, [OperationFeeUSD] = @OperationFeeUSD, [ArtificialEye"& _ 
                "FeeRiel] = @ArtificialEyeFeeRiel, [ArtificialEyeFeeUSD] = @ArtificialEyeFeeUSD, "& _ 
                "[OtherFeeRiel] = @OtherFeeRiel, [OtherFeeUSD] = @OtherFeeUSD, [ConsultationFeeRi"& _ 
                "el] = @ConsultationFeeRiel, [ConsultationFeeUSD] = @ConsultationFeeUSD, [FollowU"& _ 
                "pFeeRiel] = @FollowUpFeeRiel, [FollowUpFeeUSD] = @FollowUpFeeUSD, [MedicineFeeRi"& _ 
                "el] = @MedicineFeeRiel, [MedicineFeeUSD] = @MedicineFeeUSD, [GlassFeeRiel] = @Gl"& _ 
                "assFeeRiel, [GlassFeeUSD] = @GlassFeeUSD, [SocialFeeRiel] = @SocialFeeRiel, [Soc"& _ 
                "ialFeeUSD] = @SocialFeeUSD, [FullFeeRiel] = @FullFeeRiel, [FullFeeUSD] = @FullFe"& _ 
                "eUSD, [Rates] = @Rates, [AmoutWord] = @AmoutWord, [ConOP] = @ConOP, [ConAE] = @C"& _ 
                "onAE, [ConOT] = @ConOT, [ConCON] = @ConCON, [ConFOL] = @ConFOL, [ConMED] = @ConM"& _ 
                "ED, [ConGLA] = @ConGLA, [ConSocialFee] = @ConSocialFee, [ConFullFee] = @ConFullF"& _ 
                "ee, [ConGeneral] = @ConGeneral, [CashierIn] = @CashierIn, [CashierUpdate] = @Cas"& _ 
                "hierUpdate, [PrintCount] = @PrintCount, [DateIn] = @DateIn, [DateUpdate] = @Date"& _ 
                "Update, [DateNow] = @DateNow, [ConPay] = @ConPay, [ConDelete] = @ConDelete, [Yea"& _ 
                "rs] = @Years, [Operation] = @Operation, [IsDonation] = @IsDonation, [DonationID]"& _ 
                " = @DonationID, [DonationName] = @DonationName, [DonationPay] = @DonationPay, [D"& _ 
                "onateNote] = @DonateNote, [HosFee] = @HosFee, [CashTotal] = @CashTotal, [IsPatie"& _ 
                "ntNill] = @IsPatientNill, [TIME_CREATE] = @TIME_CREATE, [TIME_ISSUE] = @TIME_ISS"& _ 
                "UE, [ReceiptNote] = @ReceiptNote WHERE (([ID] = @Original_ID) AND ([ReceiptNo] ="& _ 
                " @Original_ReceiptNo) AND ([IDCashReceipt] = @Original_IDCashReceipt) AND ([HN] "& _ 
                "= @Original_HN) AND ((@IsNull_PatientName = 1 AND [PatientName] IS NULL) OR ([Pa"& _ 
                "tientName] = @Original_PatientName)) AND ((@IsNull_CashRiel = 1 AND [CashRiel] I"& _ 
                "S NULL) OR ([CashRiel] = @Original_CashRiel)) AND ((@IsNull_CashUSD = 1 AND [Cas"& _ 
                "hUSD] IS NULL) OR ([CashUSD] = @Original_CashUSD)) AND ((@IsNull_TotalRiel = 1 A"& _ 
                "ND [TotalRiel] IS NULL) OR ([TotalRiel] = @Original_TotalRiel)) AND ((@IsNull_To"& _ 
                "talUSD = 1 AND [TotalUSD] IS NULL) OR ([TotalUSD] = @Original_TotalUSD)) AND ((@"& _ 
                "IsNull_OperationFeeRiel = 1 AND [OperationFeeRiel] IS NULL) OR ([OperationFeeRie"& _ 
                "l] = @Original_OperationFeeRiel)) AND ((@IsNull_OperationFeeUSD = 1 AND [Operati"& _ 
                "onFeeUSD] IS NULL) OR ([OperationFeeUSD] = @Original_OperationFeeUSD)) AND ((@Is"& _ 
                "Null_ArtificialEyeFeeRiel = 1 AND [ArtificialEyeFeeRiel] IS NULL) OR ([Artificia"& _ 
                "lEyeFeeRiel] = @Original_ArtificialEyeFeeRiel)) AND ((@IsNull_ArtificialEyeFeeUS"& _ 
                "D = 1 AND [ArtificialEyeFeeUSD] IS NULL) OR ([ArtificialEyeFeeUSD] = @Original_A"& _ 
                "rtificialEyeFeeUSD)) AND ((@IsNull_OtherFeeRiel = 1 AND [OtherFeeRiel] IS NULL) "& _ 
                "OR ([OtherFeeRiel] = @Original_OtherFeeRiel)) AND ((@IsNull_OtherFeeUSD = 1 AND "& _ 
                "[OtherFeeUSD] IS NULL) OR ([OtherFeeUSD] = @Original_OtherFeeUSD)) AND ((@IsNull"& _ 
                "_ConsultationFeeRiel = 1 AND [ConsultationFeeRiel] IS NULL) OR ([ConsultationFee"& _ 
                "Riel] = @Original_ConsultationFeeRiel)) AND ((@IsNull_ConsultationFeeUSD = 1 AND"& _ 
                " [ConsultationFeeUSD] IS NULL) OR ([ConsultationFeeUSD] = @Original_Consultation"& _ 
                "FeeUSD)) AND ((@IsNull_FollowUpFeeRiel = 1 AND [FollowUpFeeRiel] IS NULL) OR ([F"& _ 
                "ollowUpFeeRiel] = @Original_FollowUpFeeRiel)) AND ((@IsNull_FollowUpFeeUSD = 1 A"& _ 
                "ND [FollowUpFeeUSD] IS NULL) OR ([FollowUpFeeUSD] = @Original_FollowUpFeeUSD)) A"& _ 
                "ND ((@IsNull_MedicineFeeRiel = 1 AND [MedicineFeeRiel] IS NULL) OR ([MedicineFee"& _ 
                "Riel] = @Original_MedicineFeeRiel)) AND ((@IsNull_MedicineFeeUSD = 1 AND [Medici"& _ 
                "neFeeUSD] IS NULL) OR ([MedicineFeeUSD] = @Original_MedicineFeeUSD)) AND ((@IsNu"& _ 
                "ll_GlassFeeRiel = 1 AND [GlassFeeRiel] IS NULL) OR ([GlassFeeRiel] = @Original_G"& _ 
                "lassFeeRiel)) AND ((@IsNull_GlassFeeUSD = 1 AND [GlassFeeUSD] IS NULL) OR ([Glas"& _ 
                "sFeeUSD] = @Original_GlassFeeUSD)) AND ((@IsNull_SocialFeeRiel = 1 AND [SocialFe"& _ 
                "eRiel] IS NULL) OR ([SocialFeeRiel] = @Original_SocialFeeRiel)) AND ((@IsNull_So"& _ 
                "cialFeeUSD = 1 AND [SocialFeeUSD] IS NULL) OR ([SocialFeeUSD] = @Original_Social"& _ 
                "FeeUSD)) AND ((@IsNull_FullFeeRiel = 1 AND [FullFeeRiel] IS NULL) OR ([FullFeeRi"& _ 
                "el] = @Original_FullFeeRiel)) AND ((@IsNull_FullFeeUSD = 1 AND [FullFeeUSD] IS N"& _ 
                "ULL) OR ([FullFeeUSD] = @Original_FullFeeUSD)) AND ((@IsNull_Rates = 1 AND [Rate"& _ 
                "s] IS NULL) OR ([Rates] = @Original_Rates)) AND ((@IsNull_AmoutWord = 1 AND [Amo"& _ 
                "utWord] IS NULL) OR ([AmoutWord] = @Original_AmoutWord)) AND ((@IsNull_ConOP = 1"& _ 
                " AND [ConOP] IS NULL) OR ([ConOP] = @Original_ConOP)) AND ((@IsNull_ConAE = 1 AN"& _ 
                "D [ConAE] IS NULL) OR ([ConAE] = @Original_ConAE)) AND ((@IsNull_ConOT = 1 AND ["& _ 
                "ConOT] IS NULL) OR ([ConOT] = @Original_ConOT)) AND ((@IsNull_ConCON = 1 AND [Co"& _ 
                "nCON] IS NULL) OR ([ConCON] = @Original_ConCON)) AND ((@IsNull_ConFOL = 1 AND [C"& _ 
                "onFOL] IS NULL) OR ([ConFOL] = @Original_ConFOL)) AND ((@IsNull_ConMED = 1 AND ["& _ 
                "ConMED] IS NULL) OR ([ConMED] = @Original_ConMED)) AND ((@IsNull_ConGLA = 1 AND "& _ 
                "[ConGLA] IS NULL) OR ([ConGLA] = @Original_ConGLA)) AND ((@IsNull_ConSocialFee ="& _ 
                " 1 AND [ConSocialFee] IS NULL) OR ([ConSocialFee] = @Original_ConSocialFee)) AND"& _ 
                " ((@IsNull_ConFullFee = 1 AND [ConFullFee] IS NULL) OR ([ConFullFee] = @Original"& _ 
                "_ConFullFee)) AND ((@IsNull_ConGeneral = 1 AND [ConGeneral] IS NULL) OR ([ConGen"& _ 
                "eral] = @Original_ConGeneral)) AND ((@IsNull_CashierIn = 1 AND [CashierIn] IS NU"& _ 
                "LL) OR ([CashierIn] = @Original_CashierIn)) AND ((@IsNull_CashierUpdate = 1 AND "& _ 
                "[CashierUpdate] IS NULL) OR ([CashierUpdate] = @Original_CashierUpdate)) AND ((@"& _ 
                "IsNull_PrintCount = 1 AND [PrintCount] IS NULL) OR ([PrintCount] = @Original_Pri"& _ 
                "ntCount)) AND ((@IsNull_DateIn = 1 AND [DateIn] IS NULL) OR ([DateIn] = @Origina"& _ 
                "l_DateIn)) AND ((@IsNull_DateUpdate = 1 AND [DateUpdate] IS NULL) OR ([DateUpdat"& _ 
                "e] = @Original_DateUpdate)) AND ((@IsNull_DateNow = 1 AND [DateNow] IS NULL) OR "& _ 
                "([DateNow] = @Original_DateNow)) AND ((@IsNull_ConPay = 1 AND [ConPay] IS NULL) "& _ 
                "OR ([ConPay] = @Original_ConPay)) AND ((@IsNull_ConDelete = 1 AND [ConDelete] IS"& _ 
                " NULL) OR ([ConDelete] = @Original_ConDelete)) AND ((@IsNull_Years = 1 AND [Year"& _ 
                "s] IS NULL) OR ([Years] = @Original_Years)) AND ((@IsNull_Operation = 1 AND [Ope"& _ 
                "ration] IS NULL) OR ([Operation] = @Original_Operation)) AND ((@IsNull_IsDonatio"& _ 
                "n = 1 AND [IsDonation] IS NULL) OR ([IsDonation] = @Original_IsDonation)) AND (("& _ 
                "@IsNull_DonationID = 1 AND [DonationID] IS NULL) OR ([DonationID] = @Original_Do"& _ 
                "nationID)) AND ((@IsNull_DonationName = 1 AND [DonationName] IS NULL) OR ([Donat"& _ 
                "ionName] = @Original_DonationName)) AND ((@IsNull_DonationPay = 1 AND [DonationP"& _ 
                "ay] IS NULL) OR ([DonationPay] = @Original_DonationPay)) AND ((@IsNull_DonateNot"& _ 
                "e = 1 AND [DonateNote] IS NULL) OR ([DonateNote] = @Original_DonateNote)) AND (("& _ 
                "@IsNull_HosFee = 1 AND [HosFee] IS NULL) OR ([HosFee] = @Original_HosFee)) AND ("& _ 
                "(@IsNull_CashTotal = 1 AND [CashTotal] IS NULL) OR ([CashTotal] = @Original_Cash"& _ 
                "Total)) AND ((@IsNull_IsPatientNill = 1 AND [IsPatientNill] IS NULL) OR ([IsPati"& _ 
                "entNill] = @Original_IsPatientNill)) AND ((@IsNull_TIME_CREATE = 1 AND [TIME_CRE"& _ 
                "ATE] IS NULL) OR ([TIME_CREATE] = @Original_TIME_CREATE)) AND ((@IsNull_TIME_ISS"& _ 
                "UE = 1 AND [TIME_ISSUE] IS NULL) OR ([TIME_ISSUE] = @Original_TIME_ISSUE)) AND ("& _ 
                "(@IsNull_ReceiptNote = 1 AND [ReceiptNote] IS NULL) OR ([ReceiptNote] = @Origina"& _ 
                "l_ReceiptNote)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ID, ReceiptNo, IDCashReceipt, HN, PatientName, CashRie"& _ 
                "l, CashUSD, TotalRiel, TotalUSD, OperationFeeRiel, OperationFeeUSD, ArtificialEy"& _ 
                "eFeeRiel, ArtificialEyeFeeUSD, OtherFeeRiel, OtherFeeUSD, ConsultationFeeRiel, C"& _ 
                "onsultationFeeUSD, FollowUpFeeRiel, FollowUpFeeUSD, MedicineFeeRiel, MedicineFee"& _ 
                "USD, GlassFeeRiel, GlassFeeUSD, SocialFeeRiel, SocialFeeUSD, FullFeeRiel, FullFe"& _ 
                "eUSD, Rates, AmoutWord, ConOP, ConAE, ConOT, ConCON, ConFOL, ConMED, ConGLA, Con"& _ 
                "SocialFee, ConFullFee, ConGeneral, CashierIn, CashierUpdate, PrintCount, DateIn,"& _ 
                " DateUpdate, DateNow, ConPay, ConDelete, Years, Operation, IsDonation, DonationI"& _ 
                "D, DonationName, DonationPay, DonateNote, HosFee, CashTotal, IsPatientNill, TIME"& _ 
                "_CREATE, TIME_ISSUE, ReceiptNote FROM tblPatientReceipt WHERE (ID = @ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiptNo", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IDCashReceipt", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCashReceipt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HN", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "HN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PatientName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PatientName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CashRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CashUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperationFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationFeeRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OperationFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationFeeUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ArtificialEyeFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArtificialEyeFeeRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ArtificialEyeFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArtificialEyeFeeUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OtherFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OtherFeeRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OtherFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OtherFeeUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConsultationFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConsultationFeeRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConsultationFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConsultationFeeUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FollowUpFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FollowUpFeeRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FollowUpFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FollowUpFeeUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MedicineFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MedicineFeeRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MedicineFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MedicineFeeUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GlassFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlassFeeRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GlassFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlassFeeUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SocialFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SocialFeeRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SocialFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SocialFeeUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FullFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FullFeeRiel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FullFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FullFeeUSD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rates", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rates", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AmoutWord", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AmoutWord", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConOP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConOP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConAE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConAE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConOT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConOT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConCON", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConCON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConFOL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConFOL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConMED", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConMED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConGLA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConGLA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConSocialFee", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConSocialFee", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConFullFee", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConFullFee", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConGeneral", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConGeneral", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CashierIn", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashierIn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CashierUpdate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashierUpdate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PrintCount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PrintCount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateIn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateIn", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateUpdate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateUpdate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateNow", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateNow", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConPay", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConPay", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConDelete", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConDelete", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Years", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Years", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Operation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Operation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsDonation", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsDonation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DonationID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DonationID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DonationName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonationName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DonationPay", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonationPay", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DonateNote", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonateNote", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HosFee", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HosFee", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CashTotal", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashTotal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsPatientNill", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsPatientNill", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIME_CREATE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIME_CREATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIME_ISSUE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIME_ISSUE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReceiptNote", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiptNote", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ID", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiptNo", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiptNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IDCashReceipt", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IDCashReceipt", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HN", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "HN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PatientName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PatientName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PatientName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PatientName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CashRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CashRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CashUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CashUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TotalUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TotalUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OperationFeeRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationFeeRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OperationFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationFeeRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OperationFeeUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationFeeUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OperationFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OperationFeeUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ArtificialEyeFeeRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArtificialEyeFeeRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ArtificialEyeFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArtificialEyeFeeRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ArtificialEyeFeeUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArtificialEyeFeeUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ArtificialEyeFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ArtificialEyeFeeUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OtherFeeRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OtherFeeRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OtherFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OtherFeeRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OtherFeeUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OtherFeeUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OtherFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OtherFeeUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConsultationFeeRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConsultationFeeRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConsultationFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConsultationFeeRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConsultationFeeUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConsultationFeeUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConsultationFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConsultationFeeUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FollowUpFeeRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FollowUpFeeRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FollowUpFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FollowUpFeeRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FollowUpFeeUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FollowUpFeeUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FollowUpFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FollowUpFeeUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MedicineFeeRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MedicineFeeRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MedicineFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MedicineFeeRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MedicineFeeUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MedicineFeeUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MedicineFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MedicineFeeUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GlassFeeRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlassFeeRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GlassFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlassFeeRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GlassFeeUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlassFeeUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GlassFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GlassFeeUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SocialFeeRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SocialFeeRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SocialFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SocialFeeRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SocialFeeUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SocialFeeUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SocialFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SocialFeeUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FullFeeRiel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FullFeeRiel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FullFeeRiel", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FullFeeRiel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FullFeeUSD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FullFeeUSD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FullFeeUSD", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FullFeeUSD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Rates", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rates", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Rates", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rates", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AmoutWord", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AmoutWord", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AmoutWord", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AmoutWord", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConOP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConOP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConOP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConOP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConAE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConAE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConAE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConAE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConOT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConOT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConOT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConOT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConCON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConCON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConCON", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConCON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConFOL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConFOL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConFOL", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConFOL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConMED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConMED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConMED", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConMED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConGLA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConGLA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConGLA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConGLA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConSocialFee", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConSocialFee", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConSocialFee", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConSocialFee", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConFullFee", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConFullFee", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConFullFee", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConFullFee", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConGeneral", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConGeneral", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConGeneral", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConGeneral", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CashierIn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashierIn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CashierIn", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashierIn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CashierUpdate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashierUpdate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CashierUpdate", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashierUpdate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PrintCount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PrintCount", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PrintCount", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PrintCount", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateIn", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateIn", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateIn", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateIn", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateUpdate", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateUpdate", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateUpdate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateUpdate", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DateNow", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateNow", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DateNow", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateNow", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConPay", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConPay", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConPay", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConPay", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ConDelete", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConDelete", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ConDelete", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConDelete", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Years", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Years", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Years", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Years", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Operation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Operation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Operation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Operation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IsDonation", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsDonation", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsDonation", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsDonation", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DonationID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonationID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DonationID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DonationID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DonationName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonationName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DonationName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonationName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DonationPay", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonationPay", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DonationPay", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonationPay", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DonateNote", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonateNote", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DonateNote", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DonateNote", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HosFee", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HosFee", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HosFee", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HosFee", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CashTotal", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashTotal", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CashTotal", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CashTotal", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IsPatientNill", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsPatientNill", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IsPatientNill", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsPatientNill", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIME_CREATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIME_CREATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIME_CREATE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIME_CREATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIME_ISSUE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIME_ISSUE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIME_ISSUE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIME_ISSUE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ReceiptNote", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiptNote", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ReceiptNote", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReceiptNote", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.TakeoHospitalInventory.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        ID, ReceiptNo, IDCashReceipt, HN, PatientName, CashRiel, CashUSD, T"& _ 
                "otalRiel, TotalUSD, OperationFeeRiel, OperationFeeUSD, ArtificialEyeFeeRiel, Art"& _ 
                "ificialEyeFeeUSD, OtherFeeRiel, OtherFeeUSD, ConsultationFeeRiel, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "             ConsultationFeeUSD, FollowUpFeeRiel, FollowUpFeeUSD, MedicineFeeRie"& _ 
                "l, MedicineFeeUSD, GlassFeeRiel, GlassFeeUSD, SocialFeeRiel, SocialFeeUSD, FullF"& _ 
                "eeRiel, FullFeeUSD, Rates, AmoutWord, ConOP, ConAE, ConOT, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      ConCON, ConFOL, ConMED, ConGLA, ConSocialFee, ConFullFee, ConGeneral, Cash"& _ 
                "ierIn, CashierUpdate, PrintCount, DateIn, DateUpdate, DateNow, ConPay, ConDelete"& _ 
                ", Years, Operation, IsDonation, DonationID, DonationName, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     DonationPay, DonateNote, HosFee, CashTotal, IsPatientNill, TIME_CREATE, TIM"& _ 
                "E_ISSUE, ReceiptNote"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            tblPatientReceipt"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT AmoutWord, ArtificialEyeFeeRiel, ArtificialEyeFeeUSD, CashRiel, CashTotal,"& _ 
                " CashUSD, CashierIn, CashierUpdate, ConAE, ConCON, ConDelete, ConFOL, ConFullFee"& _ 
                ", ConGLA, ConGeneral, ConMED, ConOP, ConOT, ConPay, ConSocialFee, ConsultationFe"& _ 
                "eRiel, ConsultationFeeUSD, DateIn, DateNow, DateUpdate, DonateNote, DonationID, "& _ 
                "DonationName, DonationPay, FollowUpFeeRiel, FollowUpFeeUSD, FullFeeRiel, FullFee"& _ 
                "USD, GlassFeeRiel, GlassFeeUSD, HN, HosFee, ID, IDCashReceipt, IsDonation, IsPat"& _ 
                "ientNill, MedicineFeeRiel, MedicineFeeUSD, Operation, OperationFeeRiel, Operatio"& _ 
                "nFeeUSD, OtherFeeRiel, OtherFeeUSD, PatientName, PrintCount, Rates, ReceiptNo, R"& _ 
                "eceiptNote, SocialFeeRiel, SocialFeeUSD, TIME_CREATE, TIME_ISSUE, TotalRiel, Tot"& _ 
                "alUSD, Years FROM tblPatientReceipt WHERE (CAST(CONVERT (VARCHAR(10), DateIn, 1)"& _ 
                " AS DateTime) >= CAST(CONVERT (VARCHAR(10), CAST(@DATEIN AS DATETIME), 1) AS Dat"& _ 
                "etime)) AND (ConPay = '0') AND (ConDelete = '0') ORDER BY ReceiptNo"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATEIN", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT AmoutWord, ArtificialEyeFeeRiel, ArtificialEyeFeeUSD, CashRiel, CashTotal,"& _ 
                " CashUSD, CashierIn, CashierUpdate, ConAE, ConCON, ConDelete, ConFOL, ConFullFee"& _ 
                ", ConGLA, ConGeneral, ConMED, ConOP, ConOT, ConPay, ConSocialFee, ConsultationFe"& _ 
                "eRiel, ConsultationFeeUSD, DateIn, DateNow, DateUpdate, DonateNote, DonationID, "& _ 
                "DonationName, DonationPay, FollowUpFeeRiel, FollowUpFeeUSD, FullFeeRiel, FullFee"& _ 
                "USD, GlassFeeRiel, GlassFeeUSD, HN, HosFee, ID, IDCashReceipt, IsDonation, IsPat"& _ 
                "ientNill, MedicineFeeRiel, MedicineFeeUSD, Operation, OperationFeeRiel, Operatio"& _ 
                "nFeeUSD, OtherFeeRiel, OtherFeeUSD, PatientName, PrintCount, Rates, ReceiptNo, R"& _ 
                "eceiptNote, SocialFeeRiel, SocialFeeUSD, TIME_CREATE, TIME_ISSUE, TotalRiel, Tot"& _ 
                "alUSD, Years FROM tblPatientReceipt WHERE (ConPay = '0') AND (ConDelete = '0') O"& _ 
                "RDER BY ReceiptNo"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSPaymentList.tblPatientReceiptDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSPaymentList.tblPatientReceiptDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSPaymentList.tblPatientReceiptDataTable = New DSPaymentList.tblPatientReceiptDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByGetPaymentList(ByVal dataTable As DSPaymentList.tblPatientReceiptDataTable, ByVal DATEIN As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DATEIN,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByGetPaymentList(ByVal DATEIN As Date) As DSPaymentList.tblPatientReceiptDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DATEIN,Date)
            Dim dataTable As DSPaymentList.tblPatientReceiptDataTable = New DSPaymentList.tblPatientReceiptDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByGetPaymentListAll(ByVal dataTable As DSPaymentList.tblPatientReceiptDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByGetPaymentListAll() As DSPaymentList.tblPatientReceiptDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Dim dataTable As DSPaymentList.tblPatientReceiptDataTable = New DSPaymentList.tblPatientReceiptDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSPaymentList.tblPatientReceiptDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSPaymentList) As Integer
            Return Me.Adapter.Update(dataSet, "tblPatientReceipt")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Long,  _
                    ByVal Original_ReceiptNo As Long,  _
                    ByVal Original_IDCashReceipt As String,  _
                    ByVal Original_HN As Decimal,  _
                    ByVal Original_PatientName As String,  _
                    ByVal Original_CashRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_CashUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_TotalRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_TotalUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_OperationFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_OperationFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_ArtificialEyeFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_ArtificialEyeFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_OtherFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_OtherFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_ConsultationFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_ConsultationFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_FollowUpFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_FollowUpFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_MedicineFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_MedicineFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_GlassFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_GlassFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_SocialFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_SocialFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_FullFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_FullFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_Rates As Global.System.Nullable(Of Double),  _
                    ByVal Original_AmoutWord As String,  _
                    ByVal Original_ConOP As String,  _
                    ByVal Original_ConAE As String,  _
                    ByVal Original_ConOT As String,  _
                    ByVal Original_ConCON As String,  _
                    ByVal Original_ConFOL As String,  _
                    ByVal Original_ConMED As String,  _
                    ByVal Original_ConGLA As String,  _
                    ByVal Original_ConSocialFee As String,  _
                    ByVal Original_ConFullFee As String,  _
                    ByVal Original_ConGeneral As String,  _
                    ByVal Original_CashierIn As String,  _
                    ByVal Original_CashierUpdate As String,  _
                    ByVal Original_PrintCount As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DateIn As Global.System.Nullable(Of Date),  _
                    ByVal Original_DateUpdate As Global.System.Nullable(Of Date),  _
                    ByVal Original_DateNow As Global.System.Nullable(Of Date),  _
                    ByVal Original_ConPay As String,  _
                    ByVal Original_ConDelete As String,  _
                    ByVal Original_Years As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Operation As String,  _
                    ByVal Original_IsDonation As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_DonationID As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DonationName As String,  _
                    ByVal Original_DonationPay As Global.System.Nullable(Of Double),  _
                    ByVal Original_DonateNote As String,  _
                    ByVal Original_HosFee As Global.System.Nullable(Of Double),  _
                    ByVal Original_CashTotal As Global.System.Nullable(Of Double),  _
                    ByVal Original_IsPatientNill As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TIME_CREATE As String,  _
                    ByVal Original_TIME_ISSUE As String,  _
                    ByVal Original_ReceiptNote As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Long)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ReceiptNo,Long)
            If (Original_IDCashReceipt Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_IDCashReceipt")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_IDCashReceipt,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_HN,Decimal)
            If (Original_PatientName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_PatientName,String)
            End If
            If (Original_CashRiel.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_CashRiel.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_CashUSD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_CashUSD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalRiel.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_TotalRiel.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalUSD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_TotalUSD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_OperationFeeRiel.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_OperationFeeRiel.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_OperationFeeUSD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_OperationFeeUSD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_ArtificialEyeFeeRiel.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_ArtificialEyeFeeRiel.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_ArtificialEyeFeeUSD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_ArtificialEyeFeeUSD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_OtherFeeRiel.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_OtherFeeRiel.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_OtherFeeUSD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_OtherFeeUSD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_ConsultationFeeRiel.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_ConsultationFeeRiel.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_ConsultationFeeUSD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_ConsultationFeeUSD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_FollowUpFeeRiel.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_FollowUpFeeRiel.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_FollowUpFeeUSD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_FollowUpFeeUSD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_MedicineFeeRiel.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_MedicineFeeRiel.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_MedicineFeeUSD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_MedicineFeeUSD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_GlassFeeRiel.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_GlassFeeRiel.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_GlassFeeUSD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_GlassFeeUSD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_SocialFeeRiel.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_SocialFeeRiel.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_SocialFeeUSD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_SocialFeeUSD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_FullFeeRiel.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_FullFeeRiel.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_FullFeeUSD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_FullFeeUSD.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_Rates.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_Rates.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_AmoutWord Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_AmoutWord,String)
            End If
            If (Original_ConOP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(Original_ConOP,String)
            End If
            If (Original_ConAE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(Original_ConAE,String)
            End If
            If (Original_ConOT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(Original_ConOT,String)
            End If
            If (Original_ConCON Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(Original_ConCON,String)
            End If
            If (Original_ConFOL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(Original_ConFOL,String)
            End If
            If (Original_ConMED Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(Original_ConMED,String)
            End If
            If (Original_ConGLA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(Original_ConGLA,String)
            End If
            If (Original_ConSocialFee Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(Original_ConSocialFee,String)
            End If
            If (Original_ConFullFee Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(Original_ConFullFee,String)
            End If
            If (Original_ConGeneral Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(Original_ConGeneral,String)
            End If
            If (Original_CashierIn Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(Original_CashierIn,String)
            End If
            If (Original_CashierUpdate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(Original_CashierUpdate,String)
            End If
            If (Original_PrintCount.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(Original_PrintCount.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_DateIn.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(Original_DateIn.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_DateUpdate.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(Original_DateUpdate.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_DateNow.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(Original_DateNow.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Original_ConPay Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(Original_ConPay,String)
            End If
            If (Original_ConDelete Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(Original_ConDelete,String)
            End If
            If (Original_Years.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(Original_Years.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Original_Operation Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(Original_Operation,String)
            End If
            If (Original_IsDonation.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(Original_IsDonation.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (Original_DonationID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(Original_DonationID.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            If (Original_DonationName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(Original_DonationName,String)
            End If
            If (Original_DonationPay.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(Original_DonationPay.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(101).Value = Global.System.DBNull.Value
            End If
            If (Original_DonateNote Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(Original_DonateNote,String)
            End If
            If (Original_HosFee.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(Original_HosFee.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (Original_CashTotal.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(Original_CashTotal.Value,Double)
            Else
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(107).Value = Global.System.DBNull.Value
            End If
            If (Original_IsPatientNill.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(Original_IsPatientNill.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (Original_TIME_CREATE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(Original_TIME_CREATE,String)
            End If
            If (Original_TIME_ISSUE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(113).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(Original_TIME_ISSUE,String)
            End If
            If (Original_ReceiptNote Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(115).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(Original_ReceiptNote,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ReceiptNo As Long,  _
                    ByVal IDCashReceipt As String,  _
                    ByVal HN As Decimal,  _
                    ByVal PatientName As String,  _
                    ByVal CashRiel As Global.System.Nullable(Of Double),  _
                    ByVal CashUSD As Global.System.Nullable(Of Double),  _
                    ByVal TotalRiel As Global.System.Nullable(Of Double),  _
                    ByVal TotalUSD As Global.System.Nullable(Of Double),  _
                    ByVal OperationFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal OperationFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal ArtificialEyeFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal ArtificialEyeFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal OtherFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal OtherFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal ConsultationFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal ConsultationFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal FollowUpFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal FollowUpFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal MedicineFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal MedicineFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal GlassFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal GlassFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal SocialFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal SocialFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal FullFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal FullFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Rates As Global.System.Nullable(Of Double),  _
                    ByVal AmoutWord As String,  _
                    ByVal ConOP As String,  _
                    ByVal ConAE As String,  _
                    ByVal ConOT As String,  _
                    ByVal ConCON As String,  _
                    ByVal ConFOL As String,  _
                    ByVal ConMED As String,  _
                    ByVal ConGLA As String,  _
                    ByVal ConSocialFee As String,  _
                    ByVal ConFullFee As String,  _
                    ByVal ConGeneral As String,  _
                    ByVal CashierIn As String,  _
                    ByVal CashierUpdate As String,  _
                    ByVal PrintCount As Global.System.Nullable(Of Integer),  _
                    ByVal DateIn As Global.System.Nullable(Of Date),  _
                    ByVal DateUpdate As Global.System.Nullable(Of Date),  _
                    ByVal DateNow As Global.System.Nullable(Of Date),  _
                    ByVal ConPay As String,  _
                    ByVal ConDelete As String,  _
                    ByVal Years As Global.System.Nullable(Of Integer),  _
                    ByVal Operation As String,  _
                    ByVal IsDonation As Global.System.Nullable(Of Boolean),  _
                    ByVal DonationID As Global.System.Nullable(Of Decimal),  _
                    ByVal DonationName As String,  _
                    ByVal DonationPay As Global.System.Nullable(Of Double),  _
                    ByVal DonateNote As String,  _
                    ByVal HosFee As Global.System.Nullable(Of Double),  _
                    ByVal CashTotal As Global.System.Nullable(Of Double),  _
                    ByVal IsPatientNill As Global.System.Nullable(Of Boolean),  _
                    ByVal TIME_CREATE As String,  _
                    ByVal TIME_ISSUE As String,  _
                    ByVal ReceiptNote As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ReceiptNo,Long)
            If (IDCashReceipt Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDCashReceipt")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(IDCashReceipt,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(HN,Decimal)
            If (PatientName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PatientName,String)
            End If
            If (CashRiel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CashRiel.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (CashUSD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CashUSD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (TotalRiel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(TotalRiel.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (TotalUSD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(TotalUSD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (OperationFeeRiel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(OperationFeeRiel.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (OperationFeeUSD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(OperationFeeUSD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (ArtificialEyeFeeRiel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ArtificialEyeFeeRiel.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (ArtificialEyeFeeUSD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ArtificialEyeFeeUSD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (OtherFeeRiel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(OtherFeeRiel.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (OtherFeeUSD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(OtherFeeUSD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (ConsultationFeeRiel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(ConsultationFeeRiel.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (ConsultationFeeUSD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(ConsultationFeeUSD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (FollowUpFeeRiel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(FollowUpFeeRiel.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (FollowUpFeeUSD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(FollowUpFeeUSD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (MedicineFeeRiel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(MedicineFeeRiel.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (MedicineFeeUSD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(MedicineFeeUSD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (GlassFeeRiel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(GlassFeeRiel.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (GlassFeeUSD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(GlassFeeUSD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (SocialFeeRiel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(SocialFeeRiel.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (SocialFeeUSD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(SocialFeeUSD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (FullFeeRiel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(FullFeeRiel.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (FullFeeUSD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(FullFeeUSD.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Rates.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Rates.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (AmoutWord Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(AmoutWord,String)
            End If
            If (ConOP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(ConOP,String)
            End If
            If (ConAE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(ConAE,String)
            End If
            If (ConOT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(ConOT,String)
            End If
            If (ConCON Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(ConCON,String)
            End If
            If (ConFOL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(ConFOL,String)
            End If
            If (ConMED Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(ConMED,String)
            End If
            If (ConGLA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(ConGLA,String)
            End If
            If (ConSocialFee Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(ConSocialFee,String)
            End If
            If (ConFullFee Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(ConFullFee,String)
            End If
            If (ConGeneral Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(ConGeneral,String)
            End If
            If (CashierIn Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(CashierIn,String)
            End If
            If (CashierUpdate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(CashierUpdate,String)
            End If
            If (PrintCount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(PrintCount.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (DateIn.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(DateIn.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (DateUpdate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(DateUpdate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (DateNow.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(DateNow.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (ConPay Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(ConPay,String)
            End If
            If (ConDelete Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(ConDelete,String)
            End If
            If (Years.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(Years.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Operation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(Operation,String)
            End If
            If (IsDonation.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(IsDonation.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (DonationID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(DonationID.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (DonationName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(DonationName,String)
            End If
            If (DonationPay.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(DonationPay.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (DonateNote Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(DonateNote,String)
            End If
            If (HosFee.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(HosFee.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (CashTotal.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(CashTotal.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (IsPatientNill.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(IsPatientNill.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (TIME_CREATE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(TIME_CREATE,String)
            End If
            If (TIME_ISSUE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(TIME_ISSUE,String)
            End If
            If (ReceiptNote Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(ReceiptNote,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ReceiptNo As Long,  _
                    ByVal IDCashReceipt As String,  _
                    ByVal HN As Decimal,  _
                    ByVal PatientName As String,  _
                    ByVal CashRiel As Global.System.Nullable(Of Double),  _
                    ByVal CashUSD As Global.System.Nullable(Of Double),  _
                    ByVal TotalRiel As Global.System.Nullable(Of Double),  _
                    ByVal TotalUSD As Global.System.Nullable(Of Double),  _
                    ByVal OperationFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal OperationFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal ArtificialEyeFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal ArtificialEyeFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal OtherFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal OtherFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal ConsultationFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal ConsultationFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal FollowUpFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal FollowUpFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal MedicineFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal MedicineFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal GlassFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal GlassFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal SocialFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal SocialFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal FullFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal FullFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Rates As Global.System.Nullable(Of Double),  _
                    ByVal AmoutWord As String,  _
                    ByVal ConOP As String,  _
                    ByVal ConAE As String,  _
                    ByVal ConOT As String,  _
                    ByVal ConCON As String,  _
                    ByVal ConFOL As String,  _
                    ByVal ConMED As String,  _
                    ByVal ConGLA As String,  _
                    ByVal ConSocialFee As String,  _
                    ByVal ConFullFee As String,  _
                    ByVal ConGeneral As String,  _
                    ByVal CashierIn As String,  _
                    ByVal CashierUpdate As String,  _
                    ByVal PrintCount As Global.System.Nullable(Of Integer),  _
                    ByVal DateIn As Global.System.Nullable(Of Date),  _
                    ByVal DateUpdate As Global.System.Nullable(Of Date),  _
                    ByVal DateNow As Global.System.Nullable(Of Date),  _
                    ByVal ConPay As String,  _
                    ByVal ConDelete As String,  _
                    ByVal Years As Global.System.Nullable(Of Integer),  _
                    ByVal Operation As String,  _
                    ByVal IsDonation As Global.System.Nullable(Of Boolean),  _
                    ByVal DonationID As Global.System.Nullable(Of Decimal),  _
                    ByVal DonationName As String,  _
                    ByVal DonationPay As Global.System.Nullable(Of Double),  _
                    ByVal DonateNote As String,  _
                    ByVal HosFee As Global.System.Nullable(Of Double),  _
                    ByVal CashTotal As Global.System.Nullable(Of Double),  _
                    ByVal IsPatientNill As Global.System.Nullable(Of Boolean),  _
                    ByVal TIME_CREATE As String,  _
                    ByVal TIME_ISSUE As String,  _
                    ByVal ReceiptNote As String,  _
                    ByVal Original_ID As Long,  _
                    ByVal Original_ReceiptNo As Long,  _
                    ByVal Original_IDCashReceipt As String,  _
                    ByVal Original_HN As Decimal,  _
                    ByVal Original_PatientName As String,  _
                    ByVal Original_CashRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_CashUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_TotalRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_TotalUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_OperationFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_OperationFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_ArtificialEyeFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_ArtificialEyeFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_OtherFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_OtherFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_ConsultationFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_ConsultationFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_FollowUpFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_FollowUpFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_MedicineFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_MedicineFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_GlassFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_GlassFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_SocialFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_SocialFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_FullFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_FullFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_Rates As Global.System.Nullable(Of Double),  _
                    ByVal Original_AmoutWord As String,  _
                    ByVal Original_ConOP As String,  _
                    ByVal Original_ConAE As String,  _
                    ByVal Original_ConOT As String,  _
                    ByVal Original_ConCON As String,  _
                    ByVal Original_ConFOL As String,  _
                    ByVal Original_ConMED As String,  _
                    ByVal Original_ConGLA As String,  _
                    ByVal Original_ConSocialFee As String,  _
                    ByVal Original_ConFullFee As String,  _
                    ByVal Original_ConGeneral As String,  _
                    ByVal Original_CashierIn As String,  _
                    ByVal Original_CashierUpdate As String,  _
                    ByVal Original_PrintCount As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DateIn As Global.System.Nullable(Of Date),  _
                    ByVal Original_DateUpdate As Global.System.Nullable(Of Date),  _
                    ByVal Original_DateNow As Global.System.Nullable(Of Date),  _
                    ByVal Original_ConPay As String,  _
                    ByVal Original_ConDelete As String,  _
                    ByVal Original_Years As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Operation As String,  _
                    ByVal Original_IsDonation As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_DonationID As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DonationName As String,  _
                    ByVal Original_DonationPay As Global.System.Nullable(Of Double),  _
                    ByVal Original_DonateNote As String,  _
                    ByVal Original_HosFee As Global.System.Nullable(Of Double),  _
                    ByVal Original_CashTotal As Global.System.Nullable(Of Double),  _
                    ByVal Original_IsPatientNill As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TIME_CREATE As String,  _
                    ByVal Original_TIME_ISSUE As String,  _
                    ByVal Original_ReceiptNote As String,  _
                    ByVal ID As Long) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ReceiptNo,Long)
            If (IDCashReceipt Is Nothing) Then
                Throw New Global.System.ArgumentNullException("IDCashReceipt")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(IDCashReceipt,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(HN,Decimal)
            If (PatientName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PatientName,String)
            End If
            If (CashRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CashRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (CashUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CashUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (TotalRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(TotalRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (TotalUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(TotalUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (OperationFeeRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(OperationFeeRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (OperationFeeUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(OperationFeeUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (ArtificialEyeFeeRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ArtificialEyeFeeRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (ArtificialEyeFeeUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ArtificialEyeFeeUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (OtherFeeRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(OtherFeeRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (OtherFeeUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(OtherFeeUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (ConsultationFeeRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(ConsultationFeeRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (ConsultationFeeUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(ConsultationFeeUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (FollowUpFeeRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(FollowUpFeeRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (FollowUpFeeUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(FollowUpFeeUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (MedicineFeeRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(MedicineFeeRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (MedicineFeeUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(MedicineFeeUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (GlassFeeRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(GlassFeeRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (GlassFeeUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(GlassFeeUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (SocialFeeRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(SocialFeeRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (SocialFeeUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(SocialFeeUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (FullFeeRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(FullFeeRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (FullFeeUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(FullFeeUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Rates.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Rates.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (AmoutWord Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(AmoutWord,String)
            End If
            If (ConOP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(ConOP,String)
            End If
            If (ConAE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(ConAE,String)
            End If
            If (ConOT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(ConOT,String)
            End If
            If (ConCON Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(ConCON,String)
            End If
            If (ConFOL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(ConFOL,String)
            End If
            If (ConMED Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(ConMED,String)
            End If
            If (ConGLA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(ConGLA,String)
            End If
            If (ConSocialFee Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(ConSocialFee,String)
            End If
            If (ConFullFee Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(ConFullFee,String)
            End If
            If (ConGeneral Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(ConGeneral,String)
            End If
            If (CashierIn Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(CashierIn,String)
            End If
            If (CashierUpdate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(CashierUpdate,String)
            End If
            If (PrintCount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(PrintCount.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (DateIn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(DateIn.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (DateUpdate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(DateUpdate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (DateNow.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(DateNow.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (ConPay Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(ConPay,String)
            End If
            If (ConDelete Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(ConDelete,String)
            End If
            If (Years.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Years.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Operation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Operation,String)
            End If
            If (IsDonation.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(IsDonation.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (DonationID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(DonationID.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (DonationName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(DonationName,String)
            End If
            If (DonationPay.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(DonationPay.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (DonateNote Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(DonateNote,String)
            End If
            If (HosFee.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(HosFee.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (CashTotal.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(CashTotal.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (IsPatientNill.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(IsPatientNill.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (TIME_CREATE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(TIME_CREATE,String)
            End If
            If (TIME_ISSUE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(TIME_ISSUE,String)
            End If
            If (ReceiptNote Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(ReceiptNote,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_ID,Long)
            Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_ReceiptNo,Long)
            If (Original_IDCashReceipt Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_IDCashReceipt")
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_IDCashReceipt,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_HN,Decimal)
            If (Original_PatientName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_PatientName,String)
            End If
            If (Original_CashRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_CashRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_CashUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_CashUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_TotalRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_TotalUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_TotalUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_OperationFeeRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_OperationFeeRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_OperationFeeUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_OperationFeeUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (Original_ArtificialEyeFeeRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_ArtificialEyeFeeRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (Original_ArtificialEyeFeeUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_ArtificialEyeFeeUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_OtherFeeRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_OtherFeeRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_OtherFeeUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_OtherFeeUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_ConsultationFeeRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_ConsultationFeeRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_ConsultationFeeUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_ConsultationFeeUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_FollowUpFeeRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_FollowUpFeeRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_FollowUpFeeUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_FollowUpFeeUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_MedicineFeeRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_MedicineFeeRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_MedicineFeeUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_MedicineFeeUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Original_GlassFeeRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_GlassFeeRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_GlassFeeUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_GlassFeeUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Original_SocialFeeRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_SocialFeeRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Original_SocialFeeUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_SocialFeeUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_FullFeeRiel.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_FullFeeRiel.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Original_FullFeeUSD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_FullFeeUSD.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            End If
            If (Original_Rates.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_Rates.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (Original_AmoutWord Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Original_AmoutWord,String)
            End If
            If (Original_ConOP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Original_ConOP,String)
            End If
            If (Original_ConAE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Original_ConAE,String)
            End If
            If (Original_ConOT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Original_ConOT,String)
            End If
            If (Original_ConCON Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Original_ConCON,String)
            End If
            If (Original_ConFOL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Original_ConFOL,String)
            End If
            If (Original_ConMED Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Original_ConMED,String)
            End If
            If (Original_ConGLA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Original_ConGLA,String)
            End If
            If (Original_ConSocialFee Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(Original_ConSocialFee,String)
            End If
            If (Original_ConFullFee Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(Original_ConFullFee,String)
            End If
            If (Original_ConGeneral Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(Original_ConGeneral,String)
            End If
            If (Original_CashierIn Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(Original_CashierIn,String)
            End If
            If (Original_CashierUpdate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(Original_CashierUpdate,String)
            End If
            If (Original_PrintCount.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(Original_PrintCount.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = Global.System.DBNull.Value
            End If
            If (Original_DateIn.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(Original_DateIn.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = Global.System.DBNull.Value
            End If
            If (Original_DateUpdate.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(Original_DateUpdate.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = Global.System.DBNull.Value
            End If
            If (Original_DateNow.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(Original_DateNow.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = Global.System.DBNull.Value
            End If
            If (Original_ConPay Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(Original_ConPay,String)
            End If
            If (Original_ConDelete Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(Original_ConDelete,String)
            End If
            If (Original_Years.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(Original_Years.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = Global.System.DBNull.Value
            End If
            If (Original_Operation Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(Original_Operation,String)
            End If
            If (Original_IsDonation.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(Original_IsDonation.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = Global.System.DBNull.Value
            End If
            If (Original_DonationID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(Original_DonationID.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = Global.System.DBNull.Value
            End If
            If (Original_DonationName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(Original_DonationName,String)
            End If
            If (Original_DonationPay.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(Original_DonationPay.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = Global.System.DBNull.Value
            End If
            If (Original_DonateNote Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(Original_DonateNote,String)
            End If
            If (Original_HosFee.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(Original_HosFee.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = Global.System.DBNull.Value
            End If
            If (Original_CashTotal.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(Original_CashTotal.Value,Double)
            Else
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = Global.System.DBNull.Value
            End If
            If (Original_IsPatientNill.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(Original_IsPatientNill.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = Global.System.DBNull.Value
            End If
            If (Original_TIME_CREATE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(Original_TIME_CREATE,String)
            End If
            If (Original_TIME_ISSUE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(Original_TIME_ISSUE,String)
            End If
            If (Original_ReceiptNote Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(Original_ReceiptNote,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(175).Value = CType(ID,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ReceiptNo As Long,  _
                    ByVal IDCashReceipt As String,  _
                    ByVal HN As Decimal,  _
                    ByVal PatientName As String,  _
                    ByVal CashRiel As Global.System.Nullable(Of Double),  _
                    ByVal CashUSD As Global.System.Nullable(Of Double),  _
                    ByVal TotalRiel As Global.System.Nullable(Of Double),  _
                    ByVal TotalUSD As Global.System.Nullable(Of Double),  _
                    ByVal OperationFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal OperationFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal ArtificialEyeFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal ArtificialEyeFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal OtherFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal OtherFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal ConsultationFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal ConsultationFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal FollowUpFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal FollowUpFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal MedicineFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal MedicineFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal GlassFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal GlassFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal SocialFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal SocialFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal FullFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal FullFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Rates As Global.System.Nullable(Of Double),  _
                    ByVal AmoutWord As String,  _
                    ByVal ConOP As String,  _
                    ByVal ConAE As String,  _
                    ByVal ConOT As String,  _
                    ByVal ConCON As String,  _
                    ByVal ConFOL As String,  _
                    ByVal ConMED As String,  _
                    ByVal ConGLA As String,  _
                    ByVal ConSocialFee As String,  _
                    ByVal ConFullFee As String,  _
                    ByVal ConGeneral As String,  _
                    ByVal CashierIn As String,  _
                    ByVal CashierUpdate As String,  _
                    ByVal PrintCount As Global.System.Nullable(Of Integer),  _
                    ByVal DateIn As Global.System.Nullable(Of Date),  _
                    ByVal DateUpdate As Global.System.Nullable(Of Date),  _
                    ByVal DateNow As Global.System.Nullable(Of Date),  _
                    ByVal ConPay As String,  _
                    ByVal ConDelete As String,  _
                    ByVal Years As Global.System.Nullable(Of Integer),  _
                    ByVal Operation As String,  _
                    ByVal IsDonation As Global.System.Nullable(Of Boolean),  _
                    ByVal DonationID As Global.System.Nullable(Of Decimal),  _
                    ByVal DonationName As String,  _
                    ByVal DonationPay As Global.System.Nullable(Of Double),  _
                    ByVal DonateNote As String,  _
                    ByVal HosFee As Global.System.Nullable(Of Double),  _
                    ByVal CashTotal As Global.System.Nullable(Of Double),  _
                    ByVal IsPatientNill As Global.System.Nullable(Of Boolean),  _
                    ByVal TIME_CREATE As String,  _
                    ByVal TIME_ISSUE As String,  _
                    ByVal ReceiptNote As String,  _
                    ByVal Original_ID As Long,  _
                    ByVal Original_ReceiptNo As Long,  _
                    ByVal Original_IDCashReceipt As String,  _
                    ByVal Original_HN As Decimal,  _
                    ByVal Original_PatientName As String,  _
                    ByVal Original_CashRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_CashUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_TotalRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_TotalUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_OperationFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_OperationFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_ArtificialEyeFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_ArtificialEyeFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_OtherFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_OtherFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_ConsultationFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_ConsultationFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_FollowUpFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_FollowUpFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_MedicineFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_MedicineFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_GlassFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_GlassFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_SocialFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_SocialFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_FullFeeRiel As Global.System.Nullable(Of Double),  _
                    ByVal Original_FullFeeUSD As Global.System.Nullable(Of Double),  _
                    ByVal Original_Rates As Global.System.Nullable(Of Double),  _
                    ByVal Original_AmoutWord As String,  _
                    ByVal Original_ConOP As String,  _
                    ByVal Original_ConAE As String,  _
                    ByVal Original_ConOT As String,  _
                    ByVal Original_ConCON As String,  _
                    ByVal Original_ConFOL As String,  _
                    ByVal Original_ConMED As String,  _
                    ByVal Original_ConGLA As String,  _
                    ByVal Original_ConSocialFee As String,  _
                    ByVal Original_ConFullFee As String,  _
                    ByVal Original_ConGeneral As String,  _
                    ByVal Original_CashierIn As String,  _
                    ByVal Original_CashierUpdate As String,  _
                    ByVal Original_PrintCount As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DateIn As Global.System.Nullable(Of Date),  _
                    ByVal Original_DateUpdate As Global.System.Nullable(Of Date),  _
                    ByVal Original_DateNow As Global.System.Nullable(Of Date),  _
                    ByVal Original_ConPay As String,  _
                    ByVal Original_ConDelete As String,  _
                    ByVal Original_Years As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Operation As String,  _
                    ByVal Original_IsDonation As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_DonationID As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DonationName As String,  _
                    ByVal Original_DonationPay As Global.System.Nullable(Of Double),  _
                    ByVal Original_DonateNote As String,  _
                    ByVal Original_HosFee As Global.System.Nullable(Of Double),  _
                    ByVal Original_CashTotal As Global.System.Nullable(Of Double),  _
                    ByVal Original_IsPatientNill As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TIME_CREATE As String,  _
                    ByVal Original_TIME_ISSUE As String,  _
                    ByVal Original_ReceiptNote As String) As Integer
            Return Me.Update(ReceiptNo, IDCashReceipt, HN, PatientName, CashRiel, CashUSD, TotalRiel, TotalUSD, OperationFeeRiel, OperationFeeUSD, ArtificialEyeFeeRiel, ArtificialEyeFeeUSD, OtherFeeRiel, OtherFeeUSD, ConsultationFeeRiel, ConsultationFeeUSD, FollowUpFeeRiel, FollowUpFeeUSD, MedicineFeeRiel, MedicineFeeUSD, GlassFeeRiel, GlassFeeUSD, SocialFeeRiel, SocialFeeUSD, FullFeeRiel, FullFeeUSD, Rates, AmoutWord, ConOP, ConAE, ConOT, ConCON, ConFOL, ConMED, ConGLA, ConSocialFee, ConFullFee, ConGeneral, CashierIn, CashierUpdate, PrintCount, DateIn, DateUpdate, DateNow, ConPay, ConDelete, Years, Operation, IsDonation, DonationID, DonationName, DonationPay, DonateNote, HosFee, CashTotal, IsPatientNill, TIME_CREATE, TIME_ISSUE, ReceiptNote, Original_ID, Original_ReceiptNo, Original_IDCashReceipt, Original_HN, Original_PatientName, Original_CashRiel, Original_CashUSD, Original_TotalRiel, Original_TotalUSD, Original_OperationFeeRiel, Original_OperationFeeUSD, Original_ArtificialEyeFeeRiel, Original_ArtificialEyeFeeUSD, Original_OtherFeeRiel, Original_OtherFeeUSD, Original_ConsultationFeeRiel, Original_ConsultationFeeUSD, Original_FollowUpFeeRiel, Original_FollowUpFeeUSD, Original_MedicineFeeRiel, Original_MedicineFeeUSD, Original_GlassFeeRiel, Original_GlassFeeUSD, Original_SocialFeeRiel, Original_SocialFeeUSD, Original_FullFeeRiel, Original_FullFeeUSD, Original_Rates, Original_AmoutWord, Original_ConOP, Original_ConAE, Original_ConOT, Original_ConCON, Original_ConFOL, Original_ConMED, Original_ConGLA, Original_ConSocialFee, Original_ConFullFee, Original_ConGeneral, Original_CashierIn, Original_CashierUpdate, Original_PrintCount, Original_DateIn, Original_DateUpdate, Original_DateNow, Original_ConPay, Original_ConDelete, Original_Years, Original_Operation, Original_IsDonation, Original_DonationID, Original_DonationName, Original_DonationPay, Original_DonateNote, Original_HosFee, Original_CashTotal, Original_IsPatientNill, Original_TIME_CREATE, Original_TIME_ISSUE, Original_ReceiptNote, Original_ID)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class V_DeletePaymentTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "V_DeletePayment"
            tableMapping.ColumnMappings.Add("HN", "HN")
            tableMapping.ColumnMappings.Add("PatientName", "PatientName")
            tableMapping.ColumnMappings.Add("ReceiptNo", "ReceiptNo")
            tableMapping.ColumnMappings.Add("IDCashReceipt", "IDCashReceipt")
            tableMapping.ColumnMappings.Add("ConPay", "ConPay")
            tableMapping.ColumnMappings.Add("ConGeneral", "ConGeneral")
            tableMapping.ColumnMappings.Add("DateIn", "DateIn")
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("ReceiptNote", "ReceiptNote")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.TakeoHospitalInventory.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT HN, PatientName, ReceiptNo, IDCashReceipt, ConPay, ConGeneral, DateIn, ID,"& _ 
                " ReceiptNote FROM dbo.V_DeletePayment"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        HN, PatientName, ReceiptNo, IDCashReceipt, ConPay, ConGeneral, Date"& _ 
                "In, ID, ReceiptNote"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            dbo.V_DeletePayment"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE       (CAST(CONV"& _ 
                "ERT(VARCHAR(10), DateIn, 1) AS DateTime) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"BETWEEN "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"CAST(CONVERT(VARCHAR(10), C"& _ 
                "AST(@DateFrom AS DATETIME), 1) AS Datetime) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"CAST(CONVERT(VARCHAR(10), CA"& _ 
                "ST(@DateTo AS DATETIME), 1) AS Datetime))"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateFrom", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateTo", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSPaymentList.V_DeletePaymentDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSPaymentList.V_DeletePaymentDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSPaymentList.V_DeletePaymentDataTable = New DSPaymentList.V_DeletePaymentDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSPaymentList.V_DeletePaymentDataTable, ByVal DateFrom As Date, ByVal DateTo As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateFrom,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DateTo,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal DateFrom As Date, ByVal DateTo As Date) As DSPaymentList.V_DeletePaymentDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateFrom,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DateTo,Date)
            Dim dataTable As DSPaymentList.V_DeletePaymentDataTable = New DSPaymentList.V_DeletePaymentDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _tblPatientReceiptTableAdapter As tblPatientReceiptTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property tblPatientReceiptTableAdapter() As tblPatientReceiptTableAdapter
            Get
                Return Me._tblPatientReceiptTableAdapter
            End Get
            Set
                Me._tblPatientReceiptTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._tblPatientReceiptTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblPatientReceiptTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblPatientReceiptTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._tblPatientReceiptTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DSPaymentList, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblPatientReceiptTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.tblPatientReceipt.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblPatientReceiptTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DSPaymentList, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblPatientReceiptTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.tblPatientReceipt.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblPatientReceiptTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DSPaymentList, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tblPatientReceiptTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.tblPatientReceipt.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblPatientReceiptTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DSPaymentList) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._tblPatientReceiptTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblPatientReceiptTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._tblPatientReceiptTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblPatientReceiptTableAdapter, Me._tblPatientReceiptTableAdapter.Connection)
                    Me._tblPatientReceiptTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblPatientReceiptTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblPatientReceiptTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblPatientReceiptTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblPatientReceiptTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._tblPatientReceiptTableAdapter) Is Nothing) Then
                    Me._tblPatientReceiptTableAdapter.Connection = CType(revertConnections(Me._tblPatientReceiptTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblPatientReceiptTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Private Function IsChildAndParent(ByVal child As Global.System.Data.DataRow, ByVal parent As Global.System.Data.DataRow) As Boolean
                Global.System.Diagnostics.Debug.Assert((Not (child) Is Nothing))
                Global.System.Diagnostics.Debug.Assert((Not (parent) Is Nothing))
                Dim newParent As Global.System.Data.DataRow = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (newParent) Is Nothing)  _
                            AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                            AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                    newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop
                If (newParent Is Nothing) Then
                    newParent = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)
                    Do While ((Not (newParent) Is Nothing)  _
                                AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                                AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                        newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If
                If Object.ReferenceEquals(newParent, parent) Then
                    Return true
                End If
                Return false
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                'Is row1 the child or grandchild of row2
                If Me.IsChildAndParent(row1, row2) Then
                    Return Me._childFirst
                End If

                'Is row2 the child or grandchild of row1
                If Me.IsChildAndParent(row2, row1) Then
                    Return (-1 * Me._childFirst)
                End If
                Return 0
            End Function
        End Class
    End Class
End Namespace
